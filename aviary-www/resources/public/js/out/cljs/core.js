// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__34088__delegate = function (args){
return console.log.apply(console,(function (){var G__34087 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__34087) : cljs.core.into_array.call(null,G__34087));
})());
};
var G__34088 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34089__i = 0, G__34089__a = new Array(arguments.length -  0);
while (G__34089__i < G__34089__a.length) {G__34089__a[G__34089__i] = arguments[G__34089__i + 0]; ++G__34089__i;}
  args = new cljs.core.IndexedSeq(G__34089__a,0);
} 
return G__34088__delegate.call(this,args);};
G__34088.cljs$lang$maxFixedArity = 0;
G__34088.cljs$lang$applyTo = (function (arglist__34090){
var args = cljs.core.seq(arglist__34090);
return G__34088__delegate(args);
});
G__34088.cljs$core$IFn$_invoke$arity$variadic = G__34088__delegate;
return G__34088;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__34092 = x;
return goog.isString(G__34092);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__34094 = x__$1;
return goog.typeOf(G__34094);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__23665__auto__ = ty;
if(cljs.core.truth_(and__23665__auto__)){
return ty.cljs$lang$type;
} else {
return and__23665__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__34096 = obj;
return goog.typeOf(G__34096);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__34098 = Symbol;
return goog.typeOf(G__34098);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__24564__auto___34100 = len;
var i_34101 = (0);
while(true){
if((i_34101 < n__24564__auto___34100)){
(new_arr[i_34101] = (arr[i_34101]));

var G__34102 = (i_34101 + (1));
i_34101 = G__34102;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__34103 = (i + (1));
i = G__34103;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__34112__delegate = function (array,i,idxs){
var G__34109 = aget;
var G__34110 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__34111 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__34109,G__34110,G__34111) : cljs.core.apply.call(null,G__34109,G__34110,G__34111));
};
var G__34112 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__34113__i = 0, G__34113__a = new Array(arguments.length -  2);
while (G__34113__i < G__34113__a.length) {G__34113__a[G__34113__i] = arguments[G__34113__i + 2]; ++G__34113__i;}
  idxs = new cljs.core.IndexedSeq(G__34113__a,0);
} 
return G__34112__delegate.call(this,array,i,idxs);};
G__34112.cljs$lang$maxFixedArity = 2;
G__34112.cljs$lang$applyTo = (function (arglist__34114){
var array = cljs.core.first(arglist__34114);
arglist__34114 = cljs.core.next(arglist__34114);
var i = cljs.core.first(arglist__34114);
var idxs = cljs.core.rest(arglist__34114);
return G__34112__delegate(array,i,idxs);
});
G__34112.cljs$core$IFn$_invoke$arity$variadic = G__34112__delegate;
return G__34112;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__34115 = null;
if (arguments.length > 2) {
var G__34116__i = 0, G__34116__a = new Array(arguments.length -  2);
while (G__34116__i < G__34116__a.length) {G__34116__a[G__34116__i] = arguments[G__34116__i + 2]; ++G__34116__i;}
G__34115 = new cljs.core.IndexedSeq(G__34116__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__34115);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__34125__delegate = function (array,idx,idx2,idxv){
var G__34121 = aset;
var G__34122 = (array[idx]);
var G__34123 = idx2;
var G__34124 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__34121,G__34122,G__34123,G__34124) : cljs.core.apply.call(null,G__34121,G__34122,G__34123,G__34124));
};
var G__34125 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__34126__i = 0, G__34126__a = new Array(arguments.length -  3);
while (G__34126__i < G__34126__a.length) {G__34126__a[G__34126__i] = arguments[G__34126__i + 3]; ++G__34126__i;}
  idxv = new cljs.core.IndexedSeq(G__34126__a,0);
} 
return G__34125__delegate.call(this,array,idx,idx2,idxv);};
G__34125.cljs$lang$maxFixedArity = 3;
G__34125.cljs$lang$applyTo = (function (arglist__34127){
var array = cljs.core.first(arglist__34127);
arglist__34127 = cljs.core.next(arglist__34127);
var idx = cljs.core.first(arglist__34127);
arglist__34127 = cljs.core.next(arglist__34127);
var idx2 = cljs.core.first(arglist__34127);
var idxv = cljs.core.rest(arglist__34127);
return G__34125__delegate(array,idx,idx2,idxv);
});
G__34125.cljs$core$IFn$_invoke$arity$variadic = G__34125__delegate;
return G__34125;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__34128 = null;
if (arguments.length > 3) {
var G__34129__i = 0, G__34129__a = new Array(arguments.length -  3);
while (G__34129__i < G__34129__a.length) {G__34129__a[G__34129__i] = arguments[G__34129__i + 3]; ++G__34129__i;}
G__34128 = new cljs.core.IndexedSeq(G__34129__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__34128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__34135 = (function (a,x){
a.push(x);

return a;
});
var G__34136 = [];
var G__34137 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__34135,G__34136,G__34137) : cljs.core.reduce.call(null,G__34135,G__34136,G__34137));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__34138__i = 0, G__34138__a = new Array(arguments.length -  2);
while (G__34138__i < G__34138__a.length) {G__34138__a[G__34138__i] = arguments[G__34138__i + 2]; ++G__34138__i;}
  args = new cljs.core.IndexedSeq(G__34138__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__34139){
var obj = cljs.core.first(arglist__34139);
arglist__34139 = cljs.core.next(arglist__34139);
var s = cljs.core.first(arglist__34139);
var args = cljs.core.rest(arglist__34139);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj34141 = {};
return obj34141;
})();


cljs.core.IFn = (function (){var obj34143 = {};
return obj34143;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34189 = x__24321__auto__;
return goog.typeOf(G__34189);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34191 = x__24321__auto__;
return goog.typeOf(G__34191);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34193 = x__24321__auto__;
return goog.typeOf(G__34193);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34195 = x__24321__auto__;
return goog.typeOf(G__34195);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34197 = x__24321__auto__;
return goog.typeOf(G__34197);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34199 = x__24321__auto__;
return goog.typeOf(G__34199);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34201 = x__24321__auto__;
return goog.typeOf(G__34201);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34203 = x__24321__auto__;
return goog.typeOf(G__34203);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34205 = x__24321__auto__;
return goog.typeOf(G__34205);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34207 = x__24321__auto__;
return goog.typeOf(G__34207);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34209 = x__24321__auto__;
return goog.typeOf(G__34209);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34211 = x__24321__auto__;
return goog.typeOf(G__34211);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34213 = x__24321__auto__;
return goog.typeOf(G__34213);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34215 = x__24321__auto__;
return goog.typeOf(G__34215);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34217 = x__24321__auto__;
return goog.typeOf(G__34217);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34219 = x__24321__auto__;
return goog.typeOf(G__34219);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34221 = x__24321__auto__;
return goog.typeOf(G__34221);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34223 = x__24321__auto__;
return goog.typeOf(G__34223);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34225 = x__24321__auto__;
return goog.typeOf(G__34225);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34227 = x__24321__auto__;
return goog.typeOf(G__34227);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34229 = x__24321__auto__;
return goog.typeOf(G__34229);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._invoke[(function (){var G__34231 = x__24321__auto__;
return goog.typeOf(G__34231);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._invoke["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj34233 = {};
return obj34233;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__23665__auto__ = value;
if(and__23665__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__23665__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24321__auto__ = (((value == null))?null:value);
return (function (){var or__23677__auto__ = (cljs.core._clone[(function (){var G__34237 = x__24321__auto__;
return goog.typeOf(G__34237);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._clone["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj34239 = {};
return obj34239;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._count[(function (){var G__34243 = x__24321__auto__;
return goog.typeOf(G__34243);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._count["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj34245 = {};
return obj34245;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._empty[(function (){var G__34249 = x__24321__auto__;
return goog.typeOf(G__34249);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._empty["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj34251 = {};
return obj34251;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._conj[(function (){var G__34255 = x__24321__auto__;
return goog.typeOf(G__34255);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._conj["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj34257 = {};
return obj34257;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._nth[(function (){var G__34263 = x__24321__auto__;
return goog.typeOf(G__34263);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._nth["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._nth[(function (){var G__34265 = x__24321__auto__;
return goog.typeOf(G__34265);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._nth["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj34267 = {};
return obj34267;
})();


cljs.core.ISeq = (function (){var obj34269 = {};
return obj34269;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._first[(function (){var G__34273 = x__24321__auto__;
return goog.typeOf(G__34273);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._first["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._rest[(function (){var G__34277 = x__24321__auto__;
return goog.typeOf(G__34277);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._rest["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj34279 = {};
return obj34279;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._next[(function (){var G__34283 = x__24321__auto__;
return goog.typeOf(G__34283);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._next["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj34285 = {};
return obj34285;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._lookup[(function (){var G__34291 = x__24321__auto__;
return goog.typeOf(G__34291);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._lookup["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._lookup[(function (){var G__34293 = x__24321__auto__;
return goog.typeOf(G__34293);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._lookup["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj34295 = {};
return obj34295;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__34299 = x__24321__auto__;
return goog.typeOf(G__34299);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._assoc[(function (){var G__34303 = x__24321__auto__;
return goog.typeOf(G__34303);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._assoc["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj34305 = {};
return obj34305;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._dissoc[(function (){var G__34309 = x__24321__auto__;
return goog.typeOf(G__34309);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._dissoc["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj34311 = {};
return obj34311;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._key[(function (){var G__34315 = x__24321__auto__;
return goog.typeOf(G__34315);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._key["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._val[(function (){var G__34319 = x__24321__auto__;
return goog.typeOf(G__34319);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._val["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj34321 = {};
return obj34321;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._disjoin[(function (){var G__34325 = x__24321__auto__;
return goog.typeOf(G__34325);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._disjoin["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj34327 = {};
return obj34327;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._peek[(function (){var G__34331 = x__24321__auto__;
return goog.typeOf(G__34331);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._peek["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._pop[(function (){var G__34335 = x__24321__auto__;
return goog.typeOf(G__34335);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._pop["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj34337 = {};
return obj34337;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._assoc_n[(function (){var G__34341 = x__24321__auto__;
return goog.typeOf(G__34341);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj34343 = {};
return obj34343;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._deref[(function (){var G__34347 = x__24321__auto__;
return goog.typeOf(G__34347);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._deref["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj34349 = {};
return obj34349;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._deref_with_timeout[(function (){var G__34353 = x__24321__auto__;
return goog.typeOf(G__34353);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj34355 = {};
return obj34355;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._meta[(function (){var G__34359 = x__24321__auto__;
return goog.typeOf(G__34359);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._meta["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj34361 = {};
return obj34361;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._with_meta[(function (){var G__34365 = x__24321__auto__;
return goog.typeOf(G__34365);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._with_meta["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj34367 = {};
return obj34367;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._reduce[(function (){var G__34373 = x__24321__auto__;
return goog.typeOf(G__34373);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._reduce["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._reduce[(function (){var G__34375 = x__24321__auto__;
return goog.typeOf(G__34375);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._reduce["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj34377 = {};
return obj34377;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._kv_reduce[(function (){var G__34381 = x__24321__auto__;
return goog.typeOf(G__34381);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj34383 = {};
return obj34383;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._equiv[(function (){var G__34387 = x__24321__auto__;
return goog.typeOf(G__34387);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._equiv["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj34389 = {};
return obj34389;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._hash[(function (){var G__34393 = x__24321__auto__;
return goog.typeOf(G__34393);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._hash["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj34395 = {};
return obj34395;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._seq[(function (){var G__34399 = x__24321__auto__;
return goog.typeOf(G__34399);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._seq["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj34401 = {};
return obj34401;
})();


cljs.core.IList = (function (){var obj34403 = {};
return obj34403;
})();


cljs.core.IRecord = (function (){var obj34405 = {};
return obj34405;
})();


cljs.core.IReversible = (function (){var obj34407 = {};
return obj34407;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._rseq[(function (){var G__34411 = x__24321__auto__;
return goog.typeOf(G__34411);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._rseq["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj34413 = {};
return obj34413;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._sorted_seq[(function (){var G__34417 = x__24321__auto__;
return goog.typeOf(G__34417);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._sorted_seq_from[(function (){var G__34421 = x__24321__auto__;
return goog.typeOf(G__34421);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._entry_key[(function (){var G__34425 = x__24321__auto__;
return goog.typeOf(G__34425);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._entry_key["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._comparator[(function (){var G__34429 = x__24321__auto__;
return goog.typeOf(G__34429);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._comparator["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj34431 = {};
return obj34431;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__23665__auto__ = writer;
if(and__23665__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__23665__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24321__auto__ = (((writer == null))?null:writer);
return (function (){var or__23677__auto__ = (cljs.core._write[(function (){var G__34435 = x__24321__auto__;
return goog.typeOf(G__34435);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._write["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__23665__auto__ = writer;
if(and__23665__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__23665__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24321__auto__ = (((writer == null))?null:writer);
return (function (){var or__23677__auto__ = (cljs.core._flush[(function (){var G__34439 = x__24321__auto__;
return goog.typeOf(G__34439);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._flush["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj34441 = {};
return obj34441;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._pr_writer[(function (){var G__34445 = x__24321__auto__;
return goog.typeOf(G__34445);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj34447 = {};
return obj34447;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__23665__auto__ = d;
if(and__23665__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__23665__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24321__auto__ = (((d == null))?null:d);
return (function (){var or__23677__auto__ = (cljs.core._realized_QMARK_[(function (){var G__34451 = x__24321__auto__;
return goog.typeOf(G__34451);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj34453 = {};
return obj34453;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._notify_watches[(function (){var G__34457 = x__24321__auto__;
return goog.typeOf(G__34457);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._add_watch[(function (){var G__34461 = x__24321__auto__;
return goog.typeOf(G__34461);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._add_watch["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__23665__auto__ = this$;
if(and__23665__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__23665__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24321__auto__ = (((this$ == null))?null:this$);
return (function (){var or__23677__auto__ = (cljs.core._remove_watch[(function (){var G__34465 = x__24321__auto__;
return goog.typeOf(G__34465);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj34467 = {};
return obj34467;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._as_transient[(function (){var G__34471 = x__24321__auto__;
return goog.typeOf(G__34471);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._as_transient["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj34473 = {};
return obj34473;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__23665__auto__ = tcoll;
if(and__23665__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__23665__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23677__auto__ = (cljs.core._conj_BANG_[(function (){var G__34477 = x__24321__auto__;
return goog.typeOf(G__34477);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__23665__auto__ = tcoll;
if(and__23665__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__23665__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23677__auto__ = (cljs.core._persistent_BANG_[(function (){var G__34481 = x__24321__auto__;
return goog.typeOf(G__34481);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj34483 = {};
return obj34483;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__23665__auto__ = tcoll;
if(and__23665__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__23665__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23677__auto__ = (cljs.core._assoc_BANG_[(function (){var G__34487 = x__24321__auto__;
return goog.typeOf(G__34487);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj34489 = {};
return obj34489;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__23665__auto__ = tcoll;
if(and__23665__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__23665__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23677__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__34493 = x__24321__auto__;
return goog.typeOf(G__34493);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj34495 = {};
return obj34495;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__23665__auto__ = tcoll;
if(and__23665__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__23665__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23677__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__34499 = x__24321__auto__;
return goog.typeOf(G__34499);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__23665__auto__ = tcoll;
if(and__23665__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__23665__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23677__auto__ = (cljs.core._pop_BANG_[(function (){var G__34503 = x__24321__auto__;
return goog.typeOf(G__34503);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj34505 = {};
return obj34505;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__23665__auto__ = tcoll;
if(and__23665__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__23665__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24321__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__23677__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__34509 = x__24321__auto__;
return goog.typeOf(G__34509);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj34511 = {};
return obj34511;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__23665__auto__ = x;
if(and__23665__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__23665__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24321__auto__ = (((x == null))?null:x);
return (function (){var or__23677__auto__ = (cljs.core._compare[(function (){var G__34515 = x__24321__auto__;
return goog.typeOf(G__34515);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._compare["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj34517 = {};
return obj34517;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._drop_first[(function (){var G__34521 = x__24321__auto__;
return goog.typeOf(G__34521);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._drop_first["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj34523 = {};
return obj34523;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._chunked_first[(function (){var G__34527 = x__24321__auto__;
return goog.typeOf(G__34527);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._chunked_rest[(function (){var G__34531 = x__24321__auto__;
return goog.typeOf(G__34531);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj34533 = {};
return obj34533;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._chunked_next[(function (){var G__34537 = x__24321__auto__;
return goog.typeOf(G__34537);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj34539 = {};
return obj34539;
})();

cljs.core._name = (function _name(x){
if((function (){var and__23665__auto__ = x;
if(and__23665__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__23665__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24321__auto__ = (((x == null))?null:x);
return (function (){var or__23677__auto__ = (cljs.core._name[(function (){var G__34543 = x__24321__auto__;
return goog.typeOf(G__34543);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._name["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__23665__auto__ = x;
if(and__23665__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__23665__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24321__auto__ = (((x == null))?null:x);
return (function (){var or__23677__auto__ = (cljs.core._namespace[(function (){var G__34547 = x__24321__auto__;
return goog.typeOf(G__34547);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._namespace["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj34549 = {};
return obj34549;
})();


cljs.core.IReset = (function (){var obj34551 = {};
return obj34551;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._reset_BANG_[(function (){var G__34555 = x__24321__auto__;
return goog.typeOf(G__34555);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj34557 = {};
return obj34557;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._swap_BANG_[(function (){var G__34567 = x__24321__auto__;
return goog.typeOf(G__34567);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._swap_BANG_[(function (){var G__34569 = x__24321__auto__;
return goog.typeOf(G__34569);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._swap_BANG_[(function (){var G__34571 = x__24321__auto__;
return goog.typeOf(G__34571);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._swap_BANG_[(function (){var G__34573 = x__24321__auto__;
return goog.typeOf(G__34573);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj34575 = {};
return obj34575;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__23665__auto__ = o;
if(and__23665__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__23665__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24321__auto__ = (((o == null))?null:o);
return (function (){var or__23677__auto__ = (cljs.core._vreset_BANG_[(function (){var G__34579 = x__24321__auto__;
return goog.typeOf(G__34579);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj34581 = {};
return obj34581;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__23665__auto__ = coll;
if(and__23665__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__23665__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24321__auto__ = (((coll == null))?null:coll);
return (function (){var or__23677__auto__ = (cljs.core._iterator[(function (){var G__34585 = x__24321__auto__;
return goog.typeOf(G__34585);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._iterator["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__34588 = (4294967295);
var G__34589 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__34588,G__34589) : Math.imul.call(null,G__34588,G__34589));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__34592 = a;
var G__34593 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__34592,G__34593) : Math.imul.call(null,G__34592,G__34593));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__34594 = (i + (2));
var G__34595 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__34594;
h1 = G__34595;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj34597 = {};
return obj34597;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__34598 = (i + (1));
var G__34599 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__34598;
hash = G__34599;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj34603 = {};
return obj34603;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__34606 = o;
if(G__34606){
var bit__24351__auto__ = (G__34606.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24351__auto__) || (G__34606.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__34607 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__34607) : Math.floor.call(null,G__34607));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__23665__auto__ = cljs.core.not(a.ns);
if(and__23665__auto__){
return b.ns;
} else {
return and__23665__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__34614 = a.ns;
var G__34615 = b.ns;
return goog.array.defaultCompare(G__34614,G__34615);
})();
if(((0) === nsc)){
var G__34616 = a.name;
var G__34617 = b.name;
return goog.array.defaultCompare(G__34616,G__34617);
} else {
return nsc;
}
}
} else {
var G__34618 = a.name;
var G__34619 = b.name;
return goog.array.defaultCompare(G__34618,G__34619);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__24098__auto__ = self__._hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__34621 = null;
var G__34621__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__34621__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__34621 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__34621__2.call(this,self__,coll);
case 3:
return G__34621__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34621.cljs$core$IFn$_invoke$arity$2 = G__34621__2;
G__34621.cljs$core$IFn$_invoke$arity$3 = G__34621__3;
return G__34621;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args34620){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34620)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__34669 = null;
var G__34669__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__34669__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__34669__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__34669__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__34669__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__34669__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__34669__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__34669__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__34669__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__34669__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__34669__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__34669__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__34669__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__34669__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__34669__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__34669__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__34669__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__34669__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__34669__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__34669__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__34669__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__34669__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34625 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__34626 = a;
var G__34627 = b;
var G__34628 = c;
var G__34629 = d;
var G__34630 = e;
var G__34631 = f;
var G__34632 = g;
var G__34633 = h;
var G__34634 = i;
var G__34635 = j;
var G__34636 = k;
var G__34637 = l;
var G__34638 = m;
var G__34639 = n;
var G__34640 = o;
var G__34641 = p;
var G__34642 = q;
var G__34643 = r;
var G__34644 = s;
var G__34645 = t;
var G__34646 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__34625,G__34626,G__34627,G__34628,G__34629,G__34630,G__34631,G__34632,G__34633,G__34634,G__34635,G__34636,G__34637,G__34638,G__34639,G__34640,G__34641,G__34642,G__34643,G__34644,G__34645,G__34646) : cljs.core.apply.call(null,G__34625,G__34626,G__34627,G__34628,G__34629,G__34630,G__34631,G__34632,G__34633,G__34634,G__34635,G__34636,G__34637,G__34638,G__34639,G__34640,G__34641,G__34642,G__34643,G__34644,G__34645,G__34646));
});
G__34669 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__34669__1.call(this,self__);
case 2:
return G__34669__2.call(this,self__,a);
case 3:
return G__34669__3.call(this,self__,a,b);
case 4:
return G__34669__4.call(this,self__,a,b,c);
case 5:
return G__34669__5.call(this,self__,a,b,c,d);
case 6:
return G__34669__6.call(this,self__,a,b,c,d,e);
case 7:
return G__34669__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__34669__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__34669__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__34669__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__34669__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__34669__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__34669__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__34669__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__34669__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__34669__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__34669__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__34669__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__34669__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__34669__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__34669__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__34669__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34669.cljs$core$IFn$_invoke$arity$1 = G__34669__1;
G__34669.cljs$core$IFn$_invoke$arity$2 = G__34669__2;
G__34669.cljs$core$IFn$_invoke$arity$3 = G__34669__3;
G__34669.cljs$core$IFn$_invoke$arity$4 = G__34669__4;
G__34669.cljs$core$IFn$_invoke$arity$5 = G__34669__5;
G__34669.cljs$core$IFn$_invoke$arity$6 = G__34669__6;
G__34669.cljs$core$IFn$_invoke$arity$7 = G__34669__7;
G__34669.cljs$core$IFn$_invoke$arity$8 = G__34669__8;
G__34669.cljs$core$IFn$_invoke$arity$9 = G__34669__9;
G__34669.cljs$core$IFn$_invoke$arity$10 = G__34669__10;
G__34669.cljs$core$IFn$_invoke$arity$11 = G__34669__11;
G__34669.cljs$core$IFn$_invoke$arity$12 = G__34669__12;
G__34669.cljs$core$IFn$_invoke$arity$13 = G__34669__13;
G__34669.cljs$core$IFn$_invoke$arity$14 = G__34669__14;
G__34669.cljs$core$IFn$_invoke$arity$15 = G__34669__15;
G__34669.cljs$core$IFn$_invoke$arity$16 = G__34669__16;
G__34669.cljs$core$IFn$_invoke$arity$17 = G__34669__17;
G__34669.cljs$core$IFn$_invoke$arity$18 = G__34669__18;
G__34669.cljs$core$IFn$_invoke$arity$19 = G__34669__19;
G__34669.cljs$core$IFn$_invoke$arity$20 = G__34669__20;
G__34669.cljs$core$IFn$_invoke$arity$21 = G__34669__21;
G__34669.cljs$core$IFn$_invoke$arity$22 = G__34669__22;
return G__34669;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args34624){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34624)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__34647 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__34648 = a;
var G__34649 = b;
var G__34650 = c;
var G__34651 = d;
var G__34652 = e;
var G__34653 = f;
var G__34654 = g;
var G__34655 = h;
var G__34656 = i;
var G__34657 = j;
var G__34658 = k;
var G__34659 = l;
var G__34660 = m;
var G__34661 = n;
var G__34662 = o;
var G__34663 = p;
var G__34664 = q;
var G__34665 = r;
var G__34666 = s;
var G__34667 = t;
var G__34668 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__34647,G__34648,G__34649,G__34650,G__34651,G__34652,G__34653,G__34654,G__34655,G__34656,G__34657,G__34658,G__34659,G__34660,G__34661,G__34662,G__34663,G__34664,G__34665,G__34666,G__34667,G__34668) : cljs.core.apply.call(null,G__34647,G__34648,G__34649,G__34650,G__34651,G__34652,G__34653,G__34654,G__34655,G__34656,G__34657,G__34658,G__34659,G__34660,G__34661,G__34662,G__34663,G__34664,G__34665,G__34666,G__34667,G__34668));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__34671 = x;
if(G__34671){
var bit__24358__auto__ = null;
if(cljs.core.truth_((function (){var or__23677__auto__ = bit__24358__auto__;
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return G__34671.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__34671.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__34671);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__34671);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__34673 = value;
if(G__34673){
var bit__24358__auto__ = (G__34673.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24358__auto__) || (G__34673.cljs$core$ICloneable$)){
return true;
} else {
if((!G__34673.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__34673);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__34673);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__34675 = coll;
if(G__34675){
var bit__24351__auto__ = (G__34675.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24351__auto__) || (G__34675.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__34677 = coll;
if(G__34677){
var bit__24351__auto__ = (G__34677.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24351__auto__) || (G__34677.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__34679 = coll;
if(G__34679){
var bit__24351__auto__ = (G__34679.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24351__auto__) || (G__34679.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__34681 = coll;
if(G__34681){
var bit__24351__auto__ = (G__34681.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24351__auto__) || (G__34681.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__34686__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__34687 = y;
var G__34688 = cljs.core.first(more);
var G__34689 = cljs.core.next(more);
x = G__34687;
y = G__34688;
more = G__34689;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__34686 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__34690__i = 0, G__34690__a = new Array(arguments.length -  2);
while (G__34690__i < G__34690__a.length) {G__34690__a[G__34690__i] = arguments[G__34690__i + 2]; ++G__34690__i;}
  more = new cljs.core.IndexedSeq(G__34690__a,0);
} 
return G__34686__delegate.call(this,x,y,more);};
G__34686.cljs$lang$maxFixedArity = 2;
G__34686.cljs$lang$applyTo = (function (arglist__34691){
var x = cljs.core.first(arglist__34691);
arglist__34691 = cljs.core.next(arglist__34691);
var y = cljs.core.first(arglist__34691);
var more = cljs.core.rest(arglist__34691);
return G__34686__delegate(x,y,more);
});
G__34686.cljs$core$IFn$_invoke$arity$variadic = G__34686__delegate;
return G__34686;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__34692 = null;
if (arguments.length > 2) {
var G__34693__i = 0, G__34693__a = new Array(arguments.length -  2);
while (G__34693__i < G__34693__a.length) {G__34693__a[G__34693__i] = arguments[G__34693__i + 2]; ++G__34693__i;}
G__34692 = new cljs.core.IndexedSeq(G__34693__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__34692);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__34694 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__34694) : cljs.core.es6_iterator_seq.call(null,G__34694));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__34695 = (n + (1));
var G__34696 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__34697 = cljs.core.next(coll__$1);
n = G__34695;
hash_code = G__34696;
coll__$1 = G__34697;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__34698 = (n + (1));
var G__34699 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__34700 = cljs.core.next(coll__$1);
n = G__34698;
hash_code = G__34699;
coll__$1 = G__34700;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__34701 = o;
return goog.getUid(G__34701);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__34703 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34703) : cljs.core.deref.call(null,G__34703));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__34710 = val;
var G__34711 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34710,G__34711) : f.call(null,G__34710,G__34711));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__34716 = nval;
var G__34717 = (n + (1));
val = G__34716;
n = G__34717;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__34712 = val__$1;
var G__34713 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34712,G__34713) : f.call(null,G__34712,G__34713));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__34718 = nval;
var G__34719 = (n + (1));
val__$1 = G__34718;
n = G__34719;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__34714 = val__$1;
var G__34715 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34714,G__34715) : f.call(null,G__34714,G__34715));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__34720 = nval;
var G__34721 = (n + (1));
val__$1 = G__34720;
n = G__34721;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__34728 = val;
var G__34729 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34728,G__34729) : f.call(null,G__34728,G__34729));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__34734 = nval;
var G__34735 = (n + (1));
val = G__34734;
n = G__34735;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__34730 = val__$1;
var G__34731 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34730,G__34731) : f.call(null,G__34730,G__34731));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__34736 = nval;
var G__34737 = (n + (1));
val__$1 = G__34736;
n = G__34737;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__34732 = val__$1;
var G__34733 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34732,G__34733) : f.call(null,G__34732,G__34733));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__34738 = nval;
var G__34739 = (n + (1));
val__$1 = G__34738;
n = G__34739;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__34741 = x;
if(G__34741){
var bit__24358__auto__ = (G__34741.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24358__auto__) || (G__34741.cljs$core$ICounted$)){
return true;
} else {
if((!G__34741.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__34741);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__34741);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__34743 = x;
if(G__34743){
var bit__24358__auto__ = (G__34743.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24358__auto__) || (G__34743.cljs$core$IIndexed$)){
return true;
} else {
if((!G__34743.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__34743);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__34743);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__34744 = coll__$1;
var G__34745 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__34744,G__34745) : cljs.core.equiv_sequential.call(null,G__34744,G__34745));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__34746 = o;
var G__34747 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__34746,G__34747) : cljs.core.cons.call(null,G__34746,G__34747));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__34750 = coll__$1;
var G__34751 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__34750,G__34751) : cljs.core.equiv_sequential.call(null,G__34750,G__34751));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__34752 = cljs.core.List.EMPTY;
var G__34753 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__34752,G__34753) : cljs.core.with_meta.call(null,G__34752,G__34753));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__34754 = f;
var G__34755 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__34754,G__34755) : cljs.core.seq_reduce.call(null,G__34754,G__34755));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__34756 = f;
var G__34757 = start;
var G__34758 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__34756,G__34757,G__34758) : cljs.core.seq_reduce.call(null,G__34756,G__34757,G__34758));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__34759 = o;
var G__34760 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__34759,G__34760) : cljs.core.cons.call(null,G__34759,G__34760));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__34761 = sn;
s = G__34761;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__34766__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__34767 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__34768 = cljs.core.first(xs);
var G__34769 = cljs.core.next(xs);
coll = G__34767;
x = G__34768;
xs = G__34769;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__34766 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__34770__i = 0, G__34770__a = new Array(arguments.length -  2);
while (G__34770__i < G__34770__a.length) {G__34770__a[G__34770__i] = arguments[G__34770__i + 2]; ++G__34770__i;}
  xs = new cljs.core.IndexedSeq(G__34770__a,0);
} 
return G__34766__delegate.call(this,coll,x,xs);};
G__34766.cljs$lang$maxFixedArity = 2;
G__34766.cljs$lang$applyTo = (function (arglist__34771){
var coll = cljs.core.first(arglist__34771);
arglist__34771 = cljs.core.next(arglist__34771);
var x = cljs.core.first(arglist__34771);
var xs = cljs.core.rest(arglist__34771);
return G__34766__delegate(coll,x,xs);
});
G__34766.cljs$core$IFn$_invoke$arity$variadic = G__34766__delegate;
return G__34766;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__34772 = null;
if (arguments.length > 2) {
var G__34773__i = 0, G__34773__a = new Array(arguments.length -  2);
while (G__34773__i < G__34773__a.length) {G__34773__a[G__34773__i] = arguments[G__34773__i + 2]; ++G__34773__i;}
G__34772 = new cljs.core.IndexedSeq(G__34773__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__34772);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__34774 = cljs.core.next(s);
var G__34775 = (acc + (1));
s = G__34774;
acc = G__34775;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__34777 = coll;
if(G__34777){
var bit__24351__auto__ = (G__34777.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24351__auto__) || (G__34777.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__34778 = cljs.core.next(coll);
var G__34779 = (n - (1));
coll = G__34778;
n = G__34779;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__34780 = cljs.core.next(coll);
var G__34781 = (n - (1));
var G__34782 = not_found;
coll = G__34780;
n = G__34781;
not_found = G__34782;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__34787 = coll;
if(G__34787){
var bit__24351__auto__ = (G__34787.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24351__auto__) || (G__34787.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__34788 = coll;
if(G__34788){
var bit__24358__auto__ = (G__34788.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24358__auto__) || (G__34788.cljs$core$ISeq$)){
return true;
} else {
if((!G__34788.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__34788);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__34788);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__34789 = coll;
if(G__34789){
var bit__24351__auto__ = (G__34789.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24351__auto__) || (G__34789.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__34790 = coll;
if(G__34790){
var bit__24358__auto__ = (G__34790.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24358__auto__) || (G__34790.cljs$core$ISeq$)){
return true;
} else {
if((!G__34790.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__34790);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__34790);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__34791 = (n__$1 - (1));
var G__34792 = cljs.core.rest(xs);
n__$1 = G__34791;
xs = G__34792;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__34795 = o;
if(G__34795){
var bit__24351__auto__ = (G__34795.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24351__auto__) || (G__34795.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__34796 = o;
if(G__34796){
var bit__24351__auto__ = (G__34796.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24351__auto__) || (G__34796.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__34800__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__34801 = ret;
var G__34802 = cljs.core.first(kvs);
var G__34803 = cljs.core.second(kvs);
var G__34804 = cljs.core.nnext(kvs);
coll = G__34801;
k = G__34802;
v = G__34803;
kvs = G__34804;
continue;
} else {
return ret;
}
break;
}
};
var G__34800 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__34805__i = 0, G__34805__a = new Array(arguments.length -  3);
while (G__34805__i < G__34805__a.length) {G__34805__a[G__34805__i] = arguments[G__34805__i + 3]; ++G__34805__i;}
  kvs = new cljs.core.IndexedSeq(G__34805__a,0);
} 
return G__34800__delegate.call(this,coll,k,v,kvs);};
G__34800.cljs$lang$maxFixedArity = 3;
G__34800.cljs$lang$applyTo = (function (arglist__34806){
var coll = cljs.core.first(arglist__34806);
arglist__34806 = cljs.core.next(arglist__34806);
var k = cljs.core.first(arglist__34806);
arglist__34806 = cljs.core.next(arglist__34806);
var v = cljs.core.first(arglist__34806);
var kvs = cljs.core.rest(arglist__34806);
return G__34800__delegate(coll,k,v,kvs);
});
G__34800.cljs$core$IFn$_invoke$arity$variadic = G__34800__delegate;
return G__34800;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__34807 = null;
if (arguments.length > 3) {
var G__34808__i = 0, G__34808__a = new Array(arguments.length -  3);
while (G__34808__i < G__34808__a.length) {G__34808__a[G__34808__i] = arguments[G__34808__i + 3]; ++G__34808__i;}
G__34807 = new cljs.core.IndexedSeq(G__34808__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__34807);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__34811__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__34812 = ret;
var G__34813 = cljs.core.first(ks);
var G__34814 = cljs.core.next(ks);
coll = G__34812;
k = G__34813;
ks = G__34814;
continue;
} else {
return ret;
}
}
break;
}
};
var G__34811 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__34815__i = 0, G__34815__a = new Array(arguments.length -  2);
while (G__34815__i < G__34815__a.length) {G__34815__a[G__34815__i] = arguments[G__34815__i + 2]; ++G__34815__i;}
  ks = new cljs.core.IndexedSeq(G__34815__a,0);
} 
return G__34811__delegate.call(this,coll,k,ks);};
G__34811.cljs$lang$maxFixedArity = 2;
G__34811.cljs$lang$applyTo = (function (arglist__34816){
var coll = cljs.core.first(arglist__34816);
arglist__34816 = cljs.core.next(arglist__34816);
var k = cljs.core.first(arglist__34816);
var ks = cljs.core.rest(arglist__34816);
return G__34811__delegate(coll,k,ks);
});
G__34811.cljs$core$IFn$_invoke$arity$variadic = G__34811__delegate;
return G__34811;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__34817 = null;
if (arguments.length > 2) {
var G__34818__i = 0, G__34818__a = new Array(arguments.length -  2);
while (G__34818__i < G__34818__a.length) {G__34818__a[G__34818__i] = arguments[G__34818__i + 2]; ++G__34818__i;}
G__34817 = new cljs.core.IndexedSeq(G__34818__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__34817);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__23677__auto__ = (function (){var G__34823 = f;
return goog.isFunction(G__34823);
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var G__34824 = f;
if(G__34824){
var bit__24358__auto__ = null;
if(cljs.core.truth_((function (){var or__23677__auto____$1 = bit__24358__auto__;
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
return G__34824.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__34824.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__34824);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__34824);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__35290 = null;
var G__35290__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__35290__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34826 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__34826) : self__.afn.call(null,G__34826));
});
var G__35290__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34827 = a;
var G__34828 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__34827,G__34828) : self__.afn.call(null,G__34827,G__34828));
});
var G__35290__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34829 = a;
var G__34830 = b;
var G__34831 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__34829,G__34830,G__34831) : self__.afn.call(null,G__34829,G__34830,G__34831));
});
var G__35290__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34832 = a;
var G__34833 = b;
var G__34834 = c;
var G__34835 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__34832,G__34833,G__34834,G__34835) : self__.afn.call(null,G__34832,G__34833,G__34834,G__34835));
});
var G__35290__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34836 = a;
var G__34837 = b;
var G__34838 = c;
var G__34839 = d;
var G__34840 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__34836,G__34837,G__34838,G__34839,G__34840) : self__.afn.call(null,G__34836,G__34837,G__34838,G__34839,G__34840));
});
var G__35290__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34841 = a;
var G__34842 = b;
var G__34843 = c;
var G__34844 = d;
var G__34845 = e;
var G__34846 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__34841,G__34842,G__34843,G__34844,G__34845,G__34846) : self__.afn.call(null,G__34841,G__34842,G__34843,G__34844,G__34845,G__34846));
});
var G__35290__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34847 = a;
var G__34848 = b;
var G__34849 = c;
var G__34850 = d;
var G__34851 = e;
var G__34852 = f;
var G__34853 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__34847,G__34848,G__34849,G__34850,G__34851,G__34852,G__34853) : self__.afn.call(null,G__34847,G__34848,G__34849,G__34850,G__34851,G__34852,G__34853));
});
var G__35290__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34854 = a;
var G__34855 = b;
var G__34856 = c;
var G__34857 = d;
var G__34858 = e;
var G__34859 = f;
var G__34860 = g;
var G__34861 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__34854,G__34855,G__34856,G__34857,G__34858,G__34859,G__34860,G__34861) : self__.afn.call(null,G__34854,G__34855,G__34856,G__34857,G__34858,G__34859,G__34860,G__34861));
});
var G__35290__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34862 = a;
var G__34863 = b;
var G__34864 = c;
var G__34865 = d;
var G__34866 = e;
var G__34867 = f;
var G__34868 = g;
var G__34869 = h;
var G__34870 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__34862,G__34863,G__34864,G__34865,G__34866,G__34867,G__34868,G__34869,G__34870) : self__.afn.call(null,G__34862,G__34863,G__34864,G__34865,G__34866,G__34867,G__34868,G__34869,G__34870));
});
var G__35290__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34871 = a;
var G__34872 = b;
var G__34873 = c;
var G__34874 = d;
var G__34875 = e;
var G__34876 = f;
var G__34877 = g;
var G__34878 = h;
var G__34879 = i;
var G__34880 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__34871,G__34872,G__34873,G__34874,G__34875,G__34876,G__34877,G__34878,G__34879,G__34880) : self__.afn.call(null,G__34871,G__34872,G__34873,G__34874,G__34875,G__34876,G__34877,G__34878,G__34879,G__34880));
});
var G__35290__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34881 = a;
var G__34882 = b;
var G__34883 = c;
var G__34884 = d;
var G__34885 = e;
var G__34886 = f;
var G__34887 = g;
var G__34888 = h;
var G__34889 = i;
var G__34890 = j;
var G__34891 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__34881,G__34882,G__34883,G__34884,G__34885,G__34886,G__34887,G__34888,G__34889,G__34890,G__34891) : self__.afn.call(null,G__34881,G__34882,G__34883,G__34884,G__34885,G__34886,G__34887,G__34888,G__34889,G__34890,G__34891));
});
var G__35290__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34892 = a;
var G__34893 = b;
var G__34894 = c;
var G__34895 = d;
var G__34896 = e;
var G__34897 = f;
var G__34898 = g;
var G__34899 = h;
var G__34900 = i;
var G__34901 = j;
var G__34902 = k;
var G__34903 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__34892,G__34893,G__34894,G__34895,G__34896,G__34897,G__34898,G__34899,G__34900,G__34901,G__34902,G__34903) : self__.afn.call(null,G__34892,G__34893,G__34894,G__34895,G__34896,G__34897,G__34898,G__34899,G__34900,G__34901,G__34902,G__34903));
});
var G__35290__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34904 = a;
var G__34905 = b;
var G__34906 = c;
var G__34907 = d;
var G__34908 = e;
var G__34909 = f;
var G__34910 = g;
var G__34911 = h;
var G__34912 = i;
var G__34913 = j;
var G__34914 = k;
var G__34915 = l;
var G__34916 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__34904,G__34905,G__34906,G__34907,G__34908,G__34909,G__34910,G__34911,G__34912,G__34913,G__34914,G__34915,G__34916) : self__.afn.call(null,G__34904,G__34905,G__34906,G__34907,G__34908,G__34909,G__34910,G__34911,G__34912,G__34913,G__34914,G__34915,G__34916));
});
var G__35290__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34917 = a;
var G__34918 = b;
var G__34919 = c;
var G__34920 = d;
var G__34921 = e;
var G__34922 = f;
var G__34923 = g;
var G__34924 = h;
var G__34925 = i;
var G__34926 = j;
var G__34927 = k;
var G__34928 = l;
var G__34929 = m;
var G__34930 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__34917,G__34918,G__34919,G__34920,G__34921,G__34922,G__34923,G__34924,G__34925,G__34926,G__34927,G__34928,G__34929,G__34930) : self__.afn.call(null,G__34917,G__34918,G__34919,G__34920,G__34921,G__34922,G__34923,G__34924,G__34925,G__34926,G__34927,G__34928,G__34929,G__34930));
});
var G__35290__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34931 = a;
var G__34932 = b;
var G__34933 = c;
var G__34934 = d;
var G__34935 = e;
var G__34936 = f;
var G__34937 = g;
var G__34938 = h;
var G__34939 = i;
var G__34940 = j;
var G__34941 = k;
var G__34942 = l;
var G__34943 = m;
var G__34944 = n;
var G__34945 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__34931,G__34932,G__34933,G__34934,G__34935,G__34936,G__34937,G__34938,G__34939,G__34940,G__34941,G__34942,G__34943,G__34944,G__34945) : self__.afn.call(null,G__34931,G__34932,G__34933,G__34934,G__34935,G__34936,G__34937,G__34938,G__34939,G__34940,G__34941,G__34942,G__34943,G__34944,G__34945));
});
var G__35290__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34946 = a;
var G__34947 = b;
var G__34948 = c;
var G__34949 = d;
var G__34950 = e;
var G__34951 = f;
var G__34952 = g;
var G__34953 = h;
var G__34954 = i;
var G__34955 = j;
var G__34956 = k;
var G__34957 = l;
var G__34958 = m;
var G__34959 = n;
var G__34960 = o;
var G__34961 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__34946,G__34947,G__34948,G__34949,G__34950,G__34951,G__34952,G__34953,G__34954,G__34955,G__34956,G__34957,G__34958,G__34959,G__34960,G__34961) : self__.afn.call(null,G__34946,G__34947,G__34948,G__34949,G__34950,G__34951,G__34952,G__34953,G__34954,G__34955,G__34956,G__34957,G__34958,G__34959,G__34960,G__34961));
});
var G__35290__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34962 = a;
var G__34963 = b;
var G__34964 = c;
var G__34965 = d;
var G__34966 = e;
var G__34967 = f;
var G__34968 = g;
var G__34969 = h;
var G__34970 = i;
var G__34971 = j;
var G__34972 = k;
var G__34973 = l;
var G__34974 = m;
var G__34975 = n;
var G__34976 = o;
var G__34977 = p;
var G__34978 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__34962,G__34963,G__34964,G__34965,G__34966,G__34967,G__34968,G__34969,G__34970,G__34971,G__34972,G__34973,G__34974,G__34975,G__34976,G__34977,G__34978) : self__.afn.call(null,G__34962,G__34963,G__34964,G__34965,G__34966,G__34967,G__34968,G__34969,G__34970,G__34971,G__34972,G__34973,G__34974,G__34975,G__34976,G__34977,G__34978));
});
var G__35290__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34979 = a;
var G__34980 = b;
var G__34981 = c;
var G__34982 = d;
var G__34983 = e;
var G__34984 = f;
var G__34985 = g;
var G__34986 = h;
var G__34987 = i;
var G__34988 = j;
var G__34989 = k;
var G__34990 = l;
var G__34991 = m;
var G__34992 = n;
var G__34993 = o;
var G__34994 = p;
var G__34995 = q;
var G__34996 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__34979,G__34980,G__34981,G__34982,G__34983,G__34984,G__34985,G__34986,G__34987,G__34988,G__34989,G__34990,G__34991,G__34992,G__34993,G__34994,G__34995,G__34996) : self__.afn.call(null,G__34979,G__34980,G__34981,G__34982,G__34983,G__34984,G__34985,G__34986,G__34987,G__34988,G__34989,G__34990,G__34991,G__34992,G__34993,G__34994,G__34995,G__34996));
});
var G__35290__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__34997 = a;
var G__34998 = b;
var G__34999 = c;
var G__35000 = d;
var G__35001 = e;
var G__35002 = f;
var G__35003 = g;
var G__35004 = h;
var G__35005 = i;
var G__35006 = j;
var G__35007 = k;
var G__35008 = l;
var G__35009 = m;
var G__35010 = n;
var G__35011 = o;
var G__35012 = p;
var G__35013 = q;
var G__35014 = r;
var G__35015 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__34997,G__34998,G__34999,G__35000,G__35001,G__35002,G__35003,G__35004,G__35005,G__35006,G__35007,G__35008,G__35009,G__35010,G__35011,G__35012,G__35013,G__35014,G__35015) : self__.afn.call(null,G__34997,G__34998,G__34999,G__35000,G__35001,G__35002,G__35003,G__35004,G__35005,G__35006,G__35007,G__35008,G__35009,G__35010,G__35011,G__35012,G__35013,G__35014,G__35015));
});
var G__35290__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__35016 = a;
var G__35017 = b;
var G__35018 = c;
var G__35019 = d;
var G__35020 = e;
var G__35021 = f;
var G__35022 = g;
var G__35023 = h;
var G__35024 = i;
var G__35025 = j;
var G__35026 = k;
var G__35027 = l;
var G__35028 = m;
var G__35029 = n;
var G__35030 = o;
var G__35031 = p;
var G__35032 = q;
var G__35033 = r;
var G__35034 = s;
var G__35035 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__35016,G__35017,G__35018,G__35019,G__35020,G__35021,G__35022,G__35023,G__35024,G__35025,G__35026,G__35027,G__35028,G__35029,G__35030,G__35031,G__35032,G__35033,G__35034,G__35035) : self__.afn.call(null,G__35016,G__35017,G__35018,G__35019,G__35020,G__35021,G__35022,G__35023,G__35024,G__35025,G__35026,G__35027,G__35028,G__35029,G__35030,G__35031,G__35032,G__35033,G__35034,G__35035));
});
var G__35290__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__35036 = self__.afn;
var G__35037 = a;
var G__35038 = b;
var G__35039 = c;
var G__35040 = d;
var G__35041 = e;
var G__35042 = f;
var G__35043 = g;
var G__35044 = h;
var G__35045 = i;
var G__35046 = j;
var G__35047 = k;
var G__35048 = l;
var G__35049 = m;
var G__35050 = n;
var G__35051 = o;
var G__35052 = p;
var G__35053 = q;
var G__35054 = r;
var G__35055 = s;
var G__35056 = t;
var G__35057 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__35036,G__35037,G__35038,G__35039,G__35040,G__35041,G__35042,G__35043,G__35044,G__35045,G__35046,G__35047,G__35048,G__35049,G__35050,G__35051,G__35052,G__35053,G__35054,G__35055,G__35056,G__35057) : cljs.core.apply.call(null,G__35036,G__35037,G__35038,G__35039,G__35040,G__35041,G__35042,G__35043,G__35044,G__35045,G__35046,G__35047,G__35048,G__35049,G__35050,G__35051,G__35052,G__35053,G__35054,G__35055,G__35056,G__35057));
});
G__35290 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__35290__1.call(this,self__);
case 2:
return G__35290__2.call(this,self__,a);
case 3:
return G__35290__3.call(this,self__,a,b);
case 4:
return G__35290__4.call(this,self__,a,b,c);
case 5:
return G__35290__5.call(this,self__,a,b,c,d);
case 6:
return G__35290__6.call(this,self__,a,b,c,d,e);
case 7:
return G__35290__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__35290__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__35290__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__35290__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__35290__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__35290__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__35290__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__35290__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__35290__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__35290__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__35290__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__35290__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__35290__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__35290__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__35290__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__35290__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35290.cljs$core$IFn$_invoke$arity$1 = G__35290__1;
G__35290.cljs$core$IFn$_invoke$arity$2 = G__35290__2;
G__35290.cljs$core$IFn$_invoke$arity$3 = G__35290__3;
G__35290.cljs$core$IFn$_invoke$arity$4 = G__35290__4;
G__35290.cljs$core$IFn$_invoke$arity$5 = G__35290__5;
G__35290.cljs$core$IFn$_invoke$arity$6 = G__35290__6;
G__35290.cljs$core$IFn$_invoke$arity$7 = G__35290__7;
G__35290.cljs$core$IFn$_invoke$arity$8 = G__35290__8;
G__35290.cljs$core$IFn$_invoke$arity$9 = G__35290__9;
G__35290.cljs$core$IFn$_invoke$arity$10 = G__35290__10;
G__35290.cljs$core$IFn$_invoke$arity$11 = G__35290__11;
G__35290.cljs$core$IFn$_invoke$arity$12 = G__35290__12;
G__35290.cljs$core$IFn$_invoke$arity$13 = G__35290__13;
G__35290.cljs$core$IFn$_invoke$arity$14 = G__35290__14;
G__35290.cljs$core$IFn$_invoke$arity$15 = G__35290__15;
G__35290.cljs$core$IFn$_invoke$arity$16 = G__35290__16;
G__35290.cljs$core$IFn$_invoke$arity$17 = G__35290__17;
G__35290.cljs$core$IFn$_invoke$arity$18 = G__35290__18;
G__35290.cljs$core$IFn$_invoke$arity$19 = G__35290__19;
G__35290.cljs$core$IFn$_invoke$arity$20 = G__35290__20;
G__35290.cljs$core$IFn$_invoke$arity$21 = G__35290__21;
G__35290.cljs$core$IFn$_invoke$arity$22 = G__35290__22;
return G__35290;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args34825){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34825)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__35058 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__35058) : self__.afn.call(null,G__35058));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__35059 = a;
var G__35060 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__35059,G__35060) : self__.afn.call(null,G__35059,G__35060));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__35061 = a;
var G__35062 = b;
var G__35063 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__35061,G__35062,G__35063) : self__.afn.call(null,G__35061,G__35062,G__35063));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__35064 = a;
var G__35065 = b;
var G__35066 = c;
var G__35067 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__35064,G__35065,G__35066,G__35067) : self__.afn.call(null,G__35064,G__35065,G__35066,G__35067));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__35068 = a;
var G__35069 = b;
var G__35070 = c;
var G__35071 = d;
var G__35072 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__35068,G__35069,G__35070,G__35071,G__35072) : self__.afn.call(null,G__35068,G__35069,G__35070,G__35071,G__35072));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__35073 = a;
var G__35074 = b;
var G__35075 = c;
var G__35076 = d;
var G__35077 = e;
var G__35078 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__35073,G__35074,G__35075,G__35076,G__35077,G__35078) : self__.afn.call(null,G__35073,G__35074,G__35075,G__35076,G__35077,G__35078));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__35079 = a;
var G__35080 = b;
var G__35081 = c;
var G__35082 = d;
var G__35083 = e;
var G__35084 = f;
var G__35085 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__35079,G__35080,G__35081,G__35082,G__35083,G__35084,G__35085) : self__.afn.call(null,G__35079,G__35080,G__35081,G__35082,G__35083,G__35084,G__35085));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__35086 = a;
var G__35087 = b;
var G__35088 = c;
var G__35089 = d;
var G__35090 = e;
var G__35091 = f;
var G__35092 = g;
var G__35093 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__35086,G__35087,G__35088,G__35089,G__35090,G__35091,G__35092,G__35093) : self__.afn.call(null,G__35086,G__35087,G__35088,G__35089,G__35090,G__35091,G__35092,G__35093));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__35094 = a;
var G__35095 = b;
var G__35096 = c;
var G__35097 = d;
var G__35098 = e;
var G__35099 = f;
var G__35100 = g;
var G__35101 = h;
var G__35102 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__35094,G__35095,G__35096,G__35097,G__35098,G__35099,G__35100,G__35101,G__35102) : self__.afn.call(null,G__35094,G__35095,G__35096,G__35097,G__35098,G__35099,G__35100,G__35101,G__35102));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__35103 = a;
var G__35104 = b;
var G__35105 = c;
var G__35106 = d;
var G__35107 = e;
var G__35108 = f;
var G__35109 = g;
var G__35110 = h;
var G__35111 = i;
var G__35112 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__35103,G__35104,G__35105,G__35106,G__35107,G__35108,G__35109,G__35110,G__35111,G__35112) : self__.afn.call(null,G__35103,G__35104,G__35105,G__35106,G__35107,G__35108,G__35109,G__35110,G__35111,G__35112));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__35113 = a;
var G__35114 = b;
var G__35115 = c;
var G__35116 = d;
var G__35117 = e;
var G__35118 = f;
var G__35119 = g;
var G__35120 = h;
var G__35121 = i;
var G__35122 = j;
var G__35123 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__35113,G__35114,G__35115,G__35116,G__35117,G__35118,G__35119,G__35120,G__35121,G__35122,G__35123) : self__.afn.call(null,G__35113,G__35114,G__35115,G__35116,G__35117,G__35118,G__35119,G__35120,G__35121,G__35122,G__35123));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__35124 = a;
var G__35125 = b;
var G__35126 = c;
var G__35127 = d;
var G__35128 = e;
var G__35129 = f;
var G__35130 = g;
var G__35131 = h;
var G__35132 = i;
var G__35133 = j;
var G__35134 = k;
var G__35135 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__35124,G__35125,G__35126,G__35127,G__35128,G__35129,G__35130,G__35131,G__35132,G__35133,G__35134,G__35135) : self__.afn.call(null,G__35124,G__35125,G__35126,G__35127,G__35128,G__35129,G__35130,G__35131,G__35132,G__35133,G__35134,G__35135));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__35136 = a;
var G__35137 = b;
var G__35138 = c;
var G__35139 = d;
var G__35140 = e;
var G__35141 = f;
var G__35142 = g;
var G__35143 = h;
var G__35144 = i;
var G__35145 = j;
var G__35146 = k;
var G__35147 = l;
var G__35148 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__35136,G__35137,G__35138,G__35139,G__35140,G__35141,G__35142,G__35143,G__35144,G__35145,G__35146,G__35147,G__35148) : self__.afn.call(null,G__35136,G__35137,G__35138,G__35139,G__35140,G__35141,G__35142,G__35143,G__35144,G__35145,G__35146,G__35147,G__35148));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__35149 = a;
var G__35150 = b;
var G__35151 = c;
var G__35152 = d;
var G__35153 = e;
var G__35154 = f;
var G__35155 = g;
var G__35156 = h;
var G__35157 = i;
var G__35158 = j;
var G__35159 = k;
var G__35160 = l;
var G__35161 = m;
var G__35162 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__35149,G__35150,G__35151,G__35152,G__35153,G__35154,G__35155,G__35156,G__35157,G__35158,G__35159,G__35160,G__35161,G__35162) : self__.afn.call(null,G__35149,G__35150,G__35151,G__35152,G__35153,G__35154,G__35155,G__35156,G__35157,G__35158,G__35159,G__35160,G__35161,G__35162));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__35163 = a;
var G__35164 = b;
var G__35165 = c;
var G__35166 = d;
var G__35167 = e;
var G__35168 = f;
var G__35169 = g;
var G__35170 = h;
var G__35171 = i;
var G__35172 = j;
var G__35173 = k;
var G__35174 = l;
var G__35175 = m;
var G__35176 = n;
var G__35177 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__35163,G__35164,G__35165,G__35166,G__35167,G__35168,G__35169,G__35170,G__35171,G__35172,G__35173,G__35174,G__35175,G__35176,G__35177) : self__.afn.call(null,G__35163,G__35164,G__35165,G__35166,G__35167,G__35168,G__35169,G__35170,G__35171,G__35172,G__35173,G__35174,G__35175,G__35176,G__35177));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__35178 = a;
var G__35179 = b;
var G__35180 = c;
var G__35181 = d;
var G__35182 = e;
var G__35183 = f;
var G__35184 = g;
var G__35185 = h;
var G__35186 = i;
var G__35187 = j;
var G__35188 = k;
var G__35189 = l;
var G__35190 = m;
var G__35191 = n;
var G__35192 = o;
var G__35193 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__35178,G__35179,G__35180,G__35181,G__35182,G__35183,G__35184,G__35185,G__35186,G__35187,G__35188,G__35189,G__35190,G__35191,G__35192,G__35193) : self__.afn.call(null,G__35178,G__35179,G__35180,G__35181,G__35182,G__35183,G__35184,G__35185,G__35186,G__35187,G__35188,G__35189,G__35190,G__35191,G__35192,G__35193));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__35194 = a;
var G__35195 = b;
var G__35196 = c;
var G__35197 = d;
var G__35198 = e;
var G__35199 = f;
var G__35200 = g;
var G__35201 = h;
var G__35202 = i;
var G__35203 = j;
var G__35204 = k;
var G__35205 = l;
var G__35206 = m;
var G__35207 = n;
var G__35208 = o;
var G__35209 = p;
var G__35210 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__35194,G__35195,G__35196,G__35197,G__35198,G__35199,G__35200,G__35201,G__35202,G__35203,G__35204,G__35205,G__35206,G__35207,G__35208,G__35209,G__35210) : self__.afn.call(null,G__35194,G__35195,G__35196,G__35197,G__35198,G__35199,G__35200,G__35201,G__35202,G__35203,G__35204,G__35205,G__35206,G__35207,G__35208,G__35209,G__35210));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__35211 = a;
var G__35212 = b;
var G__35213 = c;
var G__35214 = d;
var G__35215 = e;
var G__35216 = f;
var G__35217 = g;
var G__35218 = h;
var G__35219 = i;
var G__35220 = j;
var G__35221 = k;
var G__35222 = l;
var G__35223 = m;
var G__35224 = n;
var G__35225 = o;
var G__35226 = p;
var G__35227 = q;
var G__35228 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__35211,G__35212,G__35213,G__35214,G__35215,G__35216,G__35217,G__35218,G__35219,G__35220,G__35221,G__35222,G__35223,G__35224,G__35225,G__35226,G__35227,G__35228) : self__.afn.call(null,G__35211,G__35212,G__35213,G__35214,G__35215,G__35216,G__35217,G__35218,G__35219,G__35220,G__35221,G__35222,G__35223,G__35224,G__35225,G__35226,G__35227,G__35228));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__35229 = a;
var G__35230 = b;
var G__35231 = c;
var G__35232 = d;
var G__35233 = e;
var G__35234 = f;
var G__35235 = g;
var G__35236 = h;
var G__35237 = i;
var G__35238 = j;
var G__35239 = k;
var G__35240 = l;
var G__35241 = m;
var G__35242 = n;
var G__35243 = o;
var G__35244 = p;
var G__35245 = q;
var G__35246 = r;
var G__35247 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__35229,G__35230,G__35231,G__35232,G__35233,G__35234,G__35235,G__35236,G__35237,G__35238,G__35239,G__35240,G__35241,G__35242,G__35243,G__35244,G__35245,G__35246,G__35247) : self__.afn.call(null,G__35229,G__35230,G__35231,G__35232,G__35233,G__35234,G__35235,G__35236,G__35237,G__35238,G__35239,G__35240,G__35241,G__35242,G__35243,G__35244,G__35245,G__35246,G__35247));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__35248 = a;
var G__35249 = b;
var G__35250 = c;
var G__35251 = d;
var G__35252 = e;
var G__35253 = f;
var G__35254 = g;
var G__35255 = h;
var G__35256 = i;
var G__35257 = j;
var G__35258 = k;
var G__35259 = l;
var G__35260 = m;
var G__35261 = n;
var G__35262 = o;
var G__35263 = p;
var G__35264 = q;
var G__35265 = r;
var G__35266 = s;
var G__35267 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__35248,G__35249,G__35250,G__35251,G__35252,G__35253,G__35254,G__35255,G__35256,G__35257,G__35258,G__35259,G__35260,G__35261,G__35262,G__35263,G__35264,G__35265,G__35266,G__35267) : self__.afn.call(null,G__35248,G__35249,G__35250,G__35251,G__35252,G__35253,G__35254,G__35255,G__35256,G__35257,G__35258,G__35259,G__35260,G__35261,G__35262,G__35263,G__35264,G__35265,G__35266,G__35267));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__35268 = self__.afn;
var G__35269 = a;
var G__35270 = b;
var G__35271 = c;
var G__35272 = d;
var G__35273 = e;
var G__35274 = f;
var G__35275 = g;
var G__35276 = h;
var G__35277 = i;
var G__35278 = j;
var G__35279 = k;
var G__35280 = l;
var G__35281 = m;
var G__35282 = n;
var G__35283 = o;
var G__35284 = p;
var G__35285 = q;
var G__35286 = r;
var G__35287 = s;
var G__35288 = t;
var G__35289 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__35268,G__35269,G__35270,G__35271,G__35272,G__35273,G__35274,G__35275,G__35276,G__35277,G__35278,G__35279,G__35280,G__35281,G__35282,G__35283,G__35284,G__35285,G__35286,G__35287,G__35288,G__35289) : cljs.core.apply.call(null,G__35268,G__35269,G__35270,G__35271,G__35272,G__35273,G__35274,G__35275,G__35276,G__35277,G__35278,G__35279,G__35280,G__35281,G__35282,G__35283,G__35284,G__35285,G__35286,G__35287,G__35288,G__35289));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__35294 = o;
if(G__35294){
var bit__24358__auto__ = (G__35294.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24358__auto__) || (G__35294.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__35294.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__35294);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__35294);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__23665__auto__ = !((o == null));
if(and__23665__auto__){
var G__35298 = o;
if(G__35298){
var bit__24358__auto__ = (G__35298.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24358__auto__) || (G__35298.cljs$core$IMeta$)){
return true;
} else {
if((!G__35298.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__35298);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__35298);
}
} else {
return and__23665__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__35301__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__35302 = ret;
var G__35303 = cljs.core.first(ks);
var G__35304 = cljs.core.next(ks);
coll = G__35302;
k = G__35303;
ks = G__35304;
continue;
} else {
return ret;
}
}
break;
}
};
var G__35301 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__35305__i = 0, G__35305__a = new Array(arguments.length -  2);
while (G__35305__i < G__35305__a.length) {G__35305__a[G__35305__i] = arguments[G__35305__i + 2]; ++G__35305__i;}
  ks = new cljs.core.IndexedSeq(G__35305__a,0);
} 
return G__35301__delegate.call(this,coll,k,ks);};
G__35301.cljs$lang$maxFixedArity = 2;
G__35301.cljs$lang$applyTo = (function (arglist__35306){
var coll = cljs.core.first(arglist__35306);
arglist__35306 = cljs.core.next(arglist__35306);
var k = cljs.core.first(arglist__35306);
var ks = cljs.core.rest(arglist__35306);
return G__35301__delegate(coll,k,ks);
});
G__35301.cljs$core$IFn$_invoke$arity$variadic = G__35301__delegate;
return G__35301;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__35307 = null;
if (arguments.length > 2) {
var G__35308__i = 0, G__35308__a = new Array(arguments.length -  2);
while (G__35308__i < G__35308__a.length) {G__35308__a[G__35308__i] = arguments[G__35308__i + 2]; ++G__35308__i;}
G__35307 = new cljs.core.IndexedSeq(G__35308__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__35307);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__35310 = x;
if(G__35310){
var bit__24358__auto__ = (G__35310.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24358__auto__) || (G__35310.cljs$core$ICollection$)){
return true;
} else {
if((!G__35310.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__35310);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__35310);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__35312 = x;
if(G__35312){
var bit__24358__auto__ = (G__35312.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24358__auto__) || (G__35312.cljs$core$ISet$)){
return true;
} else {
if((!G__35312.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__35312);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__35312);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__35314 = x;
if(G__35314){
var bit__24358__auto__ = (G__35314.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24358__auto__) || (G__35314.cljs$core$IAssociative$)){
return true;
} else {
if((!G__35314.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__35314);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__35314);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__35316 = x;
if(G__35316){
var bit__24358__auto__ = (G__35316.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24358__auto__) || (G__35316.cljs$core$ISequential$)){
return true;
} else {
if((!G__35316.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__35316);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__35316);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__35318 = x;
if(G__35318){
var bit__24358__auto__ = (G__35318.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24358__auto__) || (G__35318.cljs$core$ISorted$)){
return true;
} else {
if((!G__35318.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__35318);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__35318);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__35320 = x;
if(G__35320){
var bit__24358__auto__ = (G__35320.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24358__auto__) || (G__35320.cljs$core$IReduce$)){
return true;
} else {
if((!G__35320.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__35320);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__35320);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__35322 = x;
if(G__35322){
var bit__24358__auto__ = (G__35322.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24358__auto__) || (G__35322.cljs$core$IMap$)){
return true;
} else {
if((!G__35322.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__35322);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__35322);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__35324 = x;
if(G__35324){
var bit__24358__auto__ = (G__35324.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24358__auto__) || (G__35324.cljs$core$IVector$)){
return true;
} else {
if((!G__35324.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__35324);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__35324);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__35326 = x;
if(G__35326){
var bit__24351__auto__ = (G__35326.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24351__auto__) || (G__35326.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj35332 = {};
return obj35332;
});
var js_obj__1 = (function() { 
var G__35335__delegate = function (keyvals){
var G__35333 = goog.object.create;
var G__35334 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__35333,G__35334) : cljs.core.apply.call(null,G__35333,G__35334));
};
var G__35335 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35336__i = 0, G__35336__a = new Array(arguments.length -  0);
while (G__35336__i < G__35336__a.length) {G__35336__a[G__35336__i] = arguments[G__35336__i + 0]; ++G__35336__i;}
  keyvals = new cljs.core.IndexedSeq(G__35336__a,0);
} 
return G__35335__delegate.call(this,keyvals);};
G__35335.cljs$lang$maxFixedArity = 0;
G__35335.cljs$lang$applyTo = (function (arglist__35337){
var keyvals = cljs.core.seq(arglist__35337);
return G__35335__delegate(keyvals);
});
G__35335.cljs$core$IFn$_invoke$arity$variadic = G__35335__delegate;
return G__35335;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__35338 = null;
if (arguments.length > 0) {
var G__35339__i = 0, G__35339__a = new Array(arguments.length -  0);
while (G__35339__i < G__35339__a.length) {G__35339__a[G__35339__i] = arguments[G__35339__i + 0]; ++G__35339__i;}
G__35338 = new cljs.core.IndexedSeq(G__35339__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__35338);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__35342_35344 = obj;
var G__35343_35345 = ((function (G__35342_35344,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__35342_35344,keys))
;
goog.object.forEach(G__35342_35344,G__35343_35345);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__35346 = (i__$1 + (1));
var G__35347 = (j__$1 + (1));
var G__35348 = (len__$1 - (1));
i__$1 = G__35346;
j__$1 = G__35347;
len__$1 = G__35348;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__35349 = (i__$1 - (1));
var G__35350 = (j__$1 - (1));
var G__35351 = (len__$1 - (1));
i__$1 = G__35349;
j__$1 = G__35350;
len__$1 = G__35351;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj35353 = {};
return obj35353;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__35355 = s;
if(G__35355){
var bit__24358__auto__ = (G__35355.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24358__auto__) || (G__35355.cljs$core$ISeq$)){
return true;
} else {
if((!G__35355.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__35355);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__35355);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__35357 = s;
if(G__35357){
var bit__24358__auto__ = (G__35357.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24358__auto__) || (G__35357.cljs$core$ISeqable$)){
return true;
} else {
if((!G__35357.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__35357);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__35357);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__23677__auto__ = cljs.core.fn_QMARK_(f);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var G__35361 = f;
if(G__35361){
var bit__24358__auto__ = (G__35361.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24358__auto__) || (G__35361.cljs$core$IFn$)){
return true;
} else {
if((!G__35361.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__35361);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__35361);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__35374 = n;
return isNaN(G__35374);
})())) && (!((n === Infinity))) && (((function (){var G__35375 = n;
return parseFloat(G__35375);
})() === (function (){var G__35376 = n;
var G__35377 = (10);
return parseInt(G__35376,G__35377);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__35378__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__35379 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__35380 = etc;
s = G__35379;
xs = G__35380;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__35378 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35381__i = 0, G__35381__a = new Array(arguments.length -  2);
while (G__35381__i < G__35381__a.length) {G__35381__a[G__35381__i] = arguments[G__35381__i + 2]; ++G__35381__i;}
  more = new cljs.core.IndexedSeq(G__35381__a,0);
} 
return G__35378__delegate.call(this,x,y,more);};
G__35378.cljs$lang$maxFixedArity = 2;
G__35378.cljs$lang$applyTo = (function (arglist__35382){
var x = cljs.core.first(arglist__35382);
arglist__35382 = cljs.core.next(arglist__35382);
var y = cljs.core.first(arglist__35382);
var more = cljs.core.rest(arglist__35382);
return G__35378__delegate(x,y,more);
});
G__35378.cljs$core$IFn$_invoke$arity$variadic = G__35378__delegate;
return G__35378;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__35383 = null;
if (arguments.length > 2) {
var G__35384__i = 0, G__35384__a = new Array(arguments.length -  2);
while (G__35384__i < G__35384__a.length) {G__35384__a[G__35384__i] = arguments[G__35384__i + 2]; ++G__35384__i;}
G__35383 = new cljs.core.IndexedSeq(G__35384__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35383);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__35388 = x;
if(G__35388){
var bit__24351__auto__ = (G__35388.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24351__auto__) || (G__35388.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__35389 = x;
var G__35390 = y;
return goog.array.defaultCompare(G__35389,G__35390);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__35395 = xs;
var G__35396 = ys;
var G__35397 = len;
var G__35398 = (n + (1));
xs = G__35395;
ys = G__35396;
len = G__35397;
n = G__35398;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__35403 = x;
var G__35404 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35403,G__35404) : f.call(null,G__35403,G__35404));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__35405 = y;
var G__35406 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35405,G__35406) : f.call(null,G__35405,G__35406));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__35412 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__35412) : cljs.core.to_array.call(null,G__35412));
})();
var G__35413_35415 = a;
var G__35414_35416 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__35413_35415,G__35414_35416);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__35422 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__35422) : keyfn.call(null,G__35422));
})(),(function (){var G__35423 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__35423) : keyfn.call(null,G__35423));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__35429 = f;
var G__35430 = cljs.core.first(s);
var G__35431 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__35429,G__35430,G__35431) : cljs.core.reduce.call(null,G__35429,G__35430,G__35431));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__35432 = val__$1;
var G__35433 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35432,G__35433) : f.call(null,G__35432,G__35433));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__35434 = nval;
var G__35435 = cljs.core.next(coll__$1);
val__$1 = G__35434;
coll__$1 = G__35435;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__35439 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__35439) : cljs.core.to_array.call(null,G__35439));
})();
var G__35440_35442 = a;
goog.array.shuffle(G__35440_35442);

var G__35441 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__35441) : cljs.core.vec.call(null,G__35441));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__35445 = coll;
if(G__35445){
var bit__24351__auto__ = (G__35445.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24351__auto__) || (G__35445.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__35446 = coll;
if(G__35446){
var bit__24351__auto__ = (G__35446.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24351__auto__) || (G__35446.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__35455 = null;
var G__35455__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__35455__1 = (function (x){
var G__35452 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__35452) : cf.call(null,G__35452));
});
var G__35455__2 = (function (x,y){
var G__35453 = x;
var G__35454 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35453,G__35454) : f.call(null,G__35453,G__35454));
});
G__35455 = function(x,y){
switch(arguments.length){
case 0:
return G__35455__0.call(this);
case 1:
return G__35455__1.call(this,x);
case 2:
return G__35455__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35455.cljs$core$IFn$_invoke$arity$0 = G__35455__0;
G__35455.cljs$core$IFn$_invoke$arity$1 = G__35455__1;
G__35455.cljs$core$IFn$_invoke$arity$2 = G__35455__2;
return G__35455;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__35462 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__35462) : xform.call(null,G__35462));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__35463 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__35463) : f__$1.call(null,G__35463));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__35464__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__35464 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35465__i = 0, G__35465__a = new Array(arguments.length -  2);
while (G__35465__i < G__35465__a.length) {G__35465__a[G__35465__i] = arguments[G__35465__i + 2]; ++G__35465__i;}
  more = new cljs.core.IndexedSeq(G__35465__a,0);
} 
return G__35464__delegate.call(this,x,y,more);};
G__35464.cljs$lang$maxFixedArity = 2;
G__35464.cljs$lang$applyTo = (function (arglist__35466){
var x = cljs.core.first(arglist__35466);
arglist__35466 = cljs.core.next(arglist__35466);
var y = cljs.core.first(arglist__35466);
var more = cljs.core.rest(arglist__35466);
return G__35464__delegate(x,y,more);
});
G__35464.cljs$core$IFn$_invoke$arity$variadic = G__35464__delegate;
return G__35464;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__35467 = null;
if (arguments.length > 2) {
var G__35468__i = 0, G__35468__a = new Array(arguments.length -  2);
while (G__35468__i < G__35468__a.length) {G__35468__a[G__35468__i] = arguments[G__35468__i + 2]; ++G__35468__i;}
G__35467 = new cljs.core.IndexedSeq(G__35468__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35467);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__35469__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__35469 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35470__i = 0, G__35470__a = new Array(arguments.length -  2);
while (G__35470__i < G__35470__a.length) {G__35470__a[G__35470__i] = arguments[G__35470__i + 2]; ++G__35470__i;}
  more = new cljs.core.IndexedSeq(G__35470__a,0);
} 
return G__35469__delegate.call(this,x,y,more);};
G__35469.cljs$lang$maxFixedArity = 2;
G__35469.cljs$lang$applyTo = (function (arglist__35471){
var x = cljs.core.first(arglist__35471);
arglist__35471 = cljs.core.next(arglist__35471);
var y = cljs.core.first(arglist__35471);
var more = cljs.core.rest(arglist__35471);
return G__35469__delegate(x,y,more);
});
G__35469.cljs$core$IFn$_invoke$arity$variadic = G__35469__delegate;
return G__35469;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__35472 = null;
if (arguments.length > 2) {
var G__35473__i = 0, G__35473__a = new Array(arguments.length -  2);
while (G__35473__i < G__35473__a.length) {G__35473__a[G__35473__i] = arguments[G__35473__i + 2]; ++G__35473__i;}
G__35472 = new cljs.core.IndexedSeq(G__35473__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35472);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__35474__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__35474 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35475__i = 0, G__35475__a = new Array(arguments.length -  2);
while (G__35475__i < G__35475__a.length) {G__35475__a[G__35475__i] = arguments[G__35475__i + 2]; ++G__35475__i;}
  more = new cljs.core.IndexedSeq(G__35475__a,0);
} 
return G__35474__delegate.call(this,x,y,more);};
G__35474.cljs$lang$maxFixedArity = 2;
G__35474.cljs$lang$applyTo = (function (arglist__35476){
var x = cljs.core.first(arglist__35476);
arglist__35476 = cljs.core.next(arglist__35476);
var y = cljs.core.first(arglist__35476);
var more = cljs.core.rest(arglist__35476);
return G__35474__delegate(x,y,more);
});
G__35474.cljs$core$IFn$_invoke$arity$variadic = G__35474__delegate;
return G__35474;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__35477 = null;
if (arguments.length > 2) {
var G__35478__i = 0, G__35478__a = new Array(arguments.length -  2);
while (G__35478__i < G__35478__a.length) {G__35478__a[G__35478__i] = arguments[G__35478__i + 2]; ++G__35478__i;}
G__35477 = new cljs.core.IndexedSeq(G__35478__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35477);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__35483__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__35483 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35484__i = 0, G__35484__a = new Array(arguments.length -  2);
while (G__35484__i < G__35484__a.length) {G__35484__a[G__35484__i] = arguments[G__35484__i + 2]; ++G__35484__i;}
  more = new cljs.core.IndexedSeq(G__35484__a,0);
} 
return G__35483__delegate.call(this,x,y,more);};
G__35483.cljs$lang$maxFixedArity = 2;
G__35483.cljs$lang$applyTo = (function (arglist__35485){
var x = cljs.core.first(arglist__35485);
arglist__35485 = cljs.core.next(arglist__35485);
var y = cljs.core.first(arglist__35485);
var more = cljs.core.rest(arglist__35485);
return G__35483__delegate(x,y,more);
});
G__35483.cljs$core$IFn$_invoke$arity$variadic = G__35483__delegate;
return G__35483;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__35486 = null;
if (arguments.length > 2) {
var G__35487__i = 0, G__35487__a = new Array(arguments.length -  2);
while (G__35487__i < G__35487__a.length) {G__35487__a[G__35487__i] = arguments[G__35487__i + 2]; ++G__35487__i;}
G__35486 = new cljs.core.IndexedSeq(G__35487__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35486);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__35488__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__35489 = y;
var G__35490 = cljs.core.first(more);
var G__35491 = cljs.core.next(more);
x = G__35489;
y = G__35490;
more = G__35491;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__35488 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35492__i = 0, G__35492__a = new Array(arguments.length -  2);
while (G__35492__i < G__35492__a.length) {G__35492__a[G__35492__i] = arguments[G__35492__i + 2]; ++G__35492__i;}
  more = new cljs.core.IndexedSeq(G__35492__a,0);
} 
return G__35488__delegate.call(this,x,y,more);};
G__35488.cljs$lang$maxFixedArity = 2;
G__35488.cljs$lang$applyTo = (function (arglist__35493){
var x = cljs.core.first(arglist__35493);
arglist__35493 = cljs.core.next(arglist__35493);
var y = cljs.core.first(arglist__35493);
var more = cljs.core.rest(arglist__35493);
return G__35488__delegate(x,y,more);
});
G__35488.cljs$core$IFn$_invoke$arity$variadic = G__35488__delegate;
return G__35488;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__35494 = null;
if (arguments.length > 2) {
var G__35495__i = 0, G__35495__a = new Array(arguments.length -  2);
while (G__35495__i < G__35495__a.length) {G__35495__a[G__35495__i] = arguments[G__35495__i + 2]; ++G__35495__i;}
G__35494 = new cljs.core.IndexedSeq(G__35495__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35494);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__35496__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__35497 = y;
var G__35498 = cljs.core.first(more);
var G__35499 = cljs.core.next(more);
x = G__35497;
y = G__35498;
more = G__35499;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__35496 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35500__i = 0, G__35500__a = new Array(arguments.length -  2);
while (G__35500__i < G__35500__a.length) {G__35500__a[G__35500__i] = arguments[G__35500__i + 2]; ++G__35500__i;}
  more = new cljs.core.IndexedSeq(G__35500__a,0);
} 
return G__35496__delegate.call(this,x,y,more);};
G__35496.cljs$lang$maxFixedArity = 2;
G__35496.cljs$lang$applyTo = (function (arglist__35501){
var x = cljs.core.first(arglist__35501);
arglist__35501 = cljs.core.next(arglist__35501);
var y = cljs.core.first(arglist__35501);
var more = cljs.core.rest(arglist__35501);
return G__35496__delegate(x,y,more);
});
G__35496.cljs$core$IFn$_invoke$arity$variadic = G__35496__delegate;
return G__35496;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__35502 = null;
if (arguments.length > 2) {
var G__35503__i = 0, G__35503__a = new Array(arguments.length -  2);
while (G__35503__i < G__35503__a.length) {G__35503__a[G__35503__i] = arguments[G__35503__i + 2]; ++G__35503__i;}
G__35502 = new cljs.core.IndexedSeq(G__35503__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35502);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__35504__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__35505 = y;
var G__35506 = cljs.core.first(more);
var G__35507 = cljs.core.next(more);
x = G__35505;
y = G__35506;
more = G__35507;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__35504 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35508__i = 0, G__35508__a = new Array(arguments.length -  2);
while (G__35508__i < G__35508__a.length) {G__35508__a[G__35508__i] = arguments[G__35508__i + 2]; ++G__35508__i;}
  more = new cljs.core.IndexedSeq(G__35508__a,0);
} 
return G__35504__delegate.call(this,x,y,more);};
G__35504.cljs$lang$maxFixedArity = 2;
G__35504.cljs$lang$applyTo = (function (arglist__35509){
var x = cljs.core.first(arglist__35509);
arglist__35509 = cljs.core.next(arglist__35509);
var y = cljs.core.first(arglist__35509);
var more = cljs.core.rest(arglist__35509);
return G__35504__delegate(x,y,more);
});
G__35504.cljs$core$IFn$_invoke$arity$variadic = G__35504__delegate;
return G__35504;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__35510 = null;
if (arguments.length > 2) {
var G__35511__i = 0, G__35511__a = new Array(arguments.length -  2);
while (G__35511__i < G__35511__a.length) {G__35511__a[G__35511__i] = arguments[G__35511__i + 2]; ++G__35511__i;}
G__35510 = new cljs.core.IndexedSeq(G__35511__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35510);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__35512__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__35513 = y;
var G__35514 = cljs.core.first(more);
var G__35515 = cljs.core.next(more);
x = G__35513;
y = G__35514;
more = G__35515;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__35512 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35516__i = 0, G__35516__a = new Array(arguments.length -  2);
while (G__35516__i < G__35516__a.length) {G__35516__a[G__35516__i] = arguments[G__35516__i + 2]; ++G__35516__i;}
  more = new cljs.core.IndexedSeq(G__35516__a,0);
} 
return G__35512__delegate.call(this,x,y,more);};
G__35512.cljs$lang$maxFixedArity = 2;
G__35512.cljs$lang$applyTo = (function (arglist__35517){
var x = cljs.core.first(arglist__35517);
arglist__35517 = cljs.core.next(arglist__35517);
var y = cljs.core.first(arglist__35517);
var more = cljs.core.rest(arglist__35517);
return G__35512__delegate(x,y,more);
});
G__35512.cljs$core$IFn$_invoke$arity$variadic = G__35512__delegate;
return G__35512;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__35518 = null;
if (arguments.length > 2) {
var G__35519__i = 0, G__35519__a = new Array(arguments.length -  2);
while (G__35519__i < G__35519__a.length) {G__35519__a[G__35519__i] = arguments[G__35519__i + 2]; ++G__35519__i;}
G__35518 = new cljs.core.IndexedSeq(G__35519__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__23994__auto__ = x;
var y__23995__auto__ = y;
return ((x__23994__auto__ > y__23995__auto__) ? x__23994__auto__ : y__23995__auto__);
});
var max__3 = (function() { 
var G__35520__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__23994__auto__ = x;
var y__23995__auto__ = y;
return ((x__23994__auto__ > y__23995__auto__) ? x__23994__auto__ : y__23995__auto__);
})(),more);
};
var G__35520 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35521__i = 0, G__35521__a = new Array(arguments.length -  2);
while (G__35521__i < G__35521__a.length) {G__35521__a[G__35521__i] = arguments[G__35521__i + 2]; ++G__35521__i;}
  more = new cljs.core.IndexedSeq(G__35521__a,0);
} 
return G__35520__delegate.call(this,x,y,more);};
G__35520.cljs$lang$maxFixedArity = 2;
G__35520.cljs$lang$applyTo = (function (arglist__35522){
var x = cljs.core.first(arglist__35522);
arglist__35522 = cljs.core.next(arglist__35522);
var y = cljs.core.first(arglist__35522);
var more = cljs.core.rest(arglist__35522);
return G__35520__delegate(x,y,more);
});
G__35520.cljs$core$IFn$_invoke$arity$variadic = G__35520__delegate;
return G__35520;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__35523 = null;
if (arguments.length > 2) {
var G__35524__i = 0, G__35524__a = new Array(arguments.length -  2);
while (G__35524__i < G__35524__a.length) {G__35524__a[G__35524__i] = arguments[G__35524__i + 2]; ++G__35524__i;}
G__35523 = new cljs.core.IndexedSeq(G__35524__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__24001__auto__ = x;
var y__24002__auto__ = y;
return ((x__24001__auto__ < y__24002__auto__) ? x__24001__auto__ : y__24002__auto__);
});
var min__3 = (function() { 
var G__35525__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__24001__auto__ = x;
var y__24002__auto__ = y;
return ((x__24001__auto__ < y__24002__auto__) ? x__24001__auto__ : y__24002__auto__);
})(),more);
};
var G__35525 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35526__i = 0, G__35526__a = new Array(arguments.length -  2);
while (G__35526__i < G__35526__a.length) {G__35526__a[G__35526__i] = arguments[G__35526__i + 2]; ++G__35526__i;}
  more = new cljs.core.IndexedSeq(G__35526__a,0);
} 
return G__35525__delegate.call(this,x,y,more);};
G__35525.cljs$lang$maxFixedArity = 2;
G__35525.cljs$lang$applyTo = (function (arglist__35527){
var x = cljs.core.first(arglist__35527);
arglist__35527 = cljs.core.next(arglist__35527);
var y = cljs.core.first(arglist__35527);
var more = cljs.core.rest(arglist__35527);
return G__35525__delegate(x,y,more);
});
G__35525.cljs$core$IFn$_invoke$arity$variadic = G__35525__delegate;
return G__35525;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__35528 = null;
if (arguments.length > 2) {
var G__35529__i = 0, G__35529__a = new Array(arguments.length -  2);
while (G__35529__i < G__35529__a.length) {G__35529__a[G__35529__i] = arguments[G__35529__i + 2]; ++G__35529__i;}
G__35528 = new cljs.core.IndexedSeq(G__35529__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35528);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__35530__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__35530 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35531__i = 0, G__35531__a = new Array(arguments.length -  2);
while (G__35531__i < G__35531__a.length) {G__35531__a[G__35531__i] = arguments[G__35531__i + 2]; ++G__35531__i;}
  more = new cljs.core.IndexedSeq(G__35531__a,0);
} 
return G__35530__delegate.call(this,x,y,more);};
G__35530.cljs$lang$maxFixedArity = 2;
G__35530.cljs$lang$applyTo = (function (arglist__35532){
var x = cljs.core.first(arglist__35532);
arglist__35532 = cljs.core.next(arglist__35532);
var y = cljs.core.first(arglist__35532);
var more = cljs.core.rest(arglist__35532);
return G__35530__delegate(x,y,more);
});
G__35530.cljs$core$IFn$_invoke$arity$variadic = G__35530__delegate;
return G__35530;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__35533 = null;
if (arguments.length > 2) {
var G__35534__i = 0, G__35534__a = new Array(arguments.length -  2);
while (G__35534__i < G__35534__a.length) {G__35534__a[G__35534__i] = arguments[G__35534__i + 2]; ++G__35534__i;}
G__35533 = new cljs.core.IndexedSeq(G__35534__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__35535__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__35535 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35536__i = 0, G__35536__a = new Array(arguments.length -  2);
while (G__35536__i < G__35536__a.length) {G__35536__a[G__35536__i] = arguments[G__35536__i + 2]; ++G__35536__i;}
  more = new cljs.core.IndexedSeq(G__35536__a,0);
} 
return G__35535__delegate.call(this,x,y,more);};
G__35535.cljs$lang$maxFixedArity = 2;
G__35535.cljs$lang$applyTo = (function (arglist__35537){
var x = cljs.core.first(arglist__35537);
arglist__35537 = cljs.core.next(arglist__35537);
var y = cljs.core.first(arglist__35537);
var more = cljs.core.rest(arglist__35537);
return G__35535__delegate(x,y,more);
});
G__35535.cljs$core$IFn$_invoke$arity$variadic = G__35535__delegate;
return G__35535;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__35538 = null;
if (arguments.length > 2) {
var G__35539__i = 0, G__35539__a = new Array(arguments.length -  2);
while (G__35539__i < G__35539__a.length) {G__35539__a[G__35539__i] = arguments[G__35539__i + 2]; ++G__35539__i;}
G__35538 = new cljs.core.IndexedSeq(G__35539__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35538);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__35544__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__35544 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35545__i = 0, G__35545__a = new Array(arguments.length -  2);
while (G__35545__i < G__35545__a.length) {G__35545__a[G__35545__i] = arguments[G__35545__i + 2]; ++G__35545__i;}
  more = new cljs.core.IndexedSeq(G__35545__a,0);
} 
return G__35544__delegate.call(this,x,y,more);};
G__35544.cljs$lang$maxFixedArity = 2;
G__35544.cljs$lang$applyTo = (function (arglist__35546){
var x = cljs.core.first(arglist__35546);
arglist__35546 = cljs.core.next(arglist__35546);
var y = cljs.core.first(arglist__35546);
var more = cljs.core.rest(arglist__35546);
return G__35544__delegate(x,y,more);
});
G__35544.cljs$core$IFn$_invoke$arity$variadic = G__35544__delegate;
return G__35544;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__35547 = null;
if (arguments.length > 2) {
var G__35548__i = 0, G__35548__a = new Array(arguments.length -  2);
while (G__35548__i < G__35548__a.length) {G__35548__a[G__35548__i] = arguments[G__35548__i + 2]; ++G__35548__i;}
G__35547 = new cljs.core.IndexedSeq(G__35548__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35547);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__35549__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__35549 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35550__i = 0, G__35550__a = new Array(arguments.length -  2);
while (G__35550__i < G__35550__a.length) {G__35550__a[G__35550__i] = arguments[G__35550__i + 2]; ++G__35550__i;}
  more = new cljs.core.IndexedSeq(G__35550__a,0);
} 
return G__35549__delegate.call(this,x,y,more);};
G__35549.cljs$lang$maxFixedArity = 2;
G__35549.cljs$lang$applyTo = (function (arglist__35551){
var x = cljs.core.first(arglist__35551);
arglist__35551 = cljs.core.next(arglist__35551);
var y = cljs.core.first(arglist__35551);
var more = cljs.core.rest(arglist__35551);
return G__35549__delegate(x,y,more);
});
G__35549.cljs$core$IFn$_invoke$arity$variadic = G__35549__delegate;
return G__35549;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__35552 = null;
if (arguments.length > 2) {
var G__35553__i = 0, G__35553__a = new Array(arguments.length -  2);
while (G__35553__i < G__35553__a.length) {G__35553__a[G__35553__i] = arguments[G__35553__i + 2]; ++G__35553__i;}
G__35552 = new cljs.core.IndexedSeq(G__35553__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35552);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__35554__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__35554 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35555__i = 0, G__35555__a = new Array(arguments.length -  2);
while (G__35555__i < G__35555__a.length) {G__35555__a[G__35555__i] = arguments[G__35555__i + 2]; ++G__35555__i;}
  more = new cljs.core.IndexedSeq(G__35555__a,0);
} 
return G__35554__delegate.call(this,x,y,more);};
G__35554.cljs$lang$maxFixedArity = 2;
G__35554.cljs$lang$applyTo = (function (arglist__35556){
var x = cljs.core.first(arglist__35556);
arglist__35556 = cljs.core.next(arglist__35556);
var y = cljs.core.first(arglist__35556);
var more = cljs.core.rest(arglist__35556);
return G__35554__delegate(x,y,more);
});
G__35554.cljs$core$IFn$_invoke$arity$variadic = G__35554__delegate;
return G__35554;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__35557 = null;
if (arguments.length > 2) {
var G__35558__i = 0, G__35558__a = new Array(arguments.length -  2);
while (G__35558__i < G__35558__a.length) {G__35558__a[G__35558__i] = arguments[G__35558__i + 2]; ++G__35558__i;}
G__35557 = new cljs.core.IndexedSeq(G__35558__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__35561 = x;
var G__35562 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__35561,G__35562) : cljs.core.mod.call(null,G__35561,G__35562));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__35563__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__35563 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35564__i = 0, G__35564__a = new Array(arguments.length -  2);
while (G__35564__i < G__35564__a.length) {G__35564__a[G__35564__i] = arguments[G__35564__i + 2]; ++G__35564__i;}
  more = new cljs.core.IndexedSeq(G__35564__a,0);
} 
return G__35563__delegate.call(this,x,y,more);};
G__35563.cljs$lang$maxFixedArity = 2;
G__35563.cljs$lang$applyTo = (function (arglist__35565){
var x = cljs.core.first(arglist__35565);
arglist__35565 = cljs.core.next(arglist__35565);
var y = cljs.core.first(arglist__35565);
var more = cljs.core.rest(arglist__35565);
return G__35563__delegate(x,y,more);
});
G__35563.cljs$core$IFn$_invoke$arity$variadic = G__35563__delegate;
return G__35563;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__35566 = null;
if (arguments.length > 2) {
var G__35567__i = 0, G__35567__a = new Array(arguments.length -  2);
while (G__35567__i < G__35567__a.length) {G__35567__a[G__35567__i] = arguments[G__35567__i + 2]; ++G__35567__i;}
G__35566 = new cljs.core.IndexedSeq(G__35567__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__35568__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__35568 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35569__i = 0, G__35569__a = new Array(arguments.length -  2);
while (G__35569__i < G__35569__a.length) {G__35569__a[G__35569__i] = arguments[G__35569__i + 2]; ++G__35569__i;}
  more = new cljs.core.IndexedSeq(G__35569__a,0);
} 
return G__35568__delegate.call(this,x,y,more);};
G__35568.cljs$lang$maxFixedArity = 2;
G__35568.cljs$lang$applyTo = (function (arglist__35570){
var x = cljs.core.first(arglist__35570);
arglist__35570 = cljs.core.next(arglist__35570);
var y = cljs.core.first(arglist__35570);
var more = cljs.core.rest(arglist__35570);
return G__35568__delegate(x,y,more);
});
G__35568.cljs$core$IFn$_invoke$arity$variadic = G__35568__delegate;
return G__35568;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__35571 = null;
if (arguments.length > 2) {
var G__35572__i = 0, G__35572__a = new Array(arguments.length -  2);
while (G__35572__i < G__35572__a.length) {G__35572__a[G__35572__i] = arguments[G__35572__i + 2]; ++G__35572__i;}
G__35571 = new cljs.core.IndexedSeq(G__35572__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35571);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__35575 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__35575) : Math.floor.call(null,G__35575));
} else {
var G__35576 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__35576) : Math.ceil.call(null,G__35576));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__35577__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__35577 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35578__i = 0, G__35578__a = new Array(arguments.length -  2);
while (G__35578__i < G__35578__a.length) {G__35578__a[G__35578__i] = arguments[G__35578__i + 2]; ++G__35578__i;}
  more = new cljs.core.IndexedSeq(G__35578__a,0);
} 
return G__35577__delegate.call(this,x,y,more);};
G__35577.cljs$lang$maxFixedArity = 2;
G__35577.cljs$lang$applyTo = (function (arglist__35579){
var x = cljs.core.first(arglist__35579);
arglist__35579 = cljs.core.next(arglist__35579);
var y = cljs.core.first(arglist__35579);
var more = cljs.core.rest(arglist__35579);
return G__35577__delegate(x,y,more);
});
G__35577.cljs$core$IFn$_invoke$arity$variadic = G__35577__delegate;
return G__35577;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__35580 = null;
if (arguments.length > 2) {
var G__35581__i = 0, G__35581__a = new Array(arguments.length -  2);
while (G__35581__i < G__35581__a.length) {G__35581__a[G__35581__i] = arguments[G__35581__i + 2]; ++G__35581__i;}
G__35580 = new cljs.core.IndexedSeq(G__35581__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35580);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__35582__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__35582 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35583__i = 0, G__35583__a = new Array(arguments.length -  2);
while (G__35583__i < G__35583__a.length) {G__35583__a[G__35583__i] = arguments[G__35583__i + 2]; ++G__35583__i;}
  more = new cljs.core.IndexedSeq(G__35583__a,0);
} 
return G__35582__delegate.call(this,x,y,more);};
G__35582.cljs$lang$maxFixedArity = 2;
G__35582.cljs$lang$applyTo = (function (arglist__35584){
var x = cljs.core.first(arglist__35584);
arglist__35584 = cljs.core.next(arglist__35584);
var y = cljs.core.first(arglist__35584);
var more = cljs.core.rest(arglist__35584);
return G__35582__delegate(x,y,more);
});
G__35582.cljs$core$IFn$_invoke$arity$variadic = G__35582__delegate;
return G__35582;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__35585 = null;
if (arguments.length > 2) {
var G__35586__i = 0, G__35586__a = new Array(arguments.length -  2);
while (G__35586__i < G__35586__a.length) {G__35586__a[G__35586__i] = arguments[G__35586__i + 2]; ++G__35586__i;}
G__35585 = new cljs.core.IndexedSeq(G__35586__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35585);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__35587__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__35587 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35588__i = 0, G__35588__a = new Array(arguments.length -  2);
while (G__35588__i < G__35588__a.length) {G__35588__a[G__35588__i] = arguments[G__35588__i + 2]; ++G__35588__i;}
  more = new cljs.core.IndexedSeq(G__35588__a,0);
} 
return G__35587__delegate.call(this,x,y,more);};
G__35587.cljs$lang$maxFixedArity = 2;
G__35587.cljs$lang$applyTo = (function (arglist__35589){
var x = cljs.core.first(arglist__35589);
arglist__35589 = cljs.core.next(arglist__35589);
var y = cljs.core.first(arglist__35589);
var more = cljs.core.rest(arglist__35589);
return G__35587__delegate(x,y,more);
});
G__35587.cljs$core$IFn$_invoke$arity$variadic = G__35587__delegate;
return G__35587;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__35590 = null;
if (arguments.length > 2) {
var G__35591__i = 0, G__35591__a = new Array(arguments.length -  2);
while (G__35591__i < G__35591__a.length) {G__35591__a[G__35591__i] = arguments[G__35591__i + 2]; ++G__35591__i;}
G__35590 = new cljs.core.IndexedSeq(G__35591__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35590);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__35592__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__35592 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35593__i = 0, G__35593__a = new Array(arguments.length -  2);
while (G__35593__i < G__35593__a.length) {G__35593__a[G__35593__i] = arguments[G__35593__i + 2]; ++G__35593__i;}
  more = new cljs.core.IndexedSeq(G__35593__a,0);
} 
return G__35592__delegate.call(this,x,y,more);};
G__35592.cljs$lang$maxFixedArity = 2;
G__35592.cljs$lang$applyTo = (function (arglist__35594){
var x = cljs.core.first(arglist__35594);
arglist__35594 = cljs.core.next(arglist__35594);
var y = cljs.core.first(arglist__35594);
var more = cljs.core.rest(arglist__35594);
return G__35592__delegate(x,y,more);
});
G__35592.cljs$core$IFn$_invoke$arity$variadic = G__35592__delegate;
return G__35592;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__35595 = null;
if (arguments.length > 2) {
var G__35596__i = 0, G__35596__a = new Array(arguments.length -  2);
while (G__35596__i < G__35596__a.length) {G__35596__a[G__35596__i] = arguments[G__35596__i + 2]; ++G__35596__i;}
G__35595 = new cljs.core.IndexedSeq(G__35596__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35595);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__35601__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__35602 = y;
var G__35603 = cljs.core.first(more);
var G__35604 = cljs.core.next(more);
x = G__35602;
y = G__35603;
more = G__35604;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__35601 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__35605__i = 0, G__35605__a = new Array(arguments.length -  2);
while (G__35605__i < G__35605__a.length) {G__35605__a[G__35605__i] = arguments[G__35605__i + 2]; ++G__35605__i;}
  more = new cljs.core.IndexedSeq(G__35605__a,0);
} 
return G__35601__delegate.call(this,x,y,more);};
G__35601.cljs$lang$maxFixedArity = 2;
G__35601.cljs$lang$applyTo = (function (arglist__35606){
var x = cljs.core.first(arglist__35606);
arglist__35606 = cljs.core.next(arglist__35606);
var y = cljs.core.first(arglist__35606);
var more = cljs.core.rest(arglist__35606);
return G__35601__delegate(x,y,more);
});
G__35601.cljs$core$IFn$_invoke$arity$variadic = G__35601__delegate;
return G__35601;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__35607 = null;
if (arguments.length > 2) {
var G__35608__i = 0, G__35608__a = new Array(arguments.length -  2);
while (G__35608__i < G__35608__a.length) {G__35608__a[G__35608__i] = arguments[G__35608__i + 2]; ++G__35608__i;}
G__35607 = new cljs.core.IndexedSeq(G__35608__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35607);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__35609 = (n__$1 - (1));
var G__35610 = cljs.core.next(xs);
n__$1 = G__35609;
xs = G__35610;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__35614 = x;
return goog.string.buildString(G__35614);
}
});
var str__2 = (function() { 
var G__35615__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__35616 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__35617 = cljs.core.next(more);
sb = G__35616;
more = G__35617;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__35615 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__35618__i = 0, G__35618__a = new Array(arguments.length -  1);
while (G__35618__i < G__35618__a.length) {G__35618__a[G__35618__i] = arguments[G__35618__i + 1]; ++G__35618__i;}
  ys = new cljs.core.IndexedSeq(G__35618__a,0);
} 
return G__35615__delegate.call(this,x,ys);};
G__35615.cljs$lang$maxFixedArity = 1;
G__35615.cljs$lang$applyTo = (function (arglist__35619){
var x = cljs.core.first(arglist__35619);
var ys = cljs.core.rest(arglist__35619);
return G__35615__delegate(x,ys);
});
G__35615.cljs$core$IFn$_invoke$arity$variadic = G__35615__delegate;
return G__35615;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__35620 = null;
if (arguments.length > 1) {
var G__35621__i = 0, G__35621__a = new Array(arguments.length -  1);
while (G__35621__i < G__35621__a.length) {G__35621__a[G__35621__i] = arguments[G__35621__i + 1]; ++G__35621__i;}
G__35620 = new cljs.core.IndexedSeq(G__35621__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__35620);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__35622 = cljs.core.next(xs);
var G__35623 = cljs.core.next(ys);
xs = G__35622;
ys = G__35623;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__35624 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__35625 = cljs.core.next(s);
res = G__35624;
s = G__35625;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__35630 = ((h + (cljs.core.hash((function (){var G__35628 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35628) : cljs.core.key.call(null,G__35628));
})()) ^ cljs.core.hash((function (){var G__35629 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35629) : cljs.core.val.call(null,G__35629));
})()))) % (4503599627370496));
var G__35631 = cljs.core.next(s);
h = G__35630;
s = G__35631;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__35632 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__35633 = cljs.core.next(s__$1);
h = G__35632;
s__$1 = G__35633;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__35644_35654 = cljs.core.seq(fn_map);
var chunk__35645_35655 = null;
var count__35646_35656 = (0);
var i__35647_35657 = (0);
while(true){
if((i__35647_35657 < count__35646_35656)){
var vec__35648_35658 = chunk__35645_35655.cljs$core$IIndexed$_nth$arity$2(null,i__35647_35657);
var key_name_35659 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35648_35658,(0),null);
var f_35660 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35648_35658,(1),null);
var str_name_35661 = (function (){var G__35649 = key_name_35659;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__35649) : cljs.core.name.call(null,G__35649));
})();
(obj[str_name_35661] = f_35660);

var G__35662 = seq__35644_35654;
var G__35663 = chunk__35645_35655;
var G__35664 = count__35646_35656;
var G__35665 = (i__35647_35657 + (1));
seq__35644_35654 = G__35662;
chunk__35645_35655 = G__35663;
count__35646_35656 = G__35664;
i__35647_35657 = G__35665;
continue;
} else {
var temp__4126__auto___35666 = cljs.core.seq(seq__35644_35654);
if(temp__4126__auto___35666){
var seq__35644_35667__$1 = temp__4126__auto___35666;
if(cljs.core.chunked_seq_QMARK_(seq__35644_35667__$1)){
var c__24464__auto___35668 = (function (){var G__35650 = seq__35644_35667__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__35650) : cljs.core.chunk_first.call(null,G__35650));
})();
var G__35669 = (function (){var G__35651 = seq__35644_35667__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__35651) : cljs.core.chunk_rest.call(null,G__35651));
})();
var G__35670 = c__24464__auto___35668;
var G__35671 = cljs.core.count(c__24464__auto___35668);
var G__35672 = (0);
seq__35644_35654 = G__35669;
chunk__35645_35655 = G__35670;
count__35646_35656 = G__35671;
i__35647_35657 = G__35672;
continue;
} else {
var vec__35652_35673 = cljs.core.first(seq__35644_35667__$1);
var key_name_35674 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35652_35673,(0),null);
var f_35675 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35652_35673,(1),null);
var str_name_35676 = (function (){var G__35653 = key_name_35674;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__35653) : cljs.core.name.call(null,G__35653));
})();
(obj[str_name_35676] = f_35675);

var G__35677 = cljs.core.next(seq__35644_35667__$1);
var G__35678 = null;
var G__35679 = (0);
var G__35680 = (0);
seq__35644_35654 = G__35677;
chunk__35645_35655 = G__35678;
count__35646_35656 = G__35679;
i__35647_35657 = G__35680;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__35682 = coll;
if(G__35682){
var bit__24358__auto__ = (G__35682.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24358__auto__) || (G__35682.cljs$core$IReversible$)){
return true;
} else {
if((!G__35682.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__35682);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__35682);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__35683 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__35683;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__35684 = (i - (1));
var G__35685 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__35684;
r = G__35685;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__35686__i = 0, G__35686__a = new Array(arguments.length -  0);
while (G__35686__i < G__35686__a.length) {G__35686__a[G__35686__i] = arguments[G__35686__i + 0]; ++G__35686__i;}
  xs = new cljs.core.IndexedSeq(G__35686__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__35687){
var xs = cljs.core.seq(arglist__35687);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__23677__auto__ = (coll == null);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var G__35691 = coll;
if(G__35691){
var bit__24351__auto__ = (G__35691.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24351__auto__) || (G__35691.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__35693 = x;
if(G__35693){
var bit__24358__auto__ = (G__35693.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24358__auto__) || (G__35693.cljs$core$IList$)){
return true;
} else {
if((!G__35693.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__35693);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__35693);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__23665__auto__ = cljs.core.not(a.ns);
if(and__23665__auto__){
return b.ns;
} else {
return and__23665__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__35700 = a.ns;
var G__35701 = b.ns;
return goog.array.defaultCompare(G__35700,G__35701);
})();
if(((0) === nsc)){
var G__35702 = a.name;
var G__35703 = b.name;
return goog.array.defaultCompare(G__35702,G__35703);
} else {
return nsc;
}
}
} else {
var G__35704 = a.name;
var G__35705 = b.name;
return goog.array.defaultCompare(G__35704,G__35705);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__24098__auto__ = self__._hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__35707 = null;
var G__35707__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__35707__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__35707 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__35707__2.call(this,self__,coll);
case 3:
return G__35707__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35707.cljs$core$IFn$_invoke$arity$2 = G__35707__2;
G__35707.cljs$core$IFn$_invoke$arity$3 = G__35707__3;
return G__35707;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args35706){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35706)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__35709 = x;
if(G__35709){
var bit__24351__auto__ = (G__35709.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24351__auto__) || (G__35709.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__35711 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__35711) : cljs.core.name.call(null,G__35711));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__35712 = ls.sval();
ls = G__35712;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__35714 = s;
if(G__35714){
var bit__24351__auto__ = (G__35714.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24351__auto__) || (G__35714.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__35715 = cljs.core.next(s__$1);
s__$1 = G__35715;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_35716 = (0);
var xs_35717 = cljs.core.seq(coll);
while(true){
if(xs_35717){
(ret[i_35716] = cljs.core.to_array(cljs.core.first(xs_35717)));

var G__35718 = (i_35716 + (1));
var G__35719 = cljs.core.next(xs_35717);
i_35716 = G__35718;
xs_35717 = G__35719;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__35722 = (i + (1));
var G__35723 = cljs.core.next(s__$1);
i = G__35722;
s__$1 = G__35723;
continue;
} else {
return a;
}
break;
}
} else {
var n__24564__auto___35724 = size;
var i_35725 = (0);
while(true){
if((i_35725 < n__24564__auto___35724)){
(a[i_35725] = init_val_or_seq);

var G__35726 = (i_35725 + (1));
i_35725 = G__35726;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__35729 = (i + (1));
var G__35730 = cljs.core.next(s__$1);
i = G__35729;
s__$1 = G__35730;
continue;
} else {
return a;
}
break;
}
} else {
var n__24564__auto___35731 = size;
var i_35732 = (0);
while(true){
if((i_35732 < n__24564__auto___35731)){
(a[i_35732] = init_val_or_seq);

var G__35733 = (i_35732 + (1));
i_35732 = G__35733;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__35736 = (i + (1));
var G__35737 = cljs.core.next(s__$1);
i = G__35736;
s__$1 = G__35737;
continue;
} else {
return a;
}
break;
}
} else {
var n__24564__auto___35738 = size;
var i_35739 = (0);
while(true){
if((i_35739 < n__24564__auto___35738)){
(a[i_35739] = init_val_or_seq);

var G__35740 = (i_35739 + (1));
i_35739 = G__35740;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__35743 = (i + (1));
var G__35744 = cljs.core.next(s__$1);
i = G__35743;
s__$1 = G__35744;
continue;
} else {
return a;
}
break;
}
} else {
var n__24564__auto___35745 = size;
var i_35746 = (0);
while(true){
if((i_35746 < n__24564__auto___35745)){
(a[i_35746] = init_val_or_seq);

var G__35747 = (i_35746 + (1));
i_35746 = G__35747;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__35748 = cljs.core.next(s__$1);
var G__35749 = (i - (1));
var G__35750 = (sum + (1));
s__$1 = G__35748;
i = G__35749;
sum = G__35750;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__35770__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__35770 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__35771__i = 0, G__35771__a = new Array(arguments.length -  2);
while (G__35771__i < G__35771__a.length) {G__35771__a[G__35771__i] = arguments[G__35771__i + 2]; ++G__35771__i;}
  zs = new cljs.core.IndexedSeq(G__35771__a,0);
} 
return G__35770__delegate.call(this,x,y,zs);};
G__35770.cljs$lang$maxFixedArity = 2;
G__35770.cljs$lang$applyTo = (function (arglist__35772){
var x = cljs.core.first(arglist__35772);
arglist__35772 = cljs.core.next(arglist__35772);
var y = cljs.core.first(arglist__35772);
var zs = cljs.core.rest(arglist__35772);
return G__35770__delegate(x,y,zs);
});
G__35770.cljs$core$IFn$_invoke$arity$variadic = G__35770__delegate;
return G__35770;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__35773 = null;
if (arguments.length > 2) {
var G__35774__i = 0, G__35774__a = new Array(arguments.length -  2);
while (G__35774__i < G__35774__a.length) {G__35774__a[G__35774__i] = arguments[G__35774__i + 2]; ++G__35774__i;}
G__35773 = new cljs.core.IndexedSeq(G__35774__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__35773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__35775__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__35775 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__35776__i = 0, G__35776__a = new Array(arguments.length -  4);
while (G__35776__i < G__35776__a.length) {G__35776__a[G__35776__i] = arguments[G__35776__i + 4]; ++G__35776__i;}
  more = new cljs.core.IndexedSeq(G__35776__a,0);
} 
return G__35775__delegate.call(this,a,b,c,d,more);};
G__35775.cljs$lang$maxFixedArity = 4;
G__35775.cljs$lang$applyTo = (function (arglist__35777){
var a = cljs.core.first(arglist__35777);
arglist__35777 = cljs.core.next(arglist__35777);
var b = cljs.core.first(arglist__35777);
arglist__35777 = cljs.core.next(arglist__35777);
var c = cljs.core.first(arglist__35777);
arglist__35777 = cljs.core.next(arglist__35777);
var d = cljs.core.first(arglist__35777);
var more = cljs.core.rest(arglist__35777);
return G__35775__delegate(a,b,c,d,more);
});
G__35775.cljs$core$IFn$_invoke$arity$variadic = G__35775__delegate;
return G__35775;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__35778 = null;
if (arguments.length > 4) {
var G__35779__i = 0, G__35779__a = new Array(arguments.length -  4);
while (G__35779__i < G__35779__a.length) {G__35779__a[G__35779__i] = arguments[G__35779__i + 4]; ++G__35779__i;}
G__35778 = new cljs.core.IndexedSeq(G__35779__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__35778);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__35780__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__35781 = ntcoll;
var G__35782 = cljs.core.first(vals);
var G__35783 = cljs.core.next(vals);
tcoll = G__35781;
val = G__35782;
vals = G__35783;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__35780 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__35784__i = 0, G__35784__a = new Array(arguments.length -  2);
while (G__35784__i < G__35784__a.length) {G__35784__a[G__35784__i] = arguments[G__35784__i + 2]; ++G__35784__i;}
  vals = new cljs.core.IndexedSeq(G__35784__a,0);
} 
return G__35780__delegate.call(this,tcoll,val,vals);};
G__35780.cljs$lang$maxFixedArity = 2;
G__35780.cljs$lang$applyTo = (function (arglist__35785){
var tcoll = cljs.core.first(arglist__35785);
arglist__35785 = cljs.core.next(arglist__35785);
var val = cljs.core.first(arglist__35785);
var vals = cljs.core.rest(arglist__35785);
return G__35780__delegate(tcoll,val,vals);
});
G__35780.cljs$core$IFn$_invoke$arity$variadic = G__35780__delegate;
return G__35780;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__35786 = null;
if (arguments.length > 2) {
var G__35787__i = 0, G__35787__a = new Array(arguments.length -  2);
while (G__35787__i < G__35787__a.length) {G__35787__a[G__35787__i] = arguments[G__35787__i + 2]; ++G__35787__i;}
G__35786 = new cljs.core.IndexedSeq(G__35787__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__35786);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__35788__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__35789 = ntcoll;
var G__35790 = cljs.core.first(kvs);
var G__35791 = cljs.core.second(kvs);
var G__35792 = cljs.core.nnext(kvs);
tcoll = G__35789;
key = G__35790;
val = G__35791;
kvs = G__35792;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__35788 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__35793__i = 0, G__35793__a = new Array(arguments.length -  3);
while (G__35793__i < G__35793__a.length) {G__35793__a[G__35793__i] = arguments[G__35793__i + 3]; ++G__35793__i;}
  kvs = new cljs.core.IndexedSeq(G__35793__a,0);
} 
return G__35788__delegate.call(this,tcoll,key,val,kvs);};
G__35788.cljs$lang$maxFixedArity = 3;
G__35788.cljs$lang$applyTo = (function (arglist__35794){
var tcoll = cljs.core.first(arglist__35794);
arglist__35794 = cljs.core.next(arglist__35794);
var key = cljs.core.first(arglist__35794);
arglist__35794 = cljs.core.next(arglist__35794);
var val = cljs.core.first(arglist__35794);
var kvs = cljs.core.rest(arglist__35794);
return G__35788__delegate(tcoll,key,val,kvs);
});
G__35788.cljs$core$IFn$_invoke$arity$variadic = G__35788__delegate;
return G__35788;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__35795 = null;
if (arguments.length > 3) {
var G__35796__i = 0, G__35796__a = new Array(arguments.length -  3);
while (G__35796__i < G__35796__a.length) {G__35796__a[G__35796__i] = arguments[G__35796__i + 3]; ++G__35796__i;}
G__35795 = new cljs.core.IndexedSeq(G__35796__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__35795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__35797__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__35798 = ntcoll;
var G__35799 = cljs.core.first(ks);
var G__35800 = cljs.core.next(ks);
tcoll = G__35798;
key = G__35799;
ks = G__35800;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__35797 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__35801__i = 0, G__35801__a = new Array(arguments.length -  2);
while (G__35801__i < G__35801__a.length) {G__35801__a[G__35801__i] = arguments[G__35801__i + 2]; ++G__35801__i;}
  ks = new cljs.core.IndexedSeq(G__35801__a,0);
} 
return G__35797__delegate.call(this,tcoll,key,ks);};
G__35797.cljs$lang$maxFixedArity = 2;
G__35797.cljs$lang$applyTo = (function (arglist__35802){
var tcoll = cljs.core.first(arglist__35802);
arglist__35802 = cljs.core.next(arglist__35802);
var key = cljs.core.first(arglist__35802);
var ks = cljs.core.rest(arglist__35802);
return G__35797__delegate(tcoll,key,ks);
});
G__35797.cljs$core$IFn$_invoke$arity$variadic = G__35797__delegate;
return G__35797;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__35803 = null;
if (arguments.length > 2) {
var G__35804__i = 0, G__35804__a = new Array(arguments.length -  2);
while (G__35804__i < G__35804__a.length) {G__35804__a[G__35804__i] = arguments[G__35804__i + 2]; ++G__35804__i;}
G__35803 = new cljs.core.IndexedSeq(G__35804__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__35803);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__35805__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__35806 = ntcoll;
var G__35807 = cljs.core.first(vals);
var G__35808 = cljs.core.next(vals);
tcoll = G__35806;
val = G__35807;
vals = G__35808;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__35805 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__35809__i = 0, G__35809__a = new Array(arguments.length -  2);
while (G__35809__i < G__35809__a.length) {G__35809__a[G__35809__i] = arguments[G__35809__i + 2]; ++G__35809__i;}
  vals = new cljs.core.IndexedSeq(G__35809__a,0);
} 
return G__35805__delegate.call(this,tcoll,val,vals);};
G__35805.cljs$lang$maxFixedArity = 2;
G__35805.cljs$lang$applyTo = (function (arglist__35810){
var tcoll = cljs.core.first(arglist__35810);
arglist__35810 = cljs.core.next(arglist__35810);
var val = cljs.core.first(arglist__35810);
var vals = cljs.core.rest(arglist__35810);
return G__35805__delegate(tcoll,val,vals);
});
G__35805.cljs$core$IFn$_invoke$arity$variadic = G__35805__delegate;
return G__35805;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__35811 = null;
if (arguments.length > 2) {
var G__35812__i = 0, G__35812__a = new Array(arguments.length -  2);
while (G__35812__i < G__35812__a.length) {G__35812__a[G__35812__i] = arguments[G__35812__i + 2]; ++G__35812__i;}
G__35811 = new cljs.core.IndexedSeq(G__35812__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__35811);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a24608 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a24608);
} else {
var G__36023 = a24608;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36023) : f.call(null,G__36023));
}
} else {
var b24609 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a24608,b24609);
} else {
var G__36024 = a24608;
var G__36025 = b24609;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36024,G__36025) : f.call(null,G__36024,G__36025));
}
} else {
var c24610 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a24608,b24609,c24610);
} else {
var G__36026 = a24608;
var G__36027 = b24609;
var G__36028 = c24610;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36026,G__36027,G__36028) : f.call(null,G__36026,G__36027,G__36028));
}
} else {
var d24611 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a24608,b24609,c24610,d24611);
} else {
var G__36029 = a24608;
var G__36030 = b24609;
var G__36031 = c24610;
var G__36032 = d24611;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36029,G__36030,G__36031,G__36032) : f.call(null,G__36029,G__36030,G__36031,G__36032));
}
} else {
var e24612 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a24608,b24609,c24610,d24611,e24612);
} else {
var G__36033 = a24608;
var G__36034 = b24609;
var G__36035 = c24610;
var G__36036 = d24611;
var G__36037 = e24612;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__36033,G__36034,G__36035,G__36036,G__36037) : f.call(null,G__36033,G__36034,G__36035,G__36036,G__36037));
}
} else {
var f24613 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a24608,b24609,c24610,d24611,e24612,f24613);
} else {
var G__36038 = a24608;
var G__36039 = b24609;
var G__36040 = c24610;
var G__36041 = d24611;
var G__36042 = e24612;
var G__36043 = f24613;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__36038,G__36039,G__36040,G__36041,G__36042,G__36043) : f.call(null,G__36038,G__36039,G__36040,G__36041,G__36042,G__36043));
}
} else {
var g24614 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a24608,b24609,c24610,d24611,e24612,f24613,g24614);
} else {
var G__36044 = a24608;
var G__36045 = b24609;
var G__36046 = c24610;
var G__36047 = d24611;
var G__36048 = e24612;
var G__36049 = f24613;
var G__36050 = g24614;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__36044,G__36045,G__36046,G__36047,G__36048,G__36049,G__36050) : f.call(null,G__36044,G__36045,G__36046,G__36047,G__36048,G__36049,G__36050));
}
} else {
var h24615 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615);
} else {
var G__36051 = a24608;
var G__36052 = b24609;
var G__36053 = c24610;
var G__36054 = d24611;
var G__36055 = e24612;
var G__36056 = f24613;
var G__36057 = g24614;
var G__36058 = h24615;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__36051,G__36052,G__36053,G__36054,G__36055,G__36056,G__36057,G__36058) : f.call(null,G__36051,G__36052,G__36053,G__36054,G__36055,G__36056,G__36057,G__36058));
}
} else {
var i24616 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616);
} else {
var G__36059 = a24608;
var G__36060 = b24609;
var G__36061 = c24610;
var G__36062 = d24611;
var G__36063 = e24612;
var G__36064 = f24613;
var G__36065 = g24614;
var G__36066 = h24615;
var G__36067 = i24616;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__36059,G__36060,G__36061,G__36062,G__36063,G__36064,G__36065,G__36066,G__36067) : f.call(null,G__36059,G__36060,G__36061,G__36062,G__36063,G__36064,G__36065,G__36066,G__36067));
}
} else {
var j24617 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617);
} else {
var G__36068 = a24608;
var G__36069 = b24609;
var G__36070 = c24610;
var G__36071 = d24611;
var G__36072 = e24612;
var G__36073 = f24613;
var G__36074 = g24614;
var G__36075 = h24615;
var G__36076 = i24616;
var G__36077 = j24617;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__36068,G__36069,G__36070,G__36071,G__36072,G__36073,G__36074,G__36075,G__36076,G__36077) : f.call(null,G__36068,G__36069,G__36070,G__36071,G__36072,G__36073,G__36074,G__36075,G__36076,G__36077));
}
} else {
var k24618 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617,k24618);
} else {
var G__36078 = a24608;
var G__36079 = b24609;
var G__36080 = c24610;
var G__36081 = d24611;
var G__36082 = e24612;
var G__36083 = f24613;
var G__36084 = g24614;
var G__36085 = h24615;
var G__36086 = i24616;
var G__36087 = j24617;
var G__36088 = k24618;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__36078,G__36079,G__36080,G__36081,G__36082,G__36083,G__36084,G__36085,G__36086,G__36087,G__36088) : f.call(null,G__36078,G__36079,G__36080,G__36081,G__36082,G__36083,G__36084,G__36085,G__36086,G__36087,G__36088));
}
} else {
var l24619 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617,k24618,l24619);
} else {
var G__36089 = a24608;
var G__36090 = b24609;
var G__36091 = c24610;
var G__36092 = d24611;
var G__36093 = e24612;
var G__36094 = f24613;
var G__36095 = g24614;
var G__36096 = h24615;
var G__36097 = i24616;
var G__36098 = j24617;
var G__36099 = k24618;
var G__36100 = l24619;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__36089,G__36090,G__36091,G__36092,G__36093,G__36094,G__36095,G__36096,G__36097,G__36098,G__36099,G__36100) : f.call(null,G__36089,G__36090,G__36091,G__36092,G__36093,G__36094,G__36095,G__36096,G__36097,G__36098,G__36099,G__36100));
}
} else {
var m24620 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617,k24618,l24619,m24620);
} else {
var G__36101 = a24608;
var G__36102 = b24609;
var G__36103 = c24610;
var G__36104 = d24611;
var G__36105 = e24612;
var G__36106 = f24613;
var G__36107 = g24614;
var G__36108 = h24615;
var G__36109 = i24616;
var G__36110 = j24617;
var G__36111 = k24618;
var G__36112 = l24619;
var G__36113 = m24620;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__36101,G__36102,G__36103,G__36104,G__36105,G__36106,G__36107,G__36108,G__36109,G__36110,G__36111,G__36112,G__36113) : f.call(null,G__36101,G__36102,G__36103,G__36104,G__36105,G__36106,G__36107,G__36108,G__36109,G__36110,G__36111,G__36112,G__36113));
}
} else {
var n24621 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617,k24618,l24619,m24620,n24621);
} else {
var G__36114 = a24608;
var G__36115 = b24609;
var G__36116 = c24610;
var G__36117 = d24611;
var G__36118 = e24612;
var G__36119 = f24613;
var G__36120 = g24614;
var G__36121 = h24615;
var G__36122 = i24616;
var G__36123 = j24617;
var G__36124 = k24618;
var G__36125 = l24619;
var G__36126 = m24620;
var G__36127 = n24621;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__36114,G__36115,G__36116,G__36117,G__36118,G__36119,G__36120,G__36121,G__36122,G__36123,G__36124,G__36125,G__36126,G__36127) : f.call(null,G__36114,G__36115,G__36116,G__36117,G__36118,G__36119,G__36120,G__36121,G__36122,G__36123,G__36124,G__36125,G__36126,G__36127));
}
} else {
var o24622 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617,k24618,l24619,m24620,n24621,o24622);
} else {
var G__36128 = a24608;
var G__36129 = b24609;
var G__36130 = c24610;
var G__36131 = d24611;
var G__36132 = e24612;
var G__36133 = f24613;
var G__36134 = g24614;
var G__36135 = h24615;
var G__36136 = i24616;
var G__36137 = j24617;
var G__36138 = k24618;
var G__36139 = l24619;
var G__36140 = m24620;
var G__36141 = n24621;
var G__36142 = o24622;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__36128,G__36129,G__36130,G__36131,G__36132,G__36133,G__36134,G__36135,G__36136,G__36137,G__36138,G__36139,G__36140,G__36141,G__36142) : f.call(null,G__36128,G__36129,G__36130,G__36131,G__36132,G__36133,G__36134,G__36135,G__36136,G__36137,G__36138,G__36139,G__36140,G__36141,G__36142));
}
} else {
var p24623 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617,k24618,l24619,m24620,n24621,o24622,p24623);
} else {
var G__36143 = a24608;
var G__36144 = b24609;
var G__36145 = c24610;
var G__36146 = d24611;
var G__36147 = e24612;
var G__36148 = f24613;
var G__36149 = g24614;
var G__36150 = h24615;
var G__36151 = i24616;
var G__36152 = j24617;
var G__36153 = k24618;
var G__36154 = l24619;
var G__36155 = m24620;
var G__36156 = n24621;
var G__36157 = o24622;
var G__36158 = p24623;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__36143,G__36144,G__36145,G__36146,G__36147,G__36148,G__36149,G__36150,G__36151,G__36152,G__36153,G__36154,G__36155,G__36156,G__36157,G__36158) : f.call(null,G__36143,G__36144,G__36145,G__36146,G__36147,G__36148,G__36149,G__36150,G__36151,G__36152,G__36153,G__36154,G__36155,G__36156,G__36157,G__36158));
}
} else {
var q24624 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617,k24618,l24619,m24620,n24621,o24622,p24623,q24624);
} else {
var G__36159 = a24608;
var G__36160 = b24609;
var G__36161 = c24610;
var G__36162 = d24611;
var G__36163 = e24612;
var G__36164 = f24613;
var G__36165 = g24614;
var G__36166 = h24615;
var G__36167 = i24616;
var G__36168 = j24617;
var G__36169 = k24618;
var G__36170 = l24619;
var G__36171 = m24620;
var G__36172 = n24621;
var G__36173 = o24622;
var G__36174 = p24623;
var G__36175 = q24624;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__36159,G__36160,G__36161,G__36162,G__36163,G__36164,G__36165,G__36166,G__36167,G__36168,G__36169,G__36170,G__36171,G__36172,G__36173,G__36174,G__36175) : f.call(null,G__36159,G__36160,G__36161,G__36162,G__36163,G__36164,G__36165,G__36166,G__36167,G__36168,G__36169,G__36170,G__36171,G__36172,G__36173,G__36174,G__36175));
}
} else {
var r24625 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617,k24618,l24619,m24620,n24621,o24622,p24623,q24624,r24625);
} else {
var G__36176 = a24608;
var G__36177 = b24609;
var G__36178 = c24610;
var G__36179 = d24611;
var G__36180 = e24612;
var G__36181 = f24613;
var G__36182 = g24614;
var G__36183 = h24615;
var G__36184 = i24616;
var G__36185 = j24617;
var G__36186 = k24618;
var G__36187 = l24619;
var G__36188 = m24620;
var G__36189 = n24621;
var G__36190 = o24622;
var G__36191 = p24623;
var G__36192 = q24624;
var G__36193 = r24625;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__36176,G__36177,G__36178,G__36179,G__36180,G__36181,G__36182,G__36183,G__36184,G__36185,G__36186,G__36187,G__36188,G__36189,G__36190,G__36191,G__36192,G__36193) : f.call(null,G__36176,G__36177,G__36178,G__36179,G__36180,G__36181,G__36182,G__36183,G__36184,G__36185,G__36186,G__36187,G__36188,G__36189,G__36190,G__36191,G__36192,G__36193));
}
} else {
var s24626 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617,k24618,l24619,m24620,n24621,o24622,p24623,q24624,r24625,s24626);
} else {
var G__36194 = a24608;
var G__36195 = b24609;
var G__36196 = c24610;
var G__36197 = d24611;
var G__36198 = e24612;
var G__36199 = f24613;
var G__36200 = g24614;
var G__36201 = h24615;
var G__36202 = i24616;
var G__36203 = j24617;
var G__36204 = k24618;
var G__36205 = l24619;
var G__36206 = m24620;
var G__36207 = n24621;
var G__36208 = o24622;
var G__36209 = p24623;
var G__36210 = q24624;
var G__36211 = r24625;
var G__36212 = s24626;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__36194,G__36195,G__36196,G__36197,G__36198,G__36199,G__36200,G__36201,G__36202,G__36203,G__36204,G__36205,G__36206,G__36207,G__36208,G__36209,G__36210,G__36211,G__36212) : f.call(null,G__36194,G__36195,G__36196,G__36197,G__36198,G__36199,G__36200,G__36201,G__36202,G__36203,G__36204,G__36205,G__36206,G__36207,G__36208,G__36209,G__36210,G__36211,G__36212));
}
} else {
var t24627 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a24608,b24609,c24610,d24611,e24612,f24613,g24614,h24615,i24616,j24617,k24618,l24619,m24620,n24621,o24622,p24623,q24624,r24625,s24626,t24627);
} else {
var G__36213 = a24608;
var G__36214 = b24609;
var G__36215 = c24610;
var G__36216 = d24611;
var G__36217 = e24612;
var G__36218 = f24613;
var G__36219 = g24614;
var G__36220 = h24615;
var G__36221 = i24616;
var G__36222 = j24617;
var G__36223 = k24618;
var G__36224 = l24619;
var G__36225 = m24620;
var G__36226 = n24621;
var G__36227 = o24622;
var G__36228 = p24623;
var G__36229 = q24624;
var G__36230 = r24625;
var G__36231 = s24626;
var G__36232 = t24627;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__36213,G__36214,G__36215,G__36216,G__36217,G__36218,G__36219,G__36220,G__36221,G__36222,G__36223,G__36224,G__36225,G__36226,G__36227,G__36228,G__36229,G__36230,G__36231,G__36232) : f.call(null,G__36213,G__36214,G__36215,G__36216,G__36217,G__36218,G__36219,G__36220,G__36221,G__36222,G__36223,G__36224,G__36225,G__36226,G__36227,G__36228,G__36229,G__36230,G__36231,G__36232));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__36233__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__36233 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__36234__i = 0, G__36234__a = new Array(arguments.length -  5);
while (G__36234__i < G__36234__a.length) {G__36234__a[G__36234__i] = arguments[G__36234__i + 5]; ++G__36234__i;}
  args = new cljs.core.IndexedSeq(G__36234__a,0);
} 
return G__36233__delegate.call(this,f,a,b,c,d,args);};
G__36233.cljs$lang$maxFixedArity = 5;
G__36233.cljs$lang$applyTo = (function (arglist__36235){
var f = cljs.core.first(arglist__36235);
arglist__36235 = cljs.core.next(arglist__36235);
var a = cljs.core.first(arglist__36235);
arglist__36235 = cljs.core.next(arglist__36235);
var b = cljs.core.first(arglist__36235);
arglist__36235 = cljs.core.next(arglist__36235);
var c = cljs.core.first(arglist__36235);
arglist__36235 = cljs.core.next(arglist__36235);
var d = cljs.core.first(arglist__36235);
var args = cljs.core.rest(arglist__36235);
return G__36233__delegate(f,a,b,c,d,args);
});
G__36233.cljs$core$IFn$_invoke$arity$variadic = G__36233__delegate;
return G__36233;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__36236 = null;
if (arguments.length > 5) {
var G__36237__i = 0, G__36237__a = new Array(arguments.length -  5);
while (G__36237__i < G__36237__a.length) {G__36237__a[G__36237__i] = arguments[G__36237__i + 5]; ++G__36237__i;}
G__36236 = new cljs.core.IndexedSeq(G__36237__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__36236);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__36253 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36253) : f.call(null,G__36253));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__36254 = cljs.core.meta(obj);
var G__36255 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36254,G__36255) : f.call(null,G__36254,G__36255));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__36256 = cljs.core.meta(obj);
var G__36257 = a;
var G__36258 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36256,G__36257,G__36258) : f.call(null,G__36256,G__36257,G__36258));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__36259 = cljs.core.meta(obj);
var G__36260 = a;
var G__36261 = b;
var G__36262 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36259,G__36260,G__36261,G__36262) : f.call(null,G__36259,G__36260,G__36261,G__36262));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__36263 = cljs.core.meta(obj);
var G__36264 = a;
var G__36265 = b;
var G__36266 = c;
var G__36267 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__36263,G__36264,G__36265,G__36266,G__36267) : f.call(null,G__36263,G__36264,G__36265,G__36266,G__36267));
})());
});
var vary_meta__7 = (function() { 
var G__36268__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__36268 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__36269__i = 0, G__36269__a = new Array(arguments.length -  6);
while (G__36269__i < G__36269__a.length) {G__36269__a[G__36269__i] = arguments[G__36269__i + 6]; ++G__36269__i;}
  args = new cljs.core.IndexedSeq(G__36269__a,0);
} 
return G__36268__delegate.call(this,obj,f,a,b,c,d,args);};
G__36268.cljs$lang$maxFixedArity = 6;
G__36268.cljs$lang$applyTo = (function (arglist__36270){
var obj = cljs.core.first(arglist__36270);
arglist__36270 = cljs.core.next(arglist__36270);
var f = cljs.core.first(arglist__36270);
arglist__36270 = cljs.core.next(arglist__36270);
var a = cljs.core.first(arglist__36270);
arglist__36270 = cljs.core.next(arglist__36270);
var b = cljs.core.first(arglist__36270);
arglist__36270 = cljs.core.next(arglist__36270);
var c = cljs.core.first(arglist__36270);
arglist__36270 = cljs.core.next(arglist__36270);
var d = cljs.core.first(arglist__36270);
var args = cljs.core.rest(arglist__36270);
return G__36268__delegate(obj,f,a,b,c,d,args);
});
G__36268.cljs$core$IFn$_invoke$arity$variadic = G__36268__delegate;
return G__36268;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__36271 = null;
if (arguments.length > 6) {
var G__36272__i = 0, G__36272__a = new Array(arguments.length -  6);
while (G__36272__i < G__36272__a.length) {G__36272__a[G__36272__i] = arguments[G__36272__i + 6]; ++G__36272__i;}
G__36271 = new cljs.core.IndexedSeq(G__36272__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__36271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__36273__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__36273 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__36274__i = 0, G__36274__a = new Array(arguments.length -  2);
while (G__36274__i < G__36274__a.length) {G__36274__a[G__36274__i] = arguments[G__36274__i + 2]; ++G__36274__i;}
  more = new cljs.core.IndexedSeq(G__36274__a,0);
} 
return G__36273__delegate.call(this,x,y,more);};
G__36273.cljs$lang$maxFixedArity = 2;
G__36273.cljs$lang$applyTo = (function (arglist__36275){
var x = cljs.core.first(arglist__36275);
arglist__36275 = cljs.core.next(arglist__36275);
var y = cljs.core.first(arglist__36275);
var more = cljs.core.rest(arglist__36275);
return G__36273__delegate(x,y,more);
});
G__36273.cljs$core$IFn$_invoke$arity$variadic = G__36273__delegate;
return G__36273;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__36276 = null;
if (arguments.length > 2) {
var G__36277__i = 0, G__36277__a = new Array(arguments.length -  2);
while (G__36277__i < G__36277__a.length) {G__36277__a[G__36277__i] = arguments[G__36277__i + 2]; ++G__36277__i;}
G__36276 = new cljs.core.IndexedSeq(G__36277__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__36276);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t36281 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t36281 = (function (nil_iter,meta36282){
this.nil_iter = nil_iter;
this.meta36282 = meta36282;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t36281.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t36281.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t36281.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t36281.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_36283){
var self__ = this;
var _36283__$1 = this;
return self__.meta36282;
});

cljs.core.t36281.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_36283,meta36282__$1){
var self__ = this;
var _36283__$1 = this;
return (new cljs.core.t36281(self__.nil_iter,meta36282__$1));
});

cljs.core.t36281.cljs$lang$type = true;

cljs.core.t36281.cljs$lang$ctorStr = "cljs.core/t36281";

cljs.core.t36281.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/t36281");
});

cljs.core.__GT_t36281 = (function __GT_t36281(nil_iter__$1,meta36282){
return (new cljs.core.t36281(nil_iter__$1,meta36282));
});

}

return (new cljs.core.t36281(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__23665__auto__ = !((lt.stepper == null));
if(and__23665__auto__){
return self__.iter.hasNext();
} else {
return and__23665__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__36284 = lt;
var G__36285 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__36284,G__36285) : self__.xform.call(null,G__36284,G__36285));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__36286 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__36286) : self__.xform.call(null,G__36286));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__36288 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__36288) : xform.call(null,G__36288));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__36290 = cljs.core.next(iters__$1);
iters__$1 = G__36290;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__24564__auto___36291 = self__.iters.length;
var i_36292 = (0);
while(true){
if((i_36292 < n__24564__auto___36291)){
(self__.nexts[i_36292] = (self__.iters[i_36292]).next());

var G__36293 = (i_36292 + (1));
i_36292 = G__36293;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__23665__auto__ = !((lt.stepper == null));
if(and__23665__auto__){
return this$.hasNext();
} else {
return and__23665__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__36289 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__36289) : self__.xform.call(null,G__36289));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__36298 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__36298) : xform.call(null,G__36298));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__36299_36303 = cljs.core.seq(colls);
var chunk__36300_36304 = null;
var count__36301_36305 = (0);
var i__36302_36306 = (0);
while(true){
if((i__36302_36306 < count__36301_36305)){
var coll_36307 = chunk__36300_36304.cljs$core$IIndexed$_nth$arity$2(null,i__36302_36306);
iters.push(cljs.core.iter(coll_36307));

var G__36308 = seq__36299_36303;
var G__36309 = chunk__36300_36304;
var G__36310 = count__36301_36305;
var G__36311 = (i__36302_36306 + (1));
seq__36299_36303 = G__36308;
chunk__36300_36304 = G__36309;
count__36301_36305 = G__36310;
i__36302_36306 = G__36311;
continue;
} else {
var temp__4126__auto___36312 = cljs.core.seq(seq__36299_36303);
if(temp__4126__auto___36312){
var seq__36299_36313__$1 = temp__4126__auto___36312;
if(cljs.core.chunked_seq_QMARK_(seq__36299_36313__$1)){
var c__24464__auto___36314 = cljs.core.chunk_first(seq__36299_36313__$1);
var G__36315 = cljs.core.chunk_rest(seq__36299_36313__$1);
var G__36316 = c__24464__auto___36314;
var G__36317 = cljs.core.count(c__24464__auto___36314);
var G__36318 = (0);
seq__36299_36303 = G__36315;
chunk__36300_36304 = G__36316;
count__36301_36305 = G__36317;
i__36302_36306 = G__36318;
continue;
} else {
var coll_36319 = cljs.core.first(seq__36299_36313__$1);
iters.push(cljs.core.iter(coll_36319));

var G__36320 = cljs.core.next(seq__36299_36313__$1);
var G__36321 = null;
var G__36322 = (0);
var G__36323 = (0);
seq__36299_36303 = G__36320;
chunk__36300_36304 = G__36321;
count__36301_36305 = G__36322;
i__36302_36306 = G__36323;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__23677__auto__ = cljs.core.seq(coll);
if(or__23677__auto__){
return or__23677__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__36324__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__36324 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__36325__i = 0, G__36325__a = new Array(arguments.length -  2);
while (G__36325__i < G__36325__a.length) {G__36325__a[G__36325__i] = arguments[G__36325__i + 2]; ++G__36325__i;}
  colls = new cljs.core.IndexedSeq(G__36325__a,0);
} 
return G__36324__delegate.call(this,xform,coll,colls);};
G__36324.cljs$lang$maxFixedArity = 2;
G__36324.cljs$lang$applyTo = (function (arglist__36326){
var xform = cljs.core.first(arglist__36326);
arglist__36326 = cljs.core.next(arglist__36326);
var coll = cljs.core.first(arglist__36326);
var colls = cljs.core.rest(arglist__36326);
return G__36324__delegate(xform,coll,colls);
});
G__36324.cljs$core$IFn$_invoke$arity$variadic = G__36324__delegate;
return G__36324;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__36327 = null;
if (arguments.length > 2) {
var G__36328__i = 0, G__36328__a = new Array(arguments.length -  2);
while (G__36328__i < G__36328__a.length) {G__36328__a[G__36328__i] = arguments[G__36328__i + 2]; ++G__36328__i;}
G__36327 = new cljs.core.IndexedSeq(G__36328__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__36327);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__36330 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__36330) : pred.call(null,G__36330));
})())){
var G__36331 = pred;
var G__36332 = cljs.core.next(coll);
pred = G__36331;
coll = G__36332;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__23677__auto__ = (function (){var G__36336 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__36336) : pred.call(null,G__36336));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var G__36337 = pred;
var G__36338 = cljs.core.next(coll);
pred = G__36337;
coll = G__36338;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__36345 = null;
var G__36345__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__36345__1 = (function (x){
return cljs.core.not((function (){var G__36342 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36342) : f.call(null,G__36342));
})());
});
var G__36345__2 = (function (x,y){
return cljs.core.not((function (){var G__36343 = x;
var G__36344 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36343,G__36344) : f.call(null,G__36343,G__36344));
})());
});
var G__36345__3 = (function() { 
var G__36346__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__36346 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__36347__i = 0, G__36347__a = new Array(arguments.length -  2);
while (G__36347__i < G__36347__a.length) {G__36347__a[G__36347__i] = arguments[G__36347__i + 2]; ++G__36347__i;}
  zs = new cljs.core.IndexedSeq(G__36347__a,0);
} 
return G__36346__delegate.call(this,x,y,zs);};
G__36346.cljs$lang$maxFixedArity = 2;
G__36346.cljs$lang$applyTo = (function (arglist__36348){
var x = cljs.core.first(arglist__36348);
arglist__36348 = cljs.core.next(arglist__36348);
var y = cljs.core.first(arglist__36348);
var zs = cljs.core.rest(arglist__36348);
return G__36346__delegate(x,y,zs);
});
G__36346.cljs$core$IFn$_invoke$arity$variadic = G__36346__delegate;
return G__36346;
})()
;
G__36345 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__36345__0.call(this);
case 1:
return G__36345__1.call(this,x);
case 2:
return G__36345__2.call(this,x,y);
default:
var G__36349 = null;
if (arguments.length > 2) {
var G__36350__i = 0, G__36350__a = new Array(arguments.length -  2);
while (G__36350__i < G__36350__a.length) {G__36350__a[G__36350__i] = arguments[G__36350__i + 2]; ++G__36350__i;}
G__36349 = new cljs.core.IndexedSeq(G__36350__a,0);
}
return G__36345__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__36349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36345.cljs$lang$maxFixedArity = 2;
G__36345.cljs$lang$applyTo = G__36345__3.cljs$lang$applyTo;
G__36345.cljs$core$IFn$_invoke$arity$0 = G__36345__0;
G__36345.cljs$core$IFn$_invoke$arity$1 = G__36345__1;
G__36345.cljs$core$IFn$_invoke$arity$2 = G__36345__2;
G__36345.cljs$core$IFn$_invoke$arity$variadic = G__36345__3.cljs$core$IFn$_invoke$arity$variadic;
return G__36345;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__36351__delegate = function (args){
return x;
};
var G__36351 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__36352__i = 0, G__36352__a = new Array(arguments.length -  0);
while (G__36352__i < G__36352__a.length) {G__36352__a[G__36352__i] = arguments[G__36352__i + 0]; ++G__36352__i;}
  args = new cljs.core.IndexedSeq(G__36352__a,0);
} 
return G__36351__delegate.call(this,args);};
G__36351.cljs$lang$maxFixedArity = 0;
G__36351.cljs$lang$applyTo = (function (arglist__36353){
var args = cljs.core.seq(arglist__36353);
return G__36351__delegate(args);
});
G__36351.cljs$core$IFn$_invoke$arity$variadic = G__36351__delegate;
return G__36351;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__36408 = null;
var G__36408__0 = (function (){
var G__36381 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36381) : f.call(null,G__36381));
});
var G__36408__1 = (function (x){
var G__36382 = (function (){var G__36383 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36383) : g.call(null,G__36383));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36382) : f.call(null,G__36382));
});
var G__36408__2 = (function (x,y){
var G__36384 = (function (){var G__36385 = x;
var G__36386 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__36385,G__36386) : g.call(null,G__36385,G__36386));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36384) : f.call(null,G__36384));
});
var G__36408__3 = (function (x,y,z){
var G__36387 = (function (){var G__36388 = x;
var G__36389 = y;
var G__36390 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__36388,G__36389,G__36390) : g.call(null,G__36388,G__36389,G__36390));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36387) : f.call(null,G__36387));
});
var G__36408__4 = (function() { 
var G__36409__delegate = function (x,y,z,args){
var G__36391 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36391) : f.call(null,G__36391));
};
var G__36409 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36410__i = 0, G__36410__a = new Array(arguments.length -  3);
while (G__36410__i < G__36410__a.length) {G__36410__a[G__36410__i] = arguments[G__36410__i + 3]; ++G__36410__i;}
  args = new cljs.core.IndexedSeq(G__36410__a,0);
} 
return G__36409__delegate.call(this,x,y,z,args);};
G__36409.cljs$lang$maxFixedArity = 3;
G__36409.cljs$lang$applyTo = (function (arglist__36411){
var x = cljs.core.first(arglist__36411);
arglist__36411 = cljs.core.next(arglist__36411);
var y = cljs.core.first(arglist__36411);
arglist__36411 = cljs.core.next(arglist__36411);
var z = cljs.core.first(arglist__36411);
var args = cljs.core.rest(arglist__36411);
return G__36409__delegate(x,y,z,args);
});
G__36409.cljs$core$IFn$_invoke$arity$variadic = G__36409__delegate;
return G__36409;
})()
;
G__36408 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36408__0.call(this);
case 1:
return G__36408__1.call(this,x);
case 2:
return G__36408__2.call(this,x,y);
case 3:
return G__36408__3.call(this,x,y,z);
default:
var G__36412 = null;
if (arguments.length > 3) {
var G__36413__i = 0, G__36413__a = new Array(arguments.length -  3);
while (G__36413__i < G__36413__a.length) {G__36413__a[G__36413__i] = arguments[G__36413__i + 3]; ++G__36413__i;}
G__36412 = new cljs.core.IndexedSeq(G__36413__a,0);
}
return G__36408__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36408.cljs$lang$maxFixedArity = 3;
G__36408.cljs$lang$applyTo = G__36408__4.cljs$lang$applyTo;
G__36408.cljs$core$IFn$_invoke$arity$0 = G__36408__0;
G__36408.cljs$core$IFn$_invoke$arity$1 = G__36408__1;
G__36408.cljs$core$IFn$_invoke$arity$2 = G__36408__2;
G__36408.cljs$core$IFn$_invoke$arity$3 = G__36408__3;
G__36408.cljs$core$IFn$_invoke$arity$variadic = G__36408__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36408;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__36414 = null;
var G__36414__0 = (function (){
var G__36392 = (function (){var G__36393 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36393) : g.call(null,G__36393));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36392) : f.call(null,G__36392));
});
var G__36414__1 = (function (x){
var G__36394 = (function (){var G__36395 = (function (){var G__36396 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__36396) : h.call(null,G__36396));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36395) : g.call(null,G__36395));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36394) : f.call(null,G__36394));
});
var G__36414__2 = (function (x,y){
var G__36397 = (function (){var G__36398 = (function (){var G__36399 = x;
var G__36400 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__36399,G__36400) : h.call(null,G__36399,G__36400));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36398) : g.call(null,G__36398));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36397) : f.call(null,G__36397));
});
var G__36414__3 = (function (x,y,z){
var G__36401 = (function (){var G__36402 = (function (){var G__36403 = x;
var G__36404 = y;
var G__36405 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__36403,G__36404,G__36405) : h.call(null,G__36403,G__36404,G__36405));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36402) : g.call(null,G__36402));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36401) : f.call(null,G__36401));
});
var G__36414__4 = (function() { 
var G__36415__delegate = function (x,y,z,args){
var G__36406 = (function (){var G__36407 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__36407) : g.call(null,G__36407));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36406) : f.call(null,G__36406));
};
var G__36415 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36416__i = 0, G__36416__a = new Array(arguments.length -  3);
while (G__36416__i < G__36416__a.length) {G__36416__a[G__36416__i] = arguments[G__36416__i + 3]; ++G__36416__i;}
  args = new cljs.core.IndexedSeq(G__36416__a,0);
} 
return G__36415__delegate.call(this,x,y,z,args);};
G__36415.cljs$lang$maxFixedArity = 3;
G__36415.cljs$lang$applyTo = (function (arglist__36417){
var x = cljs.core.first(arglist__36417);
arglist__36417 = cljs.core.next(arglist__36417);
var y = cljs.core.first(arglist__36417);
arglist__36417 = cljs.core.next(arglist__36417);
var z = cljs.core.first(arglist__36417);
var args = cljs.core.rest(arglist__36417);
return G__36415__delegate(x,y,z,args);
});
G__36415.cljs$core$IFn$_invoke$arity$variadic = G__36415__delegate;
return G__36415;
})()
;
G__36414 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36414__0.call(this);
case 1:
return G__36414__1.call(this,x);
case 2:
return G__36414__2.call(this,x,y);
case 3:
return G__36414__3.call(this,x,y,z);
default:
var G__36418 = null;
if (arguments.length > 3) {
var G__36419__i = 0, G__36419__a = new Array(arguments.length -  3);
while (G__36419__i < G__36419__a.length) {G__36419__a[G__36419__i] = arguments[G__36419__i + 3]; ++G__36419__i;}
G__36418 = new cljs.core.IndexedSeq(G__36419__a,0);
}
return G__36414__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36418);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36414.cljs$lang$maxFixedArity = 3;
G__36414.cljs$lang$applyTo = G__36414__4.cljs$lang$applyTo;
G__36414.cljs$core$IFn$_invoke$arity$0 = G__36414__0;
G__36414.cljs$core$IFn$_invoke$arity$1 = G__36414__1;
G__36414.cljs$core$IFn$_invoke$arity$2 = G__36414__2;
G__36414.cljs$core$IFn$_invoke$arity$3 = G__36414__3;
G__36414.cljs$core$IFn$_invoke$arity$variadic = G__36414__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36414;
})()
});
var comp__4 = (function() { 
var G__36420__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__36421__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__36422 = cljs.core.first(fs__$2).call(null,ret);
var G__36423 = cljs.core.next(fs__$2);
ret = G__36422;
fs__$2 = G__36423;
continue;
} else {
return ret;
}
break;
}
};
var G__36421 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__36424__i = 0, G__36424__a = new Array(arguments.length -  0);
while (G__36424__i < G__36424__a.length) {G__36424__a[G__36424__i] = arguments[G__36424__i + 0]; ++G__36424__i;}
  args = new cljs.core.IndexedSeq(G__36424__a,0);
} 
return G__36421__delegate.call(this,args);};
G__36421.cljs$lang$maxFixedArity = 0;
G__36421.cljs$lang$applyTo = (function (arglist__36425){
var args = cljs.core.seq(arglist__36425);
return G__36421__delegate(args);
});
G__36421.cljs$core$IFn$_invoke$arity$variadic = G__36421__delegate;
return G__36421;
})()
;
;})(fs__$1))
};
var G__36420 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__36426__i = 0, G__36426__a = new Array(arguments.length -  3);
while (G__36426__i < G__36426__a.length) {G__36426__a[G__36426__i] = arguments[G__36426__i + 3]; ++G__36426__i;}
  fs = new cljs.core.IndexedSeq(G__36426__a,0);
} 
return G__36420__delegate.call(this,f1,f2,f3,fs);};
G__36420.cljs$lang$maxFixedArity = 3;
G__36420.cljs$lang$applyTo = (function (arglist__36427){
var f1 = cljs.core.first(arglist__36427);
arglist__36427 = cljs.core.next(arglist__36427);
var f2 = cljs.core.first(arglist__36427);
arglist__36427 = cljs.core.next(arglist__36427);
var f3 = cljs.core.first(arglist__36427);
var fs = cljs.core.rest(arglist__36427);
return G__36420__delegate(f1,f2,f3,fs);
});
G__36420.cljs$core$IFn$_invoke$arity$variadic = G__36420__delegate;
return G__36420;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__36428 = null;
if (arguments.length > 3) {
var G__36429__i = 0, G__36429__a = new Array(arguments.length -  3);
while (G__36429__i < G__36429__a.length) {G__36429__a[G__36429__i] = arguments[G__36429__i + 3]; ++G__36429__i;}
G__36428 = new cljs.core.IndexedSeq(G__36429__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__36428);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__36514 = null;
var G__36514__0 = (function (){
var G__36472 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36472) : f.call(null,G__36472));
});
var G__36514__1 = (function (x){
var G__36473 = arg1;
var G__36474 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36473,G__36474) : f.call(null,G__36473,G__36474));
});
var G__36514__2 = (function (x,y){
var G__36475 = arg1;
var G__36476 = x;
var G__36477 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36475,G__36476,G__36477) : f.call(null,G__36475,G__36476,G__36477));
});
var G__36514__3 = (function (x,y,z){
var G__36478 = arg1;
var G__36479 = x;
var G__36480 = y;
var G__36481 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36478,G__36479,G__36480,G__36481) : f.call(null,G__36478,G__36479,G__36480,G__36481));
});
var G__36514__4 = (function() { 
var G__36515__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__36515 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36516__i = 0, G__36516__a = new Array(arguments.length -  3);
while (G__36516__i < G__36516__a.length) {G__36516__a[G__36516__i] = arguments[G__36516__i + 3]; ++G__36516__i;}
  args = new cljs.core.IndexedSeq(G__36516__a,0);
} 
return G__36515__delegate.call(this,x,y,z,args);};
G__36515.cljs$lang$maxFixedArity = 3;
G__36515.cljs$lang$applyTo = (function (arglist__36517){
var x = cljs.core.first(arglist__36517);
arglist__36517 = cljs.core.next(arglist__36517);
var y = cljs.core.first(arglist__36517);
arglist__36517 = cljs.core.next(arglist__36517);
var z = cljs.core.first(arglist__36517);
var args = cljs.core.rest(arglist__36517);
return G__36515__delegate(x,y,z,args);
});
G__36515.cljs$core$IFn$_invoke$arity$variadic = G__36515__delegate;
return G__36515;
})()
;
G__36514 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36514__0.call(this);
case 1:
return G__36514__1.call(this,x);
case 2:
return G__36514__2.call(this,x,y);
case 3:
return G__36514__3.call(this,x,y,z);
default:
var G__36518 = null;
if (arguments.length > 3) {
var G__36519__i = 0, G__36519__a = new Array(arguments.length -  3);
while (G__36519__i < G__36519__a.length) {G__36519__a[G__36519__i] = arguments[G__36519__i + 3]; ++G__36519__i;}
G__36518 = new cljs.core.IndexedSeq(G__36519__a,0);
}
return G__36514__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36518);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36514.cljs$lang$maxFixedArity = 3;
G__36514.cljs$lang$applyTo = G__36514__4.cljs$lang$applyTo;
G__36514.cljs$core$IFn$_invoke$arity$0 = G__36514__0;
G__36514.cljs$core$IFn$_invoke$arity$1 = G__36514__1;
G__36514.cljs$core$IFn$_invoke$arity$2 = G__36514__2;
G__36514.cljs$core$IFn$_invoke$arity$3 = G__36514__3;
G__36514.cljs$core$IFn$_invoke$arity$variadic = G__36514__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36514;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__36520 = null;
var G__36520__0 = (function (){
var G__36482 = arg1;
var G__36483 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36482,G__36483) : f.call(null,G__36482,G__36483));
});
var G__36520__1 = (function (x){
var G__36484 = arg1;
var G__36485 = arg2;
var G__36486 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36484,G__36485,G__36486) : f.call(null,G__36484,G__36485,G__36486));
});
var G__36520__2 = (function (x,y){
var G__36487 = arg1;
var G__36488 = arg2;
var G__36489 = x;
var G__36490 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36487,G__36488,G__36489,G__36490) : f.call(null,G__36487,G__36488,G__36489,G__36490));
});
var G__36520__3 = (function (x,y,z){
var G__36491 = arg1;
var G__36492 = arg2;
var G__36493 = x;
var G__36494 = y;
var G__36495 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__36491,G__36492,G__36493,G__36494,G__36495) : f.call(null,G__36491,G__36492,G__36493,G__36494,G__36495));
});
var G__36520__4 = (function() { 
var G__36521__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__36521 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36522__i = 0, G__36522__a = new Array(arguments.length -  3);
while (G__36522__i < G__36522__a.length) {G__36522__a[G__36522__i] = arguments[G__36522__i + 3]; ++G__36522__i;}
  args = new cljs.core.IndexedSeq(G__36522__a,0);
} 
return G__36521__delegate.call(this,x,y,z,args);};
G__36521.cljs$lang$maxFixedArity = 3;
G__36521.cljs$lang$applyTo = (function (arglist__36523){
var x = cljs.core.first(arglist__36523);
arglist__36523 = cljs.core.next(arglist__36523);
var y = cljs.core.first(arglist__36523);
arglist__36523 = cljs.core.next(arglist__36523);
var z = cljs.core.first(arglist__36523);
var args = cljs.core.rest(arglist__36523);
return G__36521__delegate(x,y,z,args);
});
G__36521.cljs$core$IFn$_invoke$arity$variadic = G__36521__delegate;
return G__36521;
})()
;
G__36520 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36520__0.call(this);
case 1:
return G__36520__1.call(this,x);
case 2:
return G__36520__2.call(this,x,y);
case 3:
return G__36520__3.call(this,x,y,z);
default:
var G__36524 = null;
if (arguments.length > 3) {
var G__36525__i = 0, G__36525__a = new Array(arguments.length -  3);
while (G__36525__i < G__36525__a.length) {G__36525__a[G__36525__i] = arguments[G__36525__i + 3]; ++G__36525__i;}
G__36524 = new cljs.core.IndexedSeq(G__36525__a,0);
}
return G__36520__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36520.cljs$lang$maxFixedArity = 3;
G__36520.cljs$lang$applyTo = G__36520__4.cljs$lang$applyTo;
G__36520.cljs$core$IFn$_invoke$arity$0 = G__36520__0;
G__36520.cljs$core$IFn$_invoke$arity$1 = G__36520__1;
G__36520.cljs$core$IFn$_invoke$arity$2 = G__36520__2;
G__36520.cljs$core$IFn$_invoke$arity$3 = G__36520__3;
G__36520.cljs$core$IFn$_invoke$arity$variadic = G__36520__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36520;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__36526 = null;
var G__36526__0 = (function (){
var G__36496 = arg1;
var G__36497 = arg2;
var G__36498 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36496,G__36497,G__36498) : f.call(null,G__36496,G__36497,G__36498));
});
var G__36526__1 = (function (x){
var G__36499 = arg1;
var G__36500 = arg2;
var G__36501 = arg3;
var G__36502 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36499,G__36500,G__36501,G__36502) : f.call(null,G__36499,G__36500,G__36501,G__36502));
});
var G__36526__2 = (function (x,y){
var G__36503 = arg1;
var G__36504 = arg2;
var G__36505 = arg3;
var G__36506 = x;
var G__36507 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__36503,G__36504,G__36505,G__36506,G__36507) : f.call(null,G__36503,G__36504,G__36505,G__36506,G__36507));
});
var G__36526__3 = (function (x,y,z){
var G__36508 = arg1;
var G__36509 = arg2;
var G__36510 = arg3;
var G__36511 = x;
var G__36512 = y;
var G__36513 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__36508,G__36509,G__36510,G__36511,G__36512,G__36513) : f.call(null,G__36508,G__36509,G__36510,G__36511,G__36512,G__36513));
});
var G__36526__4 = (function() { 
var G__36527__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__36527 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__36528__i = 0, G__36528__a = new Array(arguments.length -  3);
while (G__36528__i < G__36528__a.length) {G__36528__a[G__36528__i] = arguments[G__36528__i + 3]; ++G__36528__i;}
  args = new cljs.core.IndexedSeq(G__36528__a,0);
} 
return G__36527__delegate.call(this,x,y,z,args);};
G__36527.cljs$lang$maxFixedArity = 3;
G__36527.cljs$lang$applyTo = (function (arglist__36529){
var x = cljs.core.first(arglist__36529);
arglist__36529 = cljs.core.next(arglist__36529);
var y = cljs.core.first(arglist__36529);
arglist__36529 = cljs.core.next(arglist__36529);
var z = cljs.core.first(arglist__36529);
var args = cljs.core.rest(arglist__36529);
return G__36527__delegate(x,y,z,args);
});
G__36527.cljs$core$IFn$_invoke$arity$variadic = G__36527__delegate;
return G__36527;
})()
;
G__36526 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__36526__0.call(this);
case 1:
return G__36526__1.call(this,x);
case 2:
return G__36526__2.call(this,x,y);
case 3:
return G__36526__3.call(this,x,y,z);
default:
var G__36530 = null;
if (arguments.length > 3) {
var G__36531__i = 0, G__36531__a = new Array(arguments.length -  3);
while (G__36531__i < G__36531__a.length) {G__36531__a[G__36531__i] = arguments[G__36531__i + 3]; ++G__36531__i;}
G__36530 = new cljs.core.IndexedSeq(G__36531__a,0);
}
return G__36526__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__36530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36526.cljs$lang$maxFixedArity = 3;
G__36526.cljs$lang$applyTo = G__36526__4.cljs$lang$applyTo;
G__36526.cljs$core$IFn$_invoke$arity$0 = G__36526__0;
G__36526.cljs$core$IFn$_invoke$arity$1 = G__36526__1;
G__36526.cljs$core$IFn$_invoke$arity$2 = G__36526__2;
G__36526.cljs$core$IFn$_invoke$arity$3 = G__36526__3;
G__36526.cljs$core$IFn$_invoke$arity$variadic = G__36526__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36526;
})()
});
var partial__5 = (function() { 
var G__36532__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__36533__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__36533 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__36534__i = 0, G__36534__a = new Array(arguments.length -  0);
while (G__36534__i < G__36534__a.length) {G__36534__a[G__36534__i] = arguments[G__36534__i + 0]; ++G__36534__i;}
  args = new cljs.core.IndexedSeq(G__36534__a,0);
} 
return G__36533__delegate.call(this,args);};
G__36533.cljs$lang$maxFixedArity = 0;
G__36533.cljs$lang$applyTo = (function (arglist__36535){
var args = cljs.core.seq(arglist__36535);
return G__36533__delegate(args);
});
G__36533.cljs$core$IFn$_invoke$arity$variadic = G__36533__delegate;
return G__36533;
})()
;
};
var G__36532 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__36536__i = 0, G__36536__a = new Array(arguments.length -  4);
while (G__36536__i < G__36536__a.length) {G__36536__a[G__36536__i] = arguments[G__36536__i + 4]; ++G__36536__i;}
  more = new cljs.core.IndexedSeq(G__36536__a,0);
} 
return G__36532__delegate.call(this,f,arg1,arg2,arg3,more);};
G__36532.cljs$lang$maxFixedArity = 4;
G__36532.cljs$lang$applyTo = (function (arglist__36537){
var f = cljs.core.first(arglist__36537);
arglist__36537 = cljs.core.next(arglist__36537);
var arg1 = cljs.core.first(arglist__36537);
arglist__36537 = cljs.core.next(arglist__36537);
var arg2 = cljs.core.first(arglist__36537);
arglist__36537 = cljs.core.next(arglist__36537);
var arg3 = cljs.core.first(arglist__36537);
var more = cljs.core.rest(arglist__36537);
return G__36532__delegate(f,arg1,arg2,arg3,more);
});
G__36532.cljs$core$IFn$_invoke$arity$variadic = G__36532__delegate;
return G__36532;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__36538 = null;
if (arguments.length > 4) {
var G__36539__i = 0, G__36539__a = new Array(arguments.length -  4);
while (G__36539__i < G__36539__a.length) {G__36539__a[G__36539__i] = arguments[G__36539__i + 4]; ++G__36539__i;}
G__36538 = new cljs.core.IndexedSeq(G__36539__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__36538);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__36572 = null;
var G__36572__1 = (function (a){
var G__36556 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36556) : f.call(null,G__36556));
});
var G__36572__2 = (function (a,b){
var G__36557 = (((a == null))?x:a);
var G__36558 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36557,G__36558) : f.call(null,G__36557,G__36558));
});
var G__36572__3 = (function (a,b,c){
var G__36559 = (((a == null))?x:a);
var G__36560 = b;
var G__36561 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36559,G__36560,G__36561) : f.call(null,G__36559,G__36560,G__36561));
});
var G__36572__4 = (function() { 
var G__36573__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__36573 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__36574__i = 0, G__36574__a = new Array(arguments.length -  3);
while (G__36574__i < G__36574__a.length) {G__36574__a[G__36574__i] = arguments[G__36574__i + 3]; ++G__36574__i;}
  ds = new cljs.core.IndexedSeq(G__36574__a,0);
} 
return G__36573__delegate.call(this,a,b,c,ds);};
G__36573.cljs$lang$maxFixedArity = 3;
G__36573.cljs$lang$applyTo = (function (arglist__36575){
var a = cljs.core.first(arglist__36575);
arglist__36575 = cljs.core.next(arglist__36575);
var b = cljs.core.first(arglist__36575);
arglist__36575 = cljs.core.next(arglist__36575);
var c = cljs.core.first(arglist__36575);
var ds = cljs.core.rest(arglist__36575);
return G__36573__delegate(a,b,c,ds);
});
G__36573.cljs$core$IFn$_invoke$arity$variadic = G__36573__delegate;
return G__36573;
})()
;
G__36572 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__36572__1.call(this,a);
case 2:
return G__36572__2.call(this,a,b);
case 3:
return G__36572__3.call(this,a,b,c);
default:
var G__36576 = null;
if (arguments.length > 3) {
var G__36577__i = 0, G__36577__a = new Array(arguments.length -  3);
while (G__36577__i < G__36577__a.length) {G__36577__a[G__36577__i] = arguments[G__36577__i + 3]; ++G__36577__i;}
G__36576 = new cljs.core.IndexedSeq(G__36577__a,0);
}
return G__36572__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__36576);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36572.cljs$lang$maxFixedArity = 3;
G__36572.cljs$lang$applyTo = G__36572__4.cljs$lang$applyTo;
G__36572.cljs$core$IFn$_invoke$arity$1 = G__36572__1;
G__36572.cljs$core$IFn$_invoke$arity$2 = G__36572__2;
G__36572.cljs$core$IFn$_invoke$arity$3 = G__36572__3;
G__36572.cljs$core$IFn$_invoke$arity$variadic = G__36572__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36572;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__36578 = null;
var G__36578__2 = (function (a,b){
var G__36562 = (((a == null))?x:a);
var G__36563 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36562,G__36563) : f.call(null,G__36562,G__36563));
});
var G__36578__3 = (function (a,b,c){
var G__36564 = (((a == null))?x:a);
var G__36565 = (((b == null))?y:b);
var G__36566 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36564,G__36565,G__36566) : f.call(null,G__36564,G__36565,G__36566));
});
var G__36578__4 = (function() { 
var G__36579__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__36579 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__36580__i = 0, G__36580__a = new Array(arguments.length -  3);
while (G__36580__i < G__36580__a.length) {G__36580__a[G__36580__i] = arguments[G__36580__i + 3]; ++G__36580__i;}
  ds = new cljs.core.IndexedSeq(G__36580__a,0);
} 
return G__36579__delegate.call(this,a,b,c,ds);};
G__36579.cljs$lang$maxFixedArity = 3;
G__36579.cljs$lang$applyTo = (function (arglist__36581){
var a = cljs.core.first(arglist__36581);
arglist__36581 = cljs.core.next(arglist__36581);
var b = cljs.core.first(arglist__36581);
arglist__36581 = cljs.core.next(arglist__36581);
var c = cljs.core.first(arglist__36581);
var ds = cljs.core.rest(arglist__36581);
return G__36579__delegate(a,b,c,ds);
});
G__36579.cljs$core$IFn$_invoke$arity$variadic = G__36579__delegate;
return G__36579;
})()
;
G__36578 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__36578__2.call(this,a,b);
case 3:
return G__36578__3.call(this,a,b,c);
default:
var G__36582 = null;
if (arguments.length > 3) {
var G__36583__i = 0, G__36583__a = new Array(arguments.length -  3);
while (G__36583__i < G__36583__a.length) {G__36583__a[G__36583__i] = arguments[G__36583__i + 3]; ++G__36583__i;}
G__36582 = new cljs.core.IndexedSeq(G__36583__a,0);
}
return G__36578__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__36582);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36578.cljs$lang$maxFixedArity = 3;
G__36578.cljs$lang$applyTo = G__36578__4.cljs$lang$applyTo;
G__36578.cljs$core$IFn$_invoke$arity$2 = G__36578__2;
G__36578.cljs$core$IFn$_invoke$arity$3 = G__36578__3;
G__36578.cljs$core$IFn$_invoke$arity$variadic = G__36578__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36578;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__36584 = null;
var G__36584__2 = (function (a,b){
var G__36567 = (((a == null))?x:a);
var G__36568 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36567,G__36568) : f.call(null,G__36567,G__36568));
});
var G__36584__3 = (function (a,b,c){
var G__36569 = (((a == null))?x:a);
var G__36570 = (((b == null))?y:b);
var G__36571 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36569,G__36570,G__36571) : f.call(null,G__36569,G__36570,G__36571));
});
var G__36584__4 = (function() { 
var G__36585__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__36585 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__36586__i = 0, G__36586__a = new Array(arguments.length -  3);
while (G__36586__i < G__36586__a.length) {G__36586__a[G__36586__i] = arguments[G__36586__i + 3]; ++G__36586__i;}
  ds = new cljs.core.IndexedSeq(G__36586__a,0);
} 
return G__36585__delegate.call(this,a,b,c,ds);};
G__36585.cljs$lang$maxFixedArity = 3;
G__36585.cljs$lang$applyTo = (function (arglist__36587){
var a = cljs.core.first(arglist__36587);
arglist__36587 = cljs.core.next(arglist__36587);
var b = cljs.core.first(arglist__36587);
arglist__36587 = cljs.core.next(arglist__36587);
var c = cljs.core.first(arglist__36587);
var ds = cljs.core.rest(arglist__36587);
return G__36585__delegate(a,b,c,ds);
});
G__36585.cljs$core$IFn$_invoke$arity$variadic = G__36585__delegate;
return G__36585;
})()
;
G__36584 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__36584__2.call(this,a,b);
case 3:
return G__36584__3.call(this,a,b,c);
default:
var G__36588 = null;
if (arguments.length > 3) {
var G__36589__i = 0, G__36589__a = new Array(arguments.length -  3);
while (G__36589__i < G__36589__a.length) {G__36589__a[G__36589__i] = arguments[G__36589__i + 3]; ++G__36589__i;}
G__36588 = new cljs.core.IndexedSeq(G__36589__a,0);
}
return G__36584__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__36588);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36584.cljs$lang$maxFixedArity = 3;
G__36584.cljs$lang$applyTo = G__36584__4.cljs$lang$applyTo;
G__36584.cljs$core$IFn$_invoke$arity$2 = G__36584__2;
G__36584.cljs$core$IFn$_invoke$arity$3 = G__36584__3;
G__36584.cljs$core$IFn$_invoke$arity$variadic = G__36584__4.cljs$core$IFn$_invoke$arity$variadic;
return G__36584;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__36620 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__36620) : cljs.core.volatile_BANG_.call(null,G__36620));
})();
return ((function (i){
return (function() {
var G__36650 = null;
var G__36650__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36650__1 = (function (result){
var G__36621 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36621) : rf.call(null,G__36621));
});
var G__36650__2 = (function (result,input){
var G__36622 = result;
var G__36623 = (function (){var G__36624 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__36625 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36624,G__36625) : f.call(null,G__36624,G__36625));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36622,G__36623) : rf.call(null,G__36622,G__36623));
});
G__36650 = function(result,input){
switch(arguments.length){
case 0:
return G__36650__0.call(this);
case 1:
return G__36650__1.call(this,result);
case 2:
return G__36650__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36650.cljs$core$IFn$_invoke$arity$0 = G__36650__0;
G__36650.cljs$core$IFn$_invoke$arity$1 = G__36650__1;
G__36650.cljs$core$IFn$_invoke$arity$2 = G__36650__2;
return G__36650;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__24564__auto___36651 = size;
var i_36652 = (0);
while(true){
if((i_36652 < n__24564__auto___36651)){
cljs.core.chunk_append(b,(function (){var G__36646 = (idx + i_36652);
var G__36647 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_36652);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36646,G__36647) : f.call(null,G__36646,G__36647));
})());

var G__36653 = (i_36652 + (1));
i_36652 = G__36653;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__36648 = idx;
var G__36649 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36648,G__36649) : f.call(null,G__36648,G__36649));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__36672 = null;
var G__36672__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36672__1 = (function (result){
var G__36666 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36666) : rf.call(null,G__36666));
});
var G__36672__2 = (function (result,input){
var v = (function (){var G__36667 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36667) : f.call(null,G__36667));
})();
if((v == null)){
return result;
} else {
var G__36668 = result;
var G__36669 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36668,G__36669) : rf.call(null,G__36668,G__36669));
}
});
G__36672 = function(result,input){
switch(arguments.length){
case 0:
return G__36672__0.call(this);
case 1:
return G__36672__1.call(this,result);
case 2:
return G__36672__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36672.cljs$core$IFn$_invoke$arity$0 = G__36672__0;
G__36672.cljs$core$IFn$_invoke$arity$1 = G__36672__1;
G__36672.cljs$core$IFn$_invoke$arity$2 = G__36672__2;
return G__36672;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__24564__auto___36673 = size;
var i_36674 = (0);
while(true){
if((i_36674 < n__24564__auto___36673)){
var x_36675 = (function (){var G__36670 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_36674);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36670) : f.call(null,G__36670));
})();
if((x_36675 == null)){
} else {
cljs.core.chunk_append(b,x_36675);
}

var G__36676 = (i_36674 + (1));
i_36674 = G__36676;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__36671 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36671) : f.call(null,G__36671));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__36677 = this$__$1;
return goog.getUid(G__36677);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__36678 = cljs.core.seq(self__.watches);
var chunk__36679 = null;
var count__36680 = (0);
var i__36681 = (0);
while(true){
if((i__36681 < count__36680)){
var vec__36682 = chunk__36679.cljs$core$IIndexed$_nth$arity$2(null,i__36681);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36682,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36682,(1),null);
var G__36683_36692 = key;
var G__36684_36693 = this$__$1;
var G__36685_36694 = oldval;
var G__36686_36695 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36683_36692,G__36684_36693,G__36685_36694,G__36686_36695) : f.call(null,G__36683_36692,G__36684_36693,G__36685_36694,G__36686_36695));

var G__36696 = seq__36678;
var G__36697 = chunk__36679;
var G__36698 = count__36680;
var G__36699 = (i__36681 + (1));
seq__36678 = G__36696;
chunk__36679 = G__36697;
count__36680 = G__36698;
i__36681 = G__36699;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__36678);
if(temp__4126__auto__){
var seq__36678__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__36678__$1)){
var c__24464__auto__ = cljs.core.chunk_first(seq__36678__$1);
var G__36700 = cljs.core.chunk_rest(seq__36678__$1);
var G__36701 = c__24464__auto__;
var G__36702 = cljs.core.count(c__24464__auto__);
var G__36703 = (0);
seq__36678 = G__36700;
chunk__36679 = G__36701;
count__36680 = G__36702;
i__36681 = G__36703;
continue;
} else {
var vec__36687 = cljs.core.first(seq__36678__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36687,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36687,(1),null);
var G__36688_36704 = key;
var G__36689_36705 = this$__$1;
var G__36690_36706 = oldval;
var G__36691_36707 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__36688_36704,G__36689_36705,G__36690_36706,G__36691_36707) : f.call(null,G__36688_36704,G__36689_36705,G__36690_36706,G__36691_36707));

var G__36708 = cljs.core.next(seq__36678__$1);
var G__36709 = null;
var G__36710 = (0);
var G__36711 = (0);
seq__36678 = G__36708;
chunk__36679 = G__36709;
count__36680 = G__36710;
i__36681 = G__36711;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__36715__delegate = function (x,p__36712){
var map__36714 = p__36712;
var map__36714__$1 = ((cljs.core.seq_QMARK_(map__36714))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__36714):map__36714);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36714__$1,cljs.core.constant$keyword$8);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__36714__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__36715 = function (x,var_args){
var p__36712 = null;
if (arguments.length > 1) {
var G__36716__i = 0, G__36716__a = new Array(arguments.length -  1);
while (G__36716__i < G__36716__a.length) {G__36716__a[G__36716__i] = arguments[G__36716__i + 1]; ++G__36716__i;}
  p__36712 = new cljs.core.IndexedSeq(G__36716__a,0);
} 
return G__36715__delegate.call(this,x,p__36712);};
G__36715.cljs$lang$maxFixedArity = 1;
G__36715.cljs$lang$applyTo = (function (arglist__36717){
var x = cljs.core.first(arglist__36717);
var p__36712 = cljs.core.rest(arglist__36717);
return G__36715__delegate(x,p__36712);
});
G__36715.cljs$core$IFn$_invoke$arity$variadic = G__36715__delegate;
return G__36715;
})()
;
atom = function(x,var_args){
var p__36712 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__36718 = null;
if (arguments.length > 1) {
var G__36719__i = 0, G__36719__a = new Array(arguments.length -  1);
while (G__36719__i < G__36719__a.length) {G__36719__a[G__36719__i] = arguments[G__36719__i + 1]; ++G__36719__i;}
G__36718 = new cljs.core.IndexedSeq(G__36719__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__36718);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__36722 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__36722) : validate.call(null,G__36722));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__36723 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__36723) : cljs.core.pr_str.call(null,G__36723));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__36730 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36730) : f.call(null,G__36730));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__36731 = a.state;
var G__36732 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36731,G__36732) : f.call(null,G__36731,G__36732));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__36733 = a.state;
var G__36734 = x;
var G__36735 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__36733,G__36734,G__36735) : f.call(null,G__36733,G__36734,G__36735));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__36736__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__36736 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__36737__i = 0, G__36737__a = new Array(arguments.length -  4);
while (G__36737__i < G__36737__a.length) {G__36737__a[G__36737__i] = arguments[G__36737__i + 4]; ++G__36737__i;}
  more = new cljs.core.IndexedSeq(G__36737__a,0);
} 
return G__36736__delegate.call(this,a,f,x,y,more);};
G__36736.cljs$lang$maxFixedArity = 4;
G__36736.cljs$lang$applyTo = (function (arglist__36738){
var a = cljs.core.first(arglist__36738);
arglist__36738 = cljs.core.next(arglist__36738);
var f = cljs.core.first(arglist__36738);
arglist__36738 = cljs.core.next(arglist__36738);
var x = cljs.core.first(arglist__36738);
arglist__36738 = cljs.core.next(arglist__36738);
var y = cljs.core.first(arglist__36738);
var more = cljs.core.rest(arglist__36738);
return G__36736__delegate(a,f,x,y,more);
});
G__36736.cljs$core$IFn$_invoke$arity$variadic = G__36736__delegate;
return G__36736;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__36739 = null;
if (arguments.length > 4) {
var G__36740__i = 0, G__36740__a = new Array(arguments.length -  4);
while (G__36740__i < G__36740__a.length) {G__36740__a[G__36740__i] = arguments[G__36740__i + 4]; ++G__36740__i;}
G__36739 = new cljs.core.IndexedSeq(G__36740__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__36739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__36807 = null;
var G__36807__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__36807__1 = (function (result){
var G__36774 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__36774) : rf.call(null,G__36774));
});
var G__36807__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__36775 = i;
var G__36776 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36775,G__36776) : f.call(null,G__36775,G__36776));
})();
if((v == null)){
return result;
} else {
var G__36777 = result;
var G__36778 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__36777,G__36778) : rf.call(null,G__36777,G__36778));
}
});
G__36807 = function(result,input){
switch(arguments.length){
case 0:
return G__36807__0.call(this);
case 1:
return G__36807__1.call(this,result);
case 2:
return G__36807__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36807.cljs$core$IFn$_invoke$arity$0 = G__36807__0;
G__36807.cljs$core$IFn$_invoke$arity$1 = G__36807__1;
G__36807.cljs$core$IFn$_invoke$arity$2 = G__36807__2;
return G__36807;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__24564__auto___36808 = size;
var i_36809 = (0);
while(true){
if((i_36809 < n__24564__auto___36808)){
var x_36810 = (function (){var G__36803 = (idx + i_36809);
var G__36804 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_36809);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36803,G__36804) : f.call(null,G__36803,G__36804));
})();
if((x_36810 == null)){
} else {
cljs.core.chunk_append(b,x_36810);
}

var G__36811 = (i_36809 + (1));
i_36809 = G__36811;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__36805 = idx;
var G__36806 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__36805,G__36806) : f.call(null,G__36805,G__36806));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__37025 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37025) : p.call(null,G__37025));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__23665__auto__ = (function (){var G__37027 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37027) : p.call(null,G__37027));
})();
if(cljs.core.truth_(and__23665__auto__)){
var G__37028 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37028) : p.call(null,G__37028));
} else {
return and__23665__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__23665__auto__ = (function (){var G__37030 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37030) : p.call(null,G__37030));
})();
if(cljs.core.truth_(and__23665__auto__)){
var and__23665__auto____$1 = (function (){var G__37032 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37032) : p.call(null,G__37032));
})();
if(cljs.core.truth_(and__23665__auto____$1)){
var G__37033 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37033) : p.call(null,G__37033));
} else {
return and__23665__auto____$1;
}
} else {
return and__23665__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__37202__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__37202 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__37203__i = 0, G__37203__a = new Array(arguments.length -  3);
while (G__37203__i < G__37203__a.length) {G__37203__a[G__37203__i] = arguments[G__37203__i + 3]; ++G__37203__i;}
  args = new cljs.core.IndexedSeq(G__37203__a,0);
} 
return G__37202__delegate.call(this,x,y,z,args);};
G__37202.cljs$lang$maxFixedArity = 3;
G__37202.cljs$lang$applyTo = (function (arglist__37204){
var x = cljs.core.first(arglist__37204);
arglist__37204 = cljs.core.next(arglist__37204);
var y = cljs.core.first(arglist__37204);
arglist__37204 = cljs.core.next(arglist__37204);
var z = cljs.core.first(arglist__37204);
var args = cljs.core.rest(arglist__37204);
return G__37202__delegate(x,y,z,args);
});
G__37202.cljs$core$IFn$_invoke$arity$variadic = G__37202__delegate;
return G__37202;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__37205 = null;
if (arguments.length > 3) {
var G__37206__i = 0, G__37206__a = new Array(arguments.length -  3);
while (G__37206__i < G__37206__a.length) {G__37206__a[G__37206__i] = arguments[G__37206__i + 3]; ++G__37206__i;}
G__37205 = new cljs.core.IndexedSeq(G__37206__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__37205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__23665__auto__ = (function (){var G__37065 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37065) : p1.call(null,G__37065));
})();
if(cljs.core.truth_(and__23665__auto__)){
var G__37066 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37066) : p2.call(null,G__37066));
} else {
return and__23665__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__23665__auto__ = (function (){var G__37068 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37068) : p1.call(null,G__37068));
})();
if(cljs.core.truth_(and__23665__auto__)){
var and__23665__auto____$1 = (function (){var G__37070 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37070) : p1.call(null,G__37070));
})();
if(cljs.core.truth_(and__23665__auto____$1)){
var and__23665__auto____$2 = (function (){var G__37072 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37072) : p2.call(null,G__37072));
})();
if(cljs.core.truth_(and__23665__auto____$2)){
var G__37073 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37073) : p2.call(null,G__37073));
} else {
return and__23665__auto____$2;
}
} else {
return and__23665__auto____$1;
}
} else {
return and__23665__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__23665__auto__ = (function (){var G__37075 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37075) : p1.call(null,G__37075));
})();
if(cljs.core.truth_(and__23665__auto__)){
var and__23665__auto____$1 = (function (){var G__37077 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37077) : p1.call(null,G__37077));
})();
if(cljs.core.truth_(and__23665__auto____$1)){
var and__23665__auto____$2 = (function (){var G__37079 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37079) : p1.call(null,G__37079));
})();
if(cljs.core.truth_(and__23665__auto____$2)){
var and__23665__auto____$3 = (function (){var G__37081 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37081) : p2.call(null,G__37081));
})();
if(cljs.core.truth_(and__23665__auto____$3)){
var and__23665__auto____$4 = (function (){var G__37083 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37083) : p2.call(null,G__37083));
})();
if(cljs.core.truth_(and__23665__auto____$4)){
var G__37084 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37084) : p2.call(null,G__37084));
} else {
return and__23665__auto____$4;
}
} else {
return and__23665__auto____$3;
}
} else {
return and__23665__auto____$2;
}
} else {
return and__23665__auto____$1;
}
} else {
return and__23665__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__37207__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__36812_SHARP_){
var and__23665__auto__ = (function (){var G__37089 = p1__36812_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37089) : p1.call(null,G__37089));
})();
if(cljs.core.truth_(and__23665__auto__)){
var G__37090 = p1__36812_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37090) : p2.call(null,G__37090));
} else {
return and__23665__auto__;
}
}),args)));
};
var G__37207 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__37208__i = 0, G__37208__a = new Array(arguments.length -  3);
while (G__37208__i < G__37208__a.length) {G__37208__a[G__37208__i] = arguments[G__37208__i + 3]; ++G__37208__i;}
  args = new cljs.core.IndexedSeq(G__37208__a,0);
} 
return G__37207__delegate.call(this,x,y,z,args);};
G__37207.cljs$lang$maxFixedArity = 3;
G__37207.cljs$lang$applyTo = (function (arglist__37209){
var x = cljs.core.first(arglist__37209);
arglist__37209 = cljs.core.next(arglist__37209);
var y = cljs.core.first(arglist__37209);
arglist__37209 = cljs.core.next(arglist__37209);
var z = cljs.core.first(arglist__37209);
var args = cljs.core.rest(arglist__37209);
return G__37207__delegate(x,y,z,args);
});
G__37207.cljs$core$IFn$_invoke$arity$variadic = G__37207__delegate;
return G__37207;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__37210 = null;
if (arguments.length > 3) {
var G__37211__i = 0, G__37211__a = new Array(arguments.length -  3);
while (G__37211__i < G__37211__a.length) {G__37211__a[G__37211__i] = arguments[G__37211__i + 3]; ++G__37211__i;}
G__37210 = new cljs.core.IndexedSeq(G__37211__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__37210);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__23665__auto__ = (function (){var G__37136 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37136) : p1.call(null,G__37136));
})();
if(cljs.core.truth_(and__23665__auto__)){
var and__23665__auto____$1 = (function (){var G__37138 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37138) : p2.call(null,G__37138));
})();
if(cljs.core.truth_(and__23665__auto____$1)){
var G__37139 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37139) : p3.call(null,G__37139));
} else {
return and__23665__auto____$1;
}
} else {
return and__23665__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__23665__auto__ = (function (){var G__37141 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37141) : p1.call(null,G__37141));
})();
if(cljs.core.truth_(and__23665__auto__)){
var and__23665__auto____$1 = (function (){var G__37143 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37143) : p2.call(null,G__37143));
})();
if(cljs.core.truth_(and__23665__auto____$1)){
var and__23665__auto____$2 = (function (){var G__37145 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37145) : p3.call(null,G__37145));
})();
if(cljs.core.truth_(and__23665__auto____$2)){
var and__23665__auto____$3 = (function (){var G__37147 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37147) : p1.call(null,G__37147));
})();
if(cljs.core.truth_(and__23665__auto____$3)){
var and__23665__auto____$4 = (function (){var G__37149 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37149) : p2.call(null,G__37149));
})();
if(cljs.core.truth_(and__23665__auto____$4)){
var G__37150 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37150) : p3.call(null,G__37150));
} else {
return and__23665__auto____$4;
}
} else {
return and__23665__auto____$3;
}
} else {
return and__23665__auto____$2;
}
} else {
return and__23665__auto____$1;
}
} else {
return and__23665__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__23665__auto__ = (function (){var G__37152 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37152) : p1.call(null,G__37152));
})();
if(cljs.core.truth_(and__23665__auto__)){
var and__23665__auto____$1 = (function (){var G__37154 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37154) : p2.call(null,G__37154));
})();
if(cljs.core.truth_(and__23665__auto____$1)){
var and__23665__auto____$2 = (function (){var G__37156 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37156) : p3.call(null,G__37156));
})();
if(cljs.core.truth_(and__23665__auto____$2)){
var and__23665__auto____$3 = (function (){var G__37158 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37158) : p1.call(null,G__37158));
})();
if(cljs.core.truth_(and__23665__auto____$3)){
var and__23665__auto____$4 = (function (){var G__37160 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37160) : p2.call(null,G__37160));
})();
if(cljs.core.truth_(and__23665__auto____$4)){
var and__23665__auto____$5 = (function (){var G__37162 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37162) : p3.call(null,G__37162));
})();
if(cljs.core.truth_(and__23665__auto____$5)){
var and__23665__auto____$6 = (function (){var G__37164 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37164) : p1.call(null,G__37164));
})();
if(cljs.core.truth_(and__23665__auto____$6)){
var and__23665__auto____$7 = (function (){var G__37166 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37166) : p2.call(null,G__37166));
})();
if(cljs.core.truth_(and__23665__auto____$7)){
var G__37167 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37167) : p3.call(null,G__37167));
} else {
return and__23665__auto____$7;
}
} else {
return and__23665__auto____$6;
}
} else {
return and__23665__auto____$5;
}
} else {
return and__23665__auto____$4;
}
} else {
return and__23665__auto____$3;
}
} else {
return and__23665__auto____$2;
}
} else {
return and__23665__auto____$1;
}
} else {
return and__23665__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__37212__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__36813_SHARP_){
var and__23665__auto__ = (function (){var G__37174 = p1__36813_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37174) : p1.call(null,G__37174));
})();
if(cljs.core.truth_(and__23665__auto__)){
var and__23665__auto____$1 = (function (){var G__37176 = p1__36813_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37176) : p2.call(null,G__37176));
})();
if(cljs.core.truth_(and__23665__auto____$1)){
var G__37177 = p1__36813_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37177) : p3.call(null,G__37177));
} else {
return and__23665__auto____$1;
}
} else {
return and__23665__auto__;
}
}),args)));
};
var G__37212 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__37213__i = 0, G__37213__a = new Array(arguments.length -  3);
while (G__37213__i < G__37213__a.length) {G__37213__a[G__37213__i] = arguments[G__37213__i + 3]; ++G__37213__i;}
  args = new cljs.core.IndexedSeq(G__37213__a,0);
} 
return G__37212__delegate.call(this,x,y,z,args);};
G__37212.cljs$lang$maxFixedArity = 3;
G__37212.cljs$lang$applyTo = (function (arglist__37214){
var x = cljs.core.first(arglist__37214);
arglist__37214 = cljs.core.next(arglist__37214);
var y = cljs.core.first(arglist__37214);
arglist__37214 = cljs.core.next(arglist__37214);
var z = cljs.core.first(arglist__37214);
var args = cljs.core.rest(arglist__37214);
return G__37212__delegate(x,y,z,args);
});
G__37212.cljs$core$IFn$_invoke$arity$variadic = G__37212__delegate;
return G__37212;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__37215 = null;
if (arguments.length > 3) {
var G__37216__i = 0, G__37216__a = new Array(arguments.length -  3);
while (G__37216__i < G__37216__a.length) {G__37216__a[G__37216__i] = arguments[G__37216__i + 3]; ++G__37216__i;}
G__37215 = new cljs.core.IndexedSeq(G__37216__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__37215);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__37217__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__36814_SHARP_){
var G__37193 = x;
return (p1__36814_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36814_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37193) : p1__36814_SHARP_.call(null,G__37193));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__36815_SHARP_){
var and__23665__auto__ = (function (){var G__37195 = x;
return (p1__36815_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36815_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37195) : p1__36815_SHARP_.call(null,G__37195));
})();
if(cljs.core.truth_(and__23665__auto__)){
var G__37196 = y;
return (p1__36815_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36815_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37196) : p1__36815_SHARP_.call(null,G__37196));
} else {
return and__23665__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__36816_SHARP_){
var and__23665__auto__ = (function (){var G__37198 = x;
return (p1__36816_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36816_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37198) : p1__36816_SHARP_.call(null,G__37198));
})();
if(cljs.core.truth_(and__23665__auto__)){
var and__23665__auto____$1 = (function (){var G__37200 = y;
return (p1__36816_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36816_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37200) : p1__36816_SHARP_.call(null,G__37200));
})();
if(cljs.core.truth_(and__23665__auto____$1)){
var G__37201 = z;
return (p1__36816_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__36816_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37201) : p1__36816_SHARP_.call(null,G__37201));
} else {
return and__23665__auto____$1;
}
} else {
return and__23665__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__37218__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__36817_SHARP_){
return cljs.core.every_QMARK_(p1__36817_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__37218 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__37219__i = 0, G__37219__a = new Array(arguments.length -  3);
while (G__37219__i < G__37219__a.length) {G__37219__a[G__37219__i] = arguments[G__37219__i + 3]; ++G__37219__i;}
  args = new cljs.core.IndexedSeq(G__37219__a,0);
} 
return G__37218__delegate.call(this,x,y,z,args);};
G__37218.cljs$lang$maxFixedArity = 3;
G__37218.cljs$lang$applyTo = (function (arglist__37220){
var x = cljs.core.first(arglist__37220);
arglist__37220 = cljs.core.next(arglist__37220);
var y = cljs.core.first(arglist__37220);
arglist__37220 = cljs.core.next(arglist__37220);
var z = cljs.core.first(arglist__37220);
var args = cljs.core.rest(arglist__37220);
return G__37218__delegate(x,y,z,args);
});
G__37218.cljs$core$IFn$_invoke$arity$variadic = G__37218__delegate;
return G__37218;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__37221 = null;
if (arguments.length > 3) {
var G__37222__i = 0, G__37222__a = new Array(arguments.length -  3);
while (G__37222__i < G__37222__a.length) {G__37222__a[G__37222__i] = arguments[G__37222__i + 3]; ++G__37222__i;}
G__37221 = new cljs.core.IndexedSeq(G__37222__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__37221);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__37217 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__37223__i = 0, G__37223__a = new Array(arguments.length -  3);
while (G__37223__i < G__37223__a.length) {G__37223__a[G__37223__i] = arguments[G__37223__i + 3]; ++G__37223__i;}
  ps = new cljs.core.IndexedSeq(G__37223__a,0);
} 
return G__37217__delegate.call(this,p1,p2,p3,ps);};
G__37217.cljs$lang$maxFixedArity = 3;
G__37217.cljs$lang$applyTo = (function (arglist__37224){
var p1 = cljs.core.first(arglist__37224);
arglist__37224 = cljs.core.next(arglist__37224);
var p2 = cljs.core.first(arglist__37224);
arglist__37224 = cljs.core.next(arglist__37224);
var p3 = cljs.core.first(arglist__37224);
var ps = cljs.core.rest(arglist__37224);
return G__37217__delegate(p1,p2,p3,ps);
});
G__37217.cljs$core$IFn$_invoke$arity$variadic = G__37217__delegate;
return G__37217;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__37225 = null;
if (arguments.length > 3) {
var G__37226__i = 0, G__37226__a = new Array(arguments.length -  3);
while (G__37226__i < G__37226__a.length) {G__37226__a[G__37226__i] = arguments[G__37226__i + 3]; ++G__37226__i;}
G__37225 = new cljs.core.IndexedSeq(G__37226__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__37225);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__37432 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37432) : p.call(null,G__37432));
});
var sp1__2 = (function (x,y){
var or__23677__auto__ = (function (){var G__37434 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37434) : p.call(null,G__37434));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var G__37435 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37435) : p.call(null,G__37435));
}
});
var sp1__3 = (function (x,y,z){
var or__23677__auto__ = (function (){var G__37437 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37437) : p.call(null,G__37437));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (function (){var G__37439 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37439) : p.call(null,G__37439));
})();
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
var G__37440 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__37440) : p.call(null,G__37440));
}
}
});
var sp1__4 = (function() { 
var G__37601__delegate = function (x,y,z,args){
var or__23677__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__37601 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__37602__i = 0, G__37602__a = new Array(arguments.length -  3);
while (G__37602__i < G__37602__a.length) {G__37602__a[G__37602__i] = arguments[G__37602__i + 3]; ++G__37602__i;}
  args = new cljs.core.IndexedSeq(G__37602__a,0);
} 
return G__37601__delegate.call(this,x,y,z,args);};
G__37601.cljs$lang$maxFixedArity = 3;
G__37601.cljs$lang$applyTo = (function (arglist__37603){
var x = cljs.core.first(arglist__37603);
arglist__37603 = cljs.core.next(arglist__37603);
var y = cljs.core.first(arglist__37603);
arglist__37603 = cljs.core.next(arglist__37603);
var z = cljs.core.first(arglist__37603);
var args = cljs.core.rest(arglist__37603);
return G__37601__delegate(x,y,z,args);
});
G__37601.cljs$core$IFn$_invoke$arity$variadic = G__37601__delegate;
return G__37601;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__37604 = null;
if (arguments.length > 3) {
var G__37605__i = 0, G__37605__a = new Array(arguments.length -  3);
while (G__37605__i < G__37605__a.length) {G__37605__a[G__37605__i] = arguments[G__37605__i + 3]; ++G__37605__i;}
G__37604 = new cljs.core.IndexedSeq(G__37605__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__37604);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__23677__auto__ = (function (){var G__37472 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37472) : p1.call(null,G__37472));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var G__37473 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37473) : p2.call(null,G__37473));
}
});
var sp2__2 = (function (x,y){
var or__23677__auto__ = (function (){var G__37475 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37475) : p1.call(null,G__37475));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (function (){var G__37477 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37477) : p1.call(null,G__37477));
})();
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
var or__23677__auto____$2 = (function (){var G__37479 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37479) : p2.call(null,G__37479));
})();
if(cljs.core.truth_(or__23677__auto____$2)){
return or__23677__auto____$2;
} else {
var G__37480 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37480) : p2.call(null,G__37480));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__23677__auto__ = (function (){var G__37482 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37482) : p1.call(null,G__37482));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (function (){var G__37484 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37484) : p1.call(null,G__37484));
})();
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
var or__23677__auto____$2 = (function (){var G__37486 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37486) : p1.call(null,G__37486));
})();
if(cljs.core.truth_(or__23677__auto____$2)){
return or__23677__auto____$2;
} else {
var or__23677__auto____$3 = (function (){var G__37488 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37488) : p2.call(null,G__37488));
})();
if(cljs.core.truth_(or__23677__auto____$3)){
return or__23677__auto____$3;
} else {
var or__23677__auto____$4 = (function (){var G__37490 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37490) : p2.call(null,G__37490));
})();
if(cljs.core.truth_(or__23677__auto____$4)){
return or__23677__auto____$4;
} else {
var G__37491 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37491) : p2.call(null,G__37491));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__37606__delegate = function (x,y,z,args){
var or__23677__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return cljs.core.some(((function (or__23677__auto__){
return (function (p1__37227_SHARP_){
var or__23677__auto____$1 = (function (){var G__37493 = p1__37227_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37493) : p1.call(null,G__37493));
})();
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
var G__37494 = p1__37227_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37494) : p2.call(null,G__37494));
}
});})(or__23677__auto__))
,args);
}
};
var G__37606 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__37607__i = 0, G__37607__a = new Array(arguments.length -  3);
while (G__37607__i < G__37607__a.length) {G__37607__a[G__37607__i] = arguments[G__37607__i + 3]; ++G__37607__i;}
  args = new cljs.core.IndexedSeq(G__37607__a,0);
} 
return G__37606__delegate.call(this,x,y,z,args);};
G__37606.cljs$lang$maxFixedArity = 3;
G__37606.cljs$lang$applyTo = (function (arglist__37608){
var x = cljs.core.first(arglist__37608);
arglist__37608 = cljs.core.next(arglist__37608);
var y = cljs.core.first(arglist__37608);
arglist__37608 = cljs.core.next(arglist__37608);
var z = cljs.core.first(arglist__37608);
var args = cljs.core.rest(arglist__37608);
return G__37606__delegate(x,y,z,args);
});
G__37606.cljs$core$IFn$_invoke$arity$variadic = G__37606__delegate;
return G__37606;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__37609 = null;
if (arguments.length > 3) {
var G__37610__i = 0, G__37610__a = new Array(arguments.length -  3);
while (G__37610__i < G__37610__a.length) {G__37610__a[G__37610__i] = arguments[G__37610__i + 3]; ++G__37610__i;}
G__37609 = new cljs.core.IndexedSeq(G__37610__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__37609);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__23677__auto__ = (function (){var G__37540 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37540) : p1.call(null,G__37540));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (function (){var G__37542 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37542) : p2.call(null,G__37542));
})();
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
var G__37543 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37543) : p3.call(null,G__37543));
}
}
});
var sp3__2 = (function (x,y){
var or__23677__auto__ = (function (){var G__37545 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37545) : p1.call(null,G__37545));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (function (){var G__37547 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37547) : p2.call(null,G__37547));
})();
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
var or__23677__auto____$2 = (function (){var G__37549 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37549) : p3.call(null,G__37549));
})();
if(cljs.core.truth_(or__23677__auto____$2)){
return or__23677__auto____$2;
} else {
var or__23677__auto____$3 = (function (){var G__37551 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37551) : p1.call(null,G__37551));
})();
if(cljs.core.truth_(or__23677__auto____$3)){
return or__23677__auto____$3;
} else {
var or__23677__auto____$4 = (function (){var G__37553 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37553) : p2.call(null,G__37553));
})();
if(cljs.core.truth_(or__23677__auto____$4)){
return or__23677__auto____$4;
} else {
var G__37554 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37554) : p3.call(null,G__37554));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__23677__auto__ = (function (){var G__37556 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37556) : p1.call(null,G__37556));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (function (){var G__37558 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37558) : p2.call(null,G__37558));
})();
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
var or__23677__auto____$2 = (function (){var G__37560 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37560) : p3.call(null,G__37560));
})();
if(cljs.core.truth_(or__23677__auto____$2)){
return or__23677__auto____$2;
} else {
var or__23677__auto____$3 = (function (){var G__37562 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37562) : p1.call(null,G__37562));
})();
if(cljs.core.truth_(or__23677__auto____$3)){
return or__23677__auto____$3;
} else {
var or__23677__auto____$4 = (function (){var G__37564 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37564) : p2.call(null,G__37564));
})();
if(cljs.core.truth_(or__23677__auto____$4)){
return or__23677__auto____$4;
} else {
var or__23677__auto____$5 = (function (){var G__37566 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37566) : p3.call(null,G__37566));
})();
if(cljs.core.truth_(or__23677__auto____$5)){
return or__23677__auto____$5;
} else {
var or__23677__auto____$6 = (function (){var G__37568 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37568) : p1.call(null,G__37568));
})();
if(cljs.core.truth_(or__23677__auto____$6)){
return or__23677__auto____$6;
} else {
var or__23677__auto____$7 = (function (){var G__37570 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37570) : p2.call(null,G__37570));
})();
if(cljs.core.truth_(or__23677__auto____$7)){
return or__23677__auto____$7;
} else {
var G__37571 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37571) : p3.call(null,G__37571));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__37611__delegate = function (x,y,z,args){
var or__23677__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return cljs.core.some(((function (or__23677__auto__){
return (function (p1__37228_SHARP_){
var or__23677__auto____$1 = (function (){var G__37573 = p1__37228_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__37573) : p1.call(null,G__37573));
})();
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
var or__23677__auto____$2 = (function (){var G__37575 = p1__37228_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__37575) : p2.call(null,G__37575));
})();
if(cljs.core.truth_(or__23677__auto____$2)){
return or__23677__auto____$2;
} else {
var G__37576 = p1__37228_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__37576) : p3.call(null,G__37576));
}
}
});})(or__23677__auto__))
,args);
}
};
var G__37611 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__37612__i = 0, G__37612__a = new Array(arguments.length -  3);
while (G__37612__i < G__37612__a.length) {G__37612__a[G__37612__i] = arguments[G__37612__i + 3]; ++G__37612__i;}
  args = new cljs.core.IndexedSeq(G__37612__a,0);
} 
return G__37611__delegate.call(this,x,y,z,args);};
G__37611.cljs$lang$maxFixedArity = 3;
G__37611.cljs$lang$applyTo = (function (arglist__37613){
var x = cljs.core.first(arglist__37613);
arglist__37613 = cljs.core.next(arglist__37613);
var y = cljs.core.first(arglist__37613);
arglist__37613 = cljs.core.next(arglist__37613);
var z = cljs.core.first(arglist__37613);
var args = cljs.core.rest(arglist__37613);
return G__37611__delegate(x,y,z,args);
});
G__37611.cljs$core$IFn$_invoke$arity$variadic = G__37611__delegate;
return G__37611;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__37614 = null;
if (arguments.length > 3) {
var G__37615__i = 0, G__37615__a = new Array(arguments.length -  3);
while (G__37615__i < G__37615__a.length) {G__37615__a[G__37615__i] = arguments[G__37615__i + 3]; ++G__37615__i;}
G__37614 = new cljs.core.IndexedSeq(G__37615__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__37614);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__37616__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__37229_SHARP_){
var G__37592 = x;
return (p1__37229_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__37229_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37592) : p1__37229_SHARP_.call(null,G__37592));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__37230_SHARP_){
var or__23677__auto__ = (function (){var G__37594 = x;
return (p1__37230_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__37230_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37594) : p1__37230_SHARP_.call(null,G__37594));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var G__37595 = y;
return (p1__37230_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__37230_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37595) : p1__37230_SHARP_.call(null,G__37595));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__37231_SHARP_){
var or__23677__auto__ = (function (){var G__37597 = x;
return (p1__37231_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__37231_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37597) : p1__37231_SHARP_.call(null,G__37597));
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (function (){var G__37599 = y;
return (p1__37231_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__37231_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37599) : p1__37231_SHARP_.call(null,G__37599));
})();
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
var G__37600 = z;
return (p1__37231_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__37231_SHARP_.cljs$core$IFn$_invoke$arity$1(G__37600) : p1__37231_SHARP_.call(null,G__37600));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__37617__delegate = function (x,y,z,args){
var or__23677__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return cljs.core.some(((function (or__23677__auto__,ps__$1){
return (function (p1__37232_SHARP_){
return cljs.core.some(p1__37232_SHARP_,args);
});})(or__23677__auto__,ps__$1))
,ps__$1);
}
};
var G__37617 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__37618__i = 0, G__37618__a = new Array(arguments.length -  3);
while (G__37618__i < G__37618__a.length) {G__37618__a[G__37618__i] = arguments[G__37618__i + 3]; ++G__37618__i;}
  args = new cljs.core.IndexedSeq(G__37618__a,0);
} 
return G__37617__delegate.call(this,x,y,z,args);};
G__37617.cljs$lang$maxFixedArity = 3;
G__37617.cljs$lang$applyTo = (function (arglist__37619){
var x = cljs.core.first(arglist__37619);
arglist__37619 = cljs.core.next(arglist__37619);
var y = cljs.core.first(arglist__37619);
arglist__37619 = cljs.core.next(arglist__37619);
var z = cljs.core.first(arglist__37619);
var args = cljs.core.rest(arglist__37619);
return G__37617__delegate(x,y,z,args);
});
G__37617.cljs$core$IFn$_invoke$arity$variadic = G__37617__delegate;
return G__37617;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__37620 = null;
if (arguments.length > 3) {
var G__37621__i = 0, G__37621__a = new Array(arguments.length -  3);
while (G__37621__i < G__37621__a.length) {G__37621__a[G__37621__i] = arguments[G__37621__i + 3]; ++G__37621__i;}
G__37620 = new cljs.core.IndexedSeq(G__37621__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__37620);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__37616 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__37622__i = 0, G__37622__a = new Array(arguments.length -  3);
while (G__37622__i < G__37622__a.length) {G__37622__a[G__37622__i] = arguments[G__37622__i + 3]; ++G__37622__i;}
  ps = new cljs.core.IndexedSeq(G__37622__a,0);
} 
return G__37616__delegate.call(this,p1,p2,p3,ps);};
G__37616.cljs$lang$maxFixedArity = 3;
G__37616.cljs$lang$applyTo = (function (arglist__37623){
var p1 = cljs.core.first(arglist__37623);
arglist__37623 = cljs.core.next(arglist__37623);
var p2 = cljs.core.first(arglist__37623);
arglist__37623 = cljs.core.next(arglist__37623);
var p3 = cljs.core.first(arglist__37623);
var ps = cljs.core.rest(arglist__37623);
return G__37616__delegate(p1,p2,p3,ps);
});
G__37616.cljs$core$IFn$_invoke$arity$variadic = G__37616__delegate;
return G__37616;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__37624 = null;
if (arguments.length > 3) {
var G__37625__i = 0, G__37625__a = new Array(arguments.length -  3);
while (G__37625__i < G__37625__a.length) {G__37625__a[G__37625__i] = arguments[G__37625__i + 3]; ++G__37625__i;}
G__37624 = new cljs.core.IndexedSeq(G__37625__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__37624);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__37680 = null;
var G__37680__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__37680__1 = (function (result){
var G__37666 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__37666) : rf.call(null,G__37666));
});
var G__37680__2 = (function (result,input){
var G__37667 = result;
var G__37668 = (function (){var G__37669 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__37669) : f.call(null,G__37669));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37667,G__37668) : rf.call(null,G__37667,G__37668));
});
var G__37680__3 = (function() { 
var G__37681__delegate = function (result,input,inputs){
var G__37670 = result;
var G__37671 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37670,G__37671) : rf.call(null,G__37670,G__37671));
};
var G__37681 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__37682__i = 0, G__37682__a = new Array(arguments.length -  2);
while (G__37682__i < G__37682__a.length) {G__37682__a[G__37682__i] = arguments[G__37682__i + 2]; ++G__37682__i;}
  inputs = new cljs.core.IndexedSeq(G__37682__a,0);
} 
return G__37681__delegate.call(this,result,input,inputs);};
G__37681.cljs$lang$maxFixedArity = 2;
G__37681.cljs$lang$applyTo = (function (arglist__37683){
var result = cljs.core.first(arglist__37683);
arglist__37683 = cljs.core.next(arglist__37683);
var input = cljs.core.first(arglist__37683);
var inputs = cljs.core.rest(arglist__37683);
return G__37681__delegate(result,input,inputs);
});
G__37681.cljs$core$IFn$_invoke$arity$variadic = G__37681__delegate;
return G__37681;
})()
;
G__37680 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__37680__0.call(this);
case 1:
return G__37680__1.call(this,result);
case 2:
return G__37680__2.call(this,result,input);
default:
var G__37684 = null;
if (arguments.length > 2) {
var G__37685__i = 0, G__37685__a = new Array(arguments.length -  2);
while (G__37685__i < G__37685__a.length) {G__37685__a[G__37685__i] = arguments[G__37685__i + 2]; ++G__37685__i;}
G__37684 = new cljs.core.IndexedSeq(G__37685__a,0);
}
return G__37680__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__37684);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37680.cljs$lang$maxFixedArity = 2;
G__37680.cljs$lang$applyTo = G__37680__3.cljs$lang$applyTo;
G__37680.cljs$core$IFn$_invoke$arity$0 = G__37680__0;
G__37680.cljs$core$IFn$_invoke$arity$1 = G__37680__1;
G__37680.cljs$core$IFn$_invoke$arity$2 = G__37680__2;
G__37680.cljs$core$IFn$_invoke$arity$variadic = G__37680__3.cljs$core$IFn$_invoke$arity$variadic;
return G__37680;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__24564__auto___37686 = size;
var i_37687 = (0);
while(true){
if((i_37687 < n__24564__auto___37686)){
cljs.core.chunk_append(b,(function (){var G__37672 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_37687);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__37672) : f.call(null,G__37672));
})());

var G__37688 = (i_37687 + (1));
i_37687 = G__37688;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__37673 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__37673) : f.call(null,G__37673));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__37674 = cljs.core.first(s1);
var G__37675 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37674,G__37675) : f.call(null,G__37674,G__37675));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__37676 = cljs.core.first(s1);
var G__37677 = cljs.core.first(s2);
var G__37678 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__37676,G__37677,G__37678) : f.call(null,G__37676,G__37677,G__37678));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__37689__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__37626_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__37626_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__37689 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__37690__i = 0, G__37690__a = new Array(arguments.length -  4);
while (G__37690__i < G__37690__a.length) {G__37690__a[G__37690__i] = arguments[G__37690__i + 4]; ++G__37690__i;}
  colls = new cljs.core.IndexedSeq(G__37690__a,0);
} 
return G__37689__delegate.call(this,f,c1,c2,c3,colls);};
G__37689.cljs$lang$maxFixedArity = 4;
G__37689.cljs$lang$applyTo = (function (arglist__37691){
var f = cljs.core.first(arglist__37691);
arglist__37691 = cljs.core.next(arglist__37691);
var c1 = cljs.core.first(arglist__37691);
arglist__37691 = cljs.core.next(arglist__37691);
var c2 = cljs.core.first(arglist__37691);
arglist__37691 = cljs.core.next(arglist__37691);
var c3 = cljs.core.first(arglist__37691);
var colls = cljs.core.rest(arglist__37691);
return G__37689__delegate(f,c1,c2,c3,colls);
});
G__37689.cljs$core$IFn$_invoke$arity$variadic = G__37689__delegate;
return G__37689;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__37692 = null;
if (arguments.length > 4) {
var G__37693__i = 0, G__37693__a = new Array(arguments.length -  4);
while (G__37693__i < G__37693__a.length) {G__37693__a[G__37693__i] = arguments[G__37693__i + 4]; ++G__37693__i;}
G__37692 = new cljs.core.IndexedSeq(G__37693__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__37692);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__37702 = null;
var G__37702__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__37702__1 = (function (result){
var G__37699 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__37699) : rf.call(null,G__37699));
});
var G__37702__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__37700 = result;
var G__37701 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37700,G__37701) : rf.call(null,G__37700,G__37701));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__37702 = function(result,input){
switch(arguments.length){
case 0:
return G__37702__0.call(this);
case 1:
return G__37702__1.call(this,result);
case 2:
return G__37702__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37702.cljs$core$IFn$_invoke$arity$0 = G__37702__0;
G__37702.cljs$core$IFn$_invoke$arity$1 = G__37702__1;
G__37702.cljs$core$IFn$_invoke$arity$2 = G__37702__2;
return G__37702;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__37709 = null;
var G__37709__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__37709__1 = (function (result){
var G__37706 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__37706) : rf.call(null,G__37706));
});
var G__37709__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__37707 = result;
var G__37708 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37707,G__37708) : rf.call(null,G__37707,G__37708));
}
});
G__37709 = function(result,input){
switch(arguments.length){
case 0:
return G__37709__0.call(this);
case 1:
return G__37709__1.call(this,result);
case 2:
return G__37709__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37709.cljs$core$IFn$_invoke$arity$0 = G__37709__0;
G__37709.cljs$core$IFn$_invoke$arity$1 = G__37709__1;
G__37709.cljs$core$IFn$_invoke$arity$2 = G__37709__2;
return G__37709;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__37710 = (n__$1 - (1));
var G__37711 = cljs.core.rest(s);
n__$1 = G__37710;
coll__$1 = G__37711;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__37714 = cljs.core.next(s);
var G__37715 = cljs.core.next(lead);
s = G__37714;
lead = G__37715;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__37728 = null;
var G__37728__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__37728__1 = (function (result){
var G__37722 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__37722) : rf.call(null,G__37722));
});
var G__37728__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__23665__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__23665__auto__)){
var G__37723 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__37723) : pred.call(null,G__37723));
} else {
return and__23665__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__37724 = result;
var G__37725 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37724,G__37725) : rf.call(null,G__37724,G__37725));
}
});
G__37728 = function(result,input){
switch(arguments.length){
case 0:
return G__37728__0.call(this);
case 1:
return G__37728__1.call(this,result);
case 2:
return G__37728__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37728.cljs$core$IFn$_invoke$arity$0 = G__37728__0;
G__37728.cljs$core$IFn$_invoke$arity$1 = G__37728__1;
G__37728.cljs$core$IFn$_invoke$arity$2 = G__37728__2;
return G__37728;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__23665__auto__ = s;
if(and__23665__auto__){
var G__37727 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__37727) : pred__$1.call(null,G__37727));
} else {
return and__23665__auto__;
}
})())){
var G__37729 = pred__$1;
var G__37730 = cljs.core.rest(s);
pred__$1 = G__37729;
coll__$1 = G__37730;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__37739 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__37739) : f.call(null,G__37739));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__37742__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__37742 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__37743__i = 0, G__37743__a = new Array(arguments.length -  2);
while (G__37743__i < G__37743__a.length) {G__37743__a[G__37743__i] = arguments[G__37743__i + 2]; ++G__37743__i;}
  colls = new cljs.core.IndexedSeq(G__37743__a,0);
} 
return G__37742__delegate.call(this,c1,c2,colls);};
G__37742.cljs$lang$maxFixedArity = 2;
G__37742.cljs$lang$applyTo = (function (arglist__37744){
var c1 = cljs.core.first(arglist__37744);
arglist__37744 = cljs.core.next(arglist__37744);
var c2 = cljs.core.first(arglist__37744);
var colls = cljs.core.rest(arglist__37744);
return G__37742__delegate(c1,c2,colls);
});
G__37742.cljs$core$IFn$_invoke$arity$variadic = G__37742__delegate;
return G__37742;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__37745 = null;
if (arguments.length > 2) {
var G__37746__i = 0, G__37746__a = new Array(arguments.length -  2);
while (G__37746__i < G__37746__a.length) {G__37746__a[G__37746__i] = arguments[G__37746__i + 2]; ++G__37746__i;}
G__37745 = new cljs.core.IndexedSeq(G__37746__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__37745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__37761 = null;
var G__37761__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__37761__1 = (function (result){
var G__37754 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__37754) : rf.call(null,G__37754));
});
var G__37761__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__37755 = result;
var G__37756 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37755,G__37756) : rf.call(null,G__37755,G__37756));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__37757 = sepr;
var G__37758 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37757,G__37758) : rf.call(null,G__37757,G__37758));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__37759 = result;
var G__37760 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37759,G__37760) : rf.call(null,G__37759,G__37760));
}
});
G__37761 = function(result,input){
switch(arguments.length){
case 0:
return G__37761__0.call(this);
case 1:
return G__37761__1.call(this,result);
case 2:
return G__37761__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37761.cljs$core$IFn$_invoke$arity$0 = G__37761__0;
G__37761.cljs$core$IFn$_invoke$arity$1 = G__37761__1;
G__37761.cljs$core$IFn$_invoke$arity$2 = G__37761__2;
return G__37761;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__37770__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__37770 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__37771__i = 0, G__37771__a = new Array(arguments.length -  1);
while (G__37771__i < G__37771__a.length) {G__37771__a[G__37771__i] = arguments[G__37771__i + 1]; ++G__37771__i;}
  colls = new cljs.core.IndexedSeq(G__37771__a,0);
} 
return G__37770__delegate.call(this,f,colls);};
G__37770.cljs$lang$maxFixedArity = 1;
G__37770.cljs$lang$applyTo = (function (arglist__37772){
var f = cljs.core.first(arglist__37772);
var colls = cljs.core.rest(arglist__37772);
return G__37770__delegate(f,colls);
});
G__37770.cljs$core$IFn$_invoke$arity$variadic = G__37770__delegate;
return G__37770;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__37773 = null;
if (arguments.length > 1) {
var G__37774__i = 0, G__37774__a = new Array(arguments.length -  1);
while (G__37774__i < G__37774__a.length) {G__37774__a[G__37774__i] = arguments[G__37774__i + 1]; ++G__37774__i;}
G__37773 = new cljs.core.IndexedSeq(G__37774__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__37773);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__37793 = null;
var G__37793__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__37793__1 = (function (result){
var G__37787 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__37787) : rf.call(null,G__37787));
});
var G__37793__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__37788 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__37788) : pred.call(null,G__37788));
})())){
var G__37789 = result;
var G__37790 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__37789,G__37790) : rf.call(null,G__37789,G__37790));
} else {
return result;
}
});
G__37793 = function(result,input){
switch(arguments.length){
case 0:
return G__37793__0.call(this);
case 1:
return G__37793__1.call(this,result);
case 2:
return G__37793__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37793.cljs$core$IFn$_invoke$arity$0 = G__37793__0;
G__37793.cljs$core$IFn$_invoke$arity$1 = G__37793__1;
G__37793.cljs$core$IFn$_invoke$arity$2 = G__37793__2;
return G__37793;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__24564__auto___37794 = size;
var i_37795 = (0);
while(true){
if((i_37795 < n__24564__auto___37794)){
if(cljs.core.truth_((function (){var G__37791 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_37795);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__37791) : pred.call(null,G__37791));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_37795));
} else {
}

var G__37796 = (i_37795 + (1));
i_37795 = G__37796;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__37792 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__37792) : pred.call(null,G__37792));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__37803 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__37803) : branch_QMARK_.call(null,G__37803));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__37804 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__37804) : children.call(null,G__37804));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__37805_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__37805_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__37808 = to;
if(G__37808){
var bit__24351__auto__ = (G__37808.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24351__auto__) || (G__37808.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__37809 = to;
if(G__37809){
var bit__24351__auto__ = (G__37809.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24351__auto__) || (G__37809.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__37811 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__37811) : f.call(null,G__37811));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__37812__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__37812 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__37813__i = 0, G__37813__a = new Array(arguments.length -  4);
while (G__37813__i < G__37813__a.length) {G__37813__a[G__37813__i] = arguments[G__37813__i + 4]; ++G__37813__i;}
  colls = new cljs.core.IndexedSeq(G__37813__a,0);
} 
return G__37812__delegate.call(this,f,c1,c2,c3,colls);};
G__37812.cljs$lang$maxFixedArity = 4;
G__37812.cljs$lang$applyTo = (function (arglist__37814){
var f = cljs.core.first(arglist__37814);
arglist__37814 = cljs.core.next(arglist__37814);
var c1 = cljs.core.first(arglist__37814);
arglist__37814 = cljs.core.next(arglist__37814);
var c2 = cljs.core.first(arglist__37814);
arglist__37814 = cljs.core.next(arglist__37814);
var c3 = cljs.core.first(arglist__37814);
var colls = cljs.core.rest(arglist__37814);
return G__37812__delegate(f,c1,c2,c3,colls);
});
G__37812.cljs$core$IFn$_invoke$arity$variadic = G__37812__delegate;
return G__37812;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__37815 = null;
if (arguments.length > 4) {
var G__37816__i = 0, G__37816__a = new Array(arguments.length -  4);
while (G__37816__i < G__37816__a.length) {G__37816__a[G__37816__i] = arguments[G__37816__i + 4]; ++G__37816__i;}
G__37815 = new cljs.core.IndexedSeq(G__37816__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__37815);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__37818 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__37818) : pred.call(null,G__37818));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__37833 = m__$1;
if(G__37833){
var bit__24358__auto__ = (G__37833.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24358__auto__) || (G__37833.cljs$core$ILookup$)){
return true;
} else {
if((!G__37833.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__37833);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__37833);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__37834 = sentinel;
var G__37835 = m__$2;
var G__37836 = cljs.core.next(ks__$1);
sentinel = G__37834;
m__$1 = G__37835;
ks__$1 = G__37836;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__37837,v){
var vec__37842 = p__37837;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37842,(0),null);
var ks = cljs.core.nthnext(vec__37842,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__37843,f){
var vec__37881 = p__37843;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37881,(0),null);
var ks = cljs.core.nthnext(vec__37881,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__37882 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__37882) : f.call(null,G__37882));
})());
}
});
var update_in__4 = (function (m,p__37844,f,a){
var vec__37883 = p__37844;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37883,(0),null);
var ks = cljs.core.nthnext(vec__37883,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__37884 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__37885 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37884,G__37885) : f.call(null,G__37884,G__37885));
})());
}
});
var update_in__5 = (function (m,p__37845,f,a,b){
var vec__37886 = p__37845;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37886,(0),null);
var ks = cljs.core.nthnext(vec__37886,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__37887 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__37888 = a;
var G__37889 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__37887,G__37888,G__37889) : f.call(null,G__37887,G__37888,G__37889));
})());
}
});
var update_in__6 = (function (m,p__37846,f,a,b,c){
var vec__37890 = p__37846;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37890,(0),null);
var ks = cljs.core.nthnext(vec__37890,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__37891 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__37892 = a;
var G__37893 = b;
var G__37894 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__37891,G__37892,G__37893,G__37894) : f.call(null,G__37891,G__37892,G__37893,G__37894));
})());
}
});
var update_in__7 = (function() { 
var G__37896__delegate = function (m,p__37847,f,a,b,c,args){
var vec__37895 = p__37847;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__37895,(0),null);
var ks = cljs.core.nthnext(vec__37895,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__37896 = function (m,p__37847,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__37897__i = 0, G__37897__a = new Array(arguments.length -  6);
while (G__37897__i < G__37897__a.length) {G__37897__a[G__37897__i] = arguments[G__37897__i + 6]; ++G__37897__i;}
  args = new cljs.core.IndexedSeq(G__37897__a,0);
} 
return G__37896__delegate.call(this,m,p__37847,f,a,b,c,args);};
G__37896.cljs$lang$maxFixedArity = 6;
G__37896.cljs$lang$applyTo = (function (arglist__37898){
var m = cljs.core.first(arglist__37898);
arglist__37898 = cljs.core.next(arglist__37898);
var p__37847 = cljs.core.first(arglist__37898);
arglist__37898 = cljs.core.next(arglist__37898);
var f = cljs.core.first(arglist__37898);
arglist__37898 = cljs.core.next(arglist__37898);
var a = cljs.core.first(arglist__37898);
arglist__37898 = cljs.core.next(arglist__37898);
var b = cljs.core.first(arglist__37898);
arglist__37898 = cljs.core.next(arglist__37898);
var c = cljs.core.first(arglist__37898);
var args = cljs.core.rest(arglist__37898);
return G__37896__delegate(m,p__37847,f,a,b,c,args);
});
G__37896.cljs$core$IFn$_invoke$arity$variadic = G__37896__delegate;
return G__37896;
})()
;
update_in = function(m,p__37847,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__37847,f);
case 4:
return update_in__4.call(this,m,p__37847,f,a);
case 5:
return update_in__5.call(this,m,p__37847,f,a,b);
case 6:
return update_in__6.call(this,m,p__37847,f,a,b,c);
default:
var G__37899 = null;
if (arguments.length > 6) {
var G__37900__i = 0, G__37900__a = new Array(arguments.length -  6);
while (G__37900__i < G__37900__a.length) {G__37900__a[G__37900__i] = arguments[G__37900__i + 6]; ++G__37900__i;}
G__37899 = new cljs.core.IndexedSeq(G__37900__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__37847,f,a,b,c, G__37899);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__37911 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__37911) : f.call(null,G__37911));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__37912 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__37913 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37912,G__37913) : f.call(null,G__37912,G__37913));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__37914 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__37915 = x;
var G__37916 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__37914,G__37915,G__37916) : f.call(null,G__37914,G__37915,G__37916));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__37917 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__37918 = x;
var G__37919 = y;
var G__37920 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__37917,G__37918,G__37919,G__37920) : f.call(null,G__37917,G__37918,G__37919,G__37920));
})());
});
var update__7 = (function() { 
var G__37921__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__37921 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__37922__i = 0, G__37922__a = new Array(arguments.length -  6);
while (G__37922__i < G__37922__a.length) {G__37922__a[G__37922__i] = arguments[G__37922__i + 6]; ++G__37922__i;}
  more = new cljs.core.IndexedSeq(G__37922__a,0);
} 
return G__37921__delegate.call(this,m,k,f,x,y,z,more);};
G__37921.cljs$lang$maxFixedArity = 6;
G__37921.cljs$lang$applyTo = (function (arglist__37923){
var m = cljs.core.first(arglist__37923);
arglist__37923 = cljs.core.next(arglist__37923);
var k = cljs.core.first(arglist__37923);
arglist__37923 = cljs.core.next(arglist__37923);
var f = cljs.core.first(arglist__37923);
arglist__37923 = cljs.core.next(arglist__37923);
var x = cljs.core.first(arglist__37923);
arglist__37923 = cljs.core.next(arglist__37923);
var y = cljs.core.first(arglist__37923);
arglist__37923 = cljs.core.next(arglist__37923);
var z = cljs.core.first(arglist__37923);
var more = cljs.core.rest(arglist__37923);
return G__37921__delegate(m,k,f,x,y,z,more);
});
G__37921.cljs$core$IFn$_invoke$arity$variadic = G__37921__delegate;
return G__37921;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__37924 = null;
if (arguments.length > 6) {
var G__37925__i = 0, G__37925__a = new Array(arguments.length -  6);
while (G__37925__i < G__37925__a.length) {G__37925__a[G__37925__i] = arguments[G__37925__i + 6]; ++G__37925__i;}
G__37924 = new cljs.core.IndexedSeq(G__37925__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__37924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__37926 = (ll - (5));
var G__37927 = r;
ll = G__37926;
ret = G__37927;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__37932 = cljs.core.pv_aget(node,(0));
var G__37933 = (level - (5));
node = G__37932;
level = G__37933;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__37934 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__37935 = (level - (5));
node = G__37934;
level = G__37935;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__37945 = init__$2;
var G__37946 = (j + i);
var G__37947 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__37945,G__37946,G__37947) : f.call(null,G__37945,G__37946,G__37947));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__37958 = (j + (1));
var G__37959 = init__$3;
j = G__37958;
init__$2 = G__37959;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__37948 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37948) : cljs.core.deref.call(null,G__37948));
} else {
var G__37960 = (i + len);
var G__37961 = init__$2;
i = G__37960;
init__$1 = G__37961;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__37949 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__37949) : cljs.core.tv_editable_root.call(null,G__37949));
})(),(function (){var G__37950 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__37950) : cljs.core.tv_editable_tail.call(null,G__37950));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__37951 = init__$2;
var G__37952 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__37951,G__37952) : f.call(null,G__37951,G__37952));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__37962 = (j + (1));
var G__37963 = init__$3;
j = G__37962;
init__$2 = G__37963;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__37953 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__37953) : cljs.core.deref.call(null,G__37953));
} else {
var G__37964 = (i + len);
var G__37965 = init__$2;
i = G__37964;
init__$1 = G__37965;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__37954 = coll__$1;
var G__37955 = cljs.core.first_array_for_longvec(coll__$1);
var G__37956 = (0);
var G__37957 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__37954,G__37955,G__37956,G__37957) : cljs.core.chunked_seq.call(null,G__37954,G__37955,G__37956,G__37957));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__24564__auto___37966 = len;
var i_37967 = (0);
while(true){
if((i_37967 < n__24564__auto___37966)){
(new_tail[i_37967] = (self__.tail[i_37967]));

var G__37968 = (i_37967 + (1));
i_37967 = G__37968;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__37969 = null;
var G__37969__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__37969__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__37969 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__37969__2.call(this,self__,k);
case 3:
return G__37969__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37969.cljs$core$IFn$_invoke$arity$2 = G__37969__2;
G__37969.cljs$core$IFn$_invoke$arity$3 = G__37969__3;
return G__37969;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args37944){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args37944)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__37970 = (i + (1));
var G__37971 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__37970;
out = G__37971;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__37972__i = 0, G__37972__a = new Array(arguments.length -  0);
while (G__37972__i < G__37972__a.length) {G__37972__a[G__37972__i] = arguments[G__37972__i + 0]; ++G__37972__i;}
  args = new cljs.core.IndexedSeq(G__37972__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__37973){
var args = cljs.core.seq(arglist__37973);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__37974 = self__.vec;
var G__37975 = self__.node;
var G__37976 = self__.i;
var G__37977 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__37974,G__37975,G__37976,G__37977) : cljs.core.chunked_seq.call(null,G__37974,G__37975,G__37976,G__37977));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__37978 = self__.vec;
var G__37979 = (self__.i + self__.off);
var G__37980 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__37978,G__37979,G__37980) : cljs.core.subvec.call(null,G__37978,G__37979,G__37980));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__37981 = self__.vec;
var G__37982 = (self__.i + self__.off);
var G__37983 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__37981,G__37982,G__37983) : cljs.core.subvec.call(null,G__37981,G__37982,G__37983));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__37984 = self__.vec;
var G__37985 = self__.node;
var G__37986 = self__.i;
var G__37987 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__37984,G__37985,G__37986,G__37987) : cljs.core.chunked_seq.call(null,G__37984,G__37985,G__37986,G__37987));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__37988 = self__.vec;
var G__37989 = cljs.core.unchecked_array_for(self__.vec,end);
var G__37990 = end;
var G__37991 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__37988,G__37989,G__37990,G__37991) : cljs.core.chunked_seq.call(null,G__37988,G__37989,G__37990,G__37991));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__37992 = self__.vec;
var G__37993 = self__.node;
var G__37994 = self__.i;
var G__37995 = self__.off;
var G__37996 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__37992,G__37993,G__37994,G__37995,G__37996) : cljs.core.chunked_seq.call(null,G__37992,G__37993,G__37994,G__37995,G__37996));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__37997 = self__.vec;
var G__37998 = cljs.core.unchecked_array_for(self__.vec,end);
var G__37999 = end;
var G__38000 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__37997,G__37998,G__37999,G__38000) : cljs.core.chunked_seq.call(null,G__37997,G__37998,G__37999,G__38000));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__38002 = self__.meta;
var G__38003 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__38004 = self__.start;
var G__38005 = (function (){var x__23994__auto__ = self__.end;
var y__23995__auto__ = (v_pos + (1));
return ((x__23994__auto__ > y__23995__auto__) ? x__23994__auto__ : y__23995__auto__);
})();
var G__38006 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__38002,G__38003,G__38004,G__38005,G__38006) : cljs.core.build_subvec.call(null,G__38002,G__38003,G__38004,G__38005,G__38006));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__38007 = self__.meta;
var G__38008 = self__.v;
var G__38009 = self__.start;
var G__38010 = (self__.end - (1));
var G__38011 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__38007,G__38008,G__38009,G__38010,G__38011) : cljs.core.build_subvec.call(null,G__38007,G__38008,G__38009,G__38010,G__38011));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__38013 = meta__$1;
var G__38014 = self__.v;
var G__38015 = self__.start;
var G__38016 = self__.end;
var G__38017 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__38013,G__38014,G__38015,G__38016,G__38017) : cljs.core.build_subvec.call(null,G__38013,G__38014,G__38015,G__38016,G__38017));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__38018 = self__.meta;
var G__38019 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__38020 = self__.start;
var G__38021 = (self__.end + (1));
var G__38022 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__38018,G__38019,G__38020,G__38021,G__38022) : cljs.core.build_subvec.call(null,G__38018,G__38019,G__38020,G__38021,G__38022));
});

cljs.core.Subvec.prototype.call = (function() {
var G__38023 = null;
var G__38023__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__38023__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__38023 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38023__2.call(this,self__,k);
case 3:
return G__38023__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38023.cljs$core$IFn$_invoke$arity$2 = G__38023__2;
G__38023.cljs$core$IFn$_invoke$arity$3 = G__38023__3;
return G__38023;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args38001){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38001)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__38024 = meta;
var G__38025 = v.v;
var G__38026 = (v.start + start);
var G__38027 = (v.start + end);
var G__38028 = __hash;
meta = G__38024;
v = G__38025;
start = G__38026;
end = G__38027;
__hash = G__38028;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj38035 = {};
return obj38035;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__38043 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__38044 = (level - (5));
node = G__38043;
level = G__38044;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__38048 = null;
var G__38048__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__38048__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__38048 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38048__2.call(this,self__,k);
case 3:
return G__38048__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38048.cljs$core$IFn$_invoke$arity$2 = G__38048__2;
G__38048.cljs$core$IFn$_invoke$arity$3 = G__38048__3;
return G__38048;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args38045){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38045)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__23677__auto__ = self__.front;
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__23677__auto__ = self__.rear;
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__38049 = (i + incr);
i = G__38049;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__38050 = (i + (1));
var G__38051 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__38050;
out = G__38051;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj38055 = {};
return obj38055;
})();
var l = ks.length;
var i_38056 = (0);
while(true){
if((i_38056 < l)){
var k_38057 = (ks[i_38056]);
(new_obj[k_38057] = (obj[k_38057]));

var G__38058 = (i_38056 + (1));
i_38056 = G__38058;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__23665__auto__ = (function (){var G__38062 = k;
return goog.isString(G__38062);
})();
if(cljs.core.truth_(and__23665__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__23665__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__38063 = init__$1;
var G__38064 = k;
var G__38065 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__38063,G__38064,G__38065) : f.call(null,G__38063,G__38064,G__38065));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__38066 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38066) : cljs.core.deref.call(null,G__38066));
} else {
var G__38072 = cljs.core.rest(keys__$1);
var G__38073 = init__$2;
keys__$1 = G__38072;
init__$1 = G__38073;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__23665__auto__ = (function (){var G__38068 = k;
return goog.isString(G__38068);
})();
if(cljs.core.truth_(and__23665__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__23665__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__38069 = k;
return goog.isString(G__38069);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__23665__auto__ = (function (){var G__38071 = k;
return goog.isString(G__38071);
})();
if(cljs.core.truth_(and__23665__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__23665__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__38059_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__38059_SHARP_,(self__.strobj[p1__38059_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__38074 = null;
var G__38074__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__38074__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__38074 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38074__2.call(this,self__,k);
case 3:
return G__38074__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38074.cljs$core$IFn$_invoke$arity$2 = G__38074__2;
G__38074.cljs$core$IFn$_invoke$arity$3 = G__38074__3;
return G__38074;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args38060){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38060)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj38076 = {};
return obj38076;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__38077 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38077,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38077,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__38078 = (i + (2));
i = G__38078;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__38079 = (i + (2));
i = G__38079;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__38080 = (i + (2));
i = G__38080;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__38081 = (i + (2));
i = G__38081;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__38082 = (i + (2));
i = G__38082;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__23677__auto__ = (function (){var G__38086 = k;
return goog.isString(G__38086);
})();
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_38087 = (0);
while(true){
if((i_38087 < l)){
(narr[i_38087] = (arr[i_38087]));

var G__38088 = (i_38087 + (1));
i_38087 = G__38088;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__38090 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__38090) : cljs.core.keys.call(null,G__38090));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__38091 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__38091) : cljs.core.vals.call(null,G__38091));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__38092 = cljs.core.seq(coll);
var chunk__38093 = null;
var count__38094 = (0);
var i__38095 = (0);
while(true){
if((i__38095 < count__38094)){
var vec__38096 = chunk__38093.cljs$core$IIndexed$_nth$arity$2(null,i__38095);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38096,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38096,(1),null);
var G__38097_38110 = v;
var G__38098_38111 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38097_38110,G__38098_38111) : f.call(null,G__38097_38110,G__38098_38111));

var G__38112 = seq__38092;
var G__38113 = chunk__38093;
var G__38114 = count__38094;
var G__38115 = (i__38095 + (1));
seq__38092 = G__38112;
chunk__38093 = G__38113;
count__38094 = G__38114;
i__38095 = G__38115;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__38092);
if(temp__4126__auto__){
var seq__38092__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__38092__$1)){
var c__24464__auto__ = cljs.core.chunk_first(seq__38092__$1);
var G__38116 = cljs.core.chunk_rest(seq__38092__$1);
var G__38117 = c__24464__auto__;
var G__38118 = cljs.core.count(c__24464__auto__);
var G__38119 = (0);
seq__38092 = G__38116;
chunk__38093 = G__38117;
count__38094 = G__38118;
i__38095 = G__38119;
continue;
} else {
var vec__38099 = cljs.core.first(seq__38092__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38099,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38099,(1),null);
var G__38100_38120 = v;
var G__38101_38121 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38100_38120,G__38101_38121) : f.call(null,G__38100_38120,G__38101_38121));

var G__38122 = cljs.core.next(seq__38092__$1);
var G__38123 = null;
var G__38124 = (0);
var G__38125 = (0);
seq__38092 = G__38122;
chunk__38093 = G__38123;
count__38094 = G__38124;
i__38095 = G__38125;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__38102 = init__$1;
var G__38103 = (self__.arr[i]);
var G__38104 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__38102,G__38103,G__38104) : f.call(null,G__38102,G__38103,G__38104));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__38105 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38105) : cljs.core.deref.call(null,G__38105));
} else {
var G__38126 = (i + (2));
var G__38127 = init__$2;
i = G__38126;
init__$1 = G__38127;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__38106 = other;
if(G__38106){
var bit__24351__auto__ = (G__38106.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24351__auto__) || (G__38106.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__38128 = (i + (2));
i = G__38128;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj38108 = {};
return obj38108;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__38129 = (s + (2));
var G__38130 = d;
s = G__38129;
d = G__38130;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__38131 = (s + (2));
var G__38132 = (d + (2));
s = G__38131;
d = G__38132;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__38109 = cljs.core.aclone(self__.arr);
(G__38109[(idx + (1))] = v);

return G__38109;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__38133 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__38134 = cljs.core.next(es);
ret = G__38133;
es = G__38134;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__38135 = null;
var G__38135__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__38135__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__38135 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38135__2.call(this,self__,k);
case 3:
return G__38135__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38135.cljs$core$IFn$_invoke$arity$2 = G__38135__2;
G__38135.cljs$core$IFn$_invoke$arity$3 = G__38135__3;
return G__38135;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args38089){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38089)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__38136 = (i + (2));
var G__38137 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__38136;
ret = G__38137;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__38138_38146 = self__.arr;
G__38138_38146.pop();

G__38138_38146.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__38139 = self__.len;
var G__38140 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__38139,G__38140) : cljs.core.array__GT_transient_hash_map.call(null,G__38139,G__38140));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__38141 = o;
if(G__38141){
var bit__24358__auto__ = (G__38141.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24358__auto__) || (G__38141.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__38141.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__38141);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__38141);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__38142 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__38142) : cljs.core.key.call(null,G__38142));
})(),(function (){var G__38143 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__38143) : cljs.core.val.call(null,G__38143));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__38147 = cljs.core.next(es);
var G__38148 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__38144 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__38144) : cljs.core.key.call(null,G__38144));
})(),(function (){var G__38145 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__38145) : cljs.core.val.call(null,G__38145));
})());
es = G__38147;
tcoll__$2 = G__38148;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__38149 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__38150 = (i + (2));
out = G__38149;
i = G__38150;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__38153 = cljs.core.aclone(arr);
(G__38153[i] = a);

return G__38153;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__38154 = cljs.core.aclone(arr);
(G__38154[i] = a);

(G__38154[j] = b);

return G__38154;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__38159 = init__$1;
var G__38160 = k;
var G__38161 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__38159,G__38160,G__38161) : f.call(null,G__38159,G__38160,G__38161));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__38162 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38162) : cljs.core.deref.call(null,G__38162));
} else {
var G__38163 = (i + (2));
var G__38164 = init__$2;
i = G__38163;
init__$1 = G__38164;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__38165 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__38165) : cljs.core.create_inode_seq.call(null,G__38165));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_38179 = (0);
var j_38180 = (0);
while(true){
if((i_38179 < (32))){
if((((self__.bitmap >>> i_38179) & (1)) === (0))){
var G__38181 = (i_38179 + (1));
var G__38182 = j_38180;
i_38179 = G__38181;
j_38180 = G__38182;
continue;
} else {
(nodes[i_38179] = ((!(((self__.arr[j_38180]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_38180])),(self__.arr[j_38180]),(self__.arr[(j_38180 + (1))]),added_leaf_QMARK_):(self__.arr[(j_38180 + (1))])));

var G__38183 = (i_38179 + (1));
var G__38184 = (j_38180 + (2));
i_38179 = G__38183;
j_38180 = G__38184;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__38166 = edit__$1;
var G__38167 = (shift + (5));
var G__38168 = key_or_nil;
var G__38169 = val_or_node;
var G__38170 = hash;
var G__38171 = key;
var G__38172 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__38166,G__38167,G__38168,G__38169,G__38170,G__38171,G__38172) : cljs.core.create_node.call(null,G__38166,G__38167,G__38168,G__38169,G__38170,G__38171,G__38172));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_38185 = (0);
var j_38186 = (0);
while(true){
if((i_38185 < (32))){
if((((self__.bitmap >>> i_38185) & (1)) === (0))){
var G__38187 = (i_38185 + (1));
var G__38188 = j_38186;
i_38185 = G__38187;
j_38186 = G__38188;
continue;
} else {
(nodes[i_38185] = ((!(((self__.arr[j_38186]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_38186])),(self__.arr[j_38186]),(self__.arr[(j_38186 + (1))]),added_leaf_QMARK_):(self__.arr[(j_38186 + (1))])));

var G__38189 = (i_38185 + (1));
var G__38190 = (j_38186 + (2));
i_38185 = G__38189;
j_38186 = G__38190;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__38173 = (shift + (5));
var G__38174 = key_or_nil;
var G__38175 = val_or_node;
var G__38176 = hash;
var G__38177 = key;
var G__38178 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__38173,G__38174,G__38175,G__38176,G__38177,G__38178) : cljs.core.create_node.call(null,G__38173,G__38174,G__38175,G__38176,G__38177,G__38178));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__38191 = (i + (1));
var G__38192 = (j + (2));
var G__38193 = (bitmap | ((1) << i));
i = G__38191;
j = G__38192;
bitmap = G__38193;
continue;
} else {
var G__38194 = (i + (1));
var G__38195 = j;
var G__38196 = bitmap;
i = G__38194;
j = G__38195;
bitmap = G__38196;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__38197 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__38197) : cljs.core.create_array_node_seq.call(null,G__38197));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__38198 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38198) : cljs.core.deref.call(null,G__38198));
} else {
var G__38199 = (i + (1));
var G__38200 = init__$2;
i = G__38199;
init__$1 = G__38200;
continue;
}
} else {
var G__38201 = (i + (1));
var G__38202 = init__$1;
i = G__38201;
init__$1 = G__38202;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__38203 = (i + (2));
i = G__38203;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__38204 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__38204) : cljs.core.create_inode_seq.call(null,G__38204));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__38205 = self__.nodes;
var G__38206 = (self__.i + (2));
var G__38207 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__38205,G__38206,G__38207) : cljs.core.create_inode_seq.call(null,G__38205,G__38206,G__38207));
} else {
var G__38208 = self__.nodes;
var G__38209 = self__.i;
var G__38210 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__38208,G__38209,G__38210) : cljs.core.create_inode_seq.call(null,G__38208,G__38209,G__38210));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__38214 = (j + (2));
j = G__38214;
continue;
}
} else {
var G__38215 = (j + (2));
j = G__38215;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__38216 = null;
var G__38217 = self__.nodes;
var G__38218 = self__.i;
var G__38219 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__38216,G__38217,G__38218,G__38219) : cljs.core.create_array_node_seq.call(null,G__38216,G__38217,G__38218,G__38219));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__38224 = (j + (1));
j = G__38224;
continue;
}
} else {
var G__38225 = (j + (1));
j = G__38225;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__38227 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__38227) : cljs.core.keys.call(null,G__38227));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__38228 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__38228) : cljs.core.vals.call(null,G__38228));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__38229 = cljs.core.seq(coll);
var chunk__38230 = null;
var count__38231 = (0);
var i__38232 = (0);
while(true){
if((i__38232 < count__38231)){
var vec__38233 = chunk__38230.cljs$core$IIndexed$_nth$arity$2(null,i__38232);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38233,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38233,(1),null);
var G__38234_38245 = v;
var G__38235_38246 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38234_38245,G__38235_38246) : f.call(null,G__38234_38245,G__38235_38246));

var G__38247 = seq__38229;
var G__38248 = chunk__38230;
var G__38249 = count__38231;
var G__38250 = (i__38232 + (1));
seq__38229 = G__38247;
chunk__38230 = G__38248;
count__38231 = G__38249;
i__38232 = G__38250;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__38229);
if(temp__4126__auto__){
var seq__38229__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__38229__$1)){
var c__24464__auto__ = cljs.core.chunk_first(seq__38229__$1);
var G__38251 = cljs.core.chunk_rest(seq__38229__$1);
var G__38252 = c__24464__auto__;
var G__38253 = cljs.core.count(c__24464__auto__);
var G__38254 = (0);
seq__38229 = G__38251;
chunk__38230 = G__38252;
count__38231 = G__38253;
i__38232 = G__38254;
continue;
} else {
var vec__38236 = cljs.core.first(seq__38229__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38236,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38236,(1),null);
var G__38237_38255 = v;
var G__38238_38256 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38237_38255,G__38238_38256) : f.call(null,G__38237_38255,G__38238_38256));

var G__38257 = cljs.core.next(seq__38229__$1);
var G__38258 = null;
var G__38259 = (0);
var G__38260 = (0);
seq__38229 = G__38257;
chunk__38230 = G__38258;
count__38231 = G__38259;
i__38232 = G__38260;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__38239 = init;
var G__38240 = null;
var G__38241 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__38239,G__38240,G__38241) : f.call(null,G__38239,G__38240,G__38241));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__38242 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38242) : cljs.core.deref.call(null,G__38242));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj38244 = {};
return obj38244;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__38261 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__38262 = cljs.core.next(es);
ret = G__38261;
es = G__38262;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__38263 = null;
var G__38263__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__38263__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__38263 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38263__2.call(this,self__,k);
case 3:
return G__38263__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38263.cljs$core$IFn$_invoke$arity$2 = G__38263__2;
G__38263.cljs$core$IFn$_invoke$arity$3 = G__38263__3;
return G__38263;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args38226){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38226)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__38264 = (i + (2));
var G__38265 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__38264;
ret = G__38265;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__38266 = (i + (1));
var G__38267 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__38266;
out = G__38267;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__38268 = o;
if(G__38268){
var bit__24358__auto__ = (G__38268.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24358__auto__) || (G__38268.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__38268.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__38268);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__38268);
}
})()){
return tcoll.assoc_BANG_((function (){var G__38269 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__38269) : cljs.core.key.call(null,G__38269));
})(),(function (){var G__38270 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__38270) : cljs.core.val.call(null,G__38270));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__38273 = cljs.core.next(es);
var G__38274 = tcoll__$1.assoc_BANG_((function (){var G__38271 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__38271) : cljs.core.key.call(null,G__38271));
})(),(function (){var G__38272 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__38272) : cljs.core.val.call(null,G__38272));
})());
es = G__38273;
tcoll__$1 = G__38274;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__38275 = ((ascending_QMARK_)?t.left:t.right);
var G__38276 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__38275;
stack__$1 = G__38276;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__38289 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38289) : cljs.core.deref.call(null,G__38289));
} else {
var init__$2 = (function (){var G__38290 = init__$1;
var G__38291 = node.key;
var G__38292 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__38290,G__38291,G__38292) : f.call(null,G__38290,G__38291,G__38292));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__38293 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38293) : cljs.core.deref.call(null,G__38293));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__38294 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38294) : cljs.core.deref.call(null,G__38294));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__38296 = null;
var G__38296__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__38296__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__38296 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38296__2.call(this,self__,k);
case 3:
return G__38296__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38296.cljs$core$IFn$_invoke$arity$2 = G__38296__2;
G__38296.cljs$core$IFn$_invoke$arity$3 = G__38296__3;
return G__38296;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args38295){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38295)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__38298 = null;
var G__38298__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__38298__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__38298 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38298__2.call(this,self__,k);
case 3:
return G__38298__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38298.cljs$core$IFn$_invoke$arity$2 = G__38298__2;
G__38298.cljs$core$IFn$_invoke$arity$3 = G__38298__3;
return G__38298;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args38297){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38297)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__38311 = k;
var G__38312 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__38311,G__38312) : comp.call(null,G__38311,G__38312));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__38331 = k;
var G__38332 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__38331,G__38332) : comp.call(null,G__38331,G__38332));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__38343 = k;
var G__38344 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__38343,G__38344) : comp.call(null,G__38343,G__38344));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__38346 = cljs.core.seq(coll);
var chunk__38347 = null;
var count__38348 = (0);
var i__38349 = (0);
while(true){
if((i__38349 < count__38348)){
var vec__38350 = chunk__38347.cljs$core$IIndexed$_nth$arity$2(null,i__38349);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38350,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38350,(1),null);
var G__38351_38363 = v;
var G__38352_38364 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38351_38363,G__38352_38364) : f.call(null,G__38351_38363,G__38352_38364));

var G__38365 = seq__38346;
var G__38366 = chunk__38347;
var G__38367 = count__38348;
var G__38368 = (i__38349 + (1));
seq__38346 = G__38365;
chunk__38347 = G__38366;
count__38348 = G__38367;
i__38349 = G__38368;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__38346);
if(temp__4126__auto__){
var seq__38346__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__38346__$1)){
var c__24464__auto__ = cljs.core.chunk_first(seq__38346__$1);
var G__38369 = cljs.core.chunk_rest(seq__38346__$1);
var G__38370 = c__24464__auto__;
var G__38371 = cljs.core.count(c__24464__auto__);
var G__38372 = (0);
seq__38346 = G__38369;
chunk__38347 = G__38370;
count__38348 = G__38371;
i__38349 = G__38372;
continue;
} else {
var vec__38353 = cljs.core.first(seq__38346__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38353,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38353,(1),null);
var G__38354_38373 = v;
var G__38355_38374 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38354_38373,G__38355_38374) : f.call(null,G__38354_38373,G__38355_38374));

var G__38375 = cljs.core.next(seq__38346__$1);
var G__38376 = null;
var G__38377 = (0);
var G__38378 = (0);
seq__38346 = G__38375;
chunk__38347 = G__38376;
count__38348 = G__38377;
i__38349 = G__38378;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__38356 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__38356) : cljs.core.keys.call(null,G__38356));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__38357 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__38357) : cljs.core.vals.call(null,G__38357));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__38358 = k;
var G__38359 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__38358,G__38359) : self__.comp.call(null,G__38358,G__38359));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__38379 = t.left;
t = G__38379;
continue;
} else {
var G__38380 = t.right;
t = G__38380;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__38381 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__38382 = cljs.core.next(es);
ret = G__38381;
es = G__38382;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__38383 = null;
var G__38383__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__38383__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__38383 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38383__2.call(this,self__,k);
case 3:
return G__38383__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38383.cljs$core$IFn$_invoke$arity$2 = G__38383__2;
G__38383.cljs$core$IFn$_invoke$arity$3 = G__38383__3;
return G__38383;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args38345){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38345)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__38360 = k;
var G__38361 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__38360,G__38361) : self__.comp.call(null,G__38360,G__38361));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__38384 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__38385 = t.left;
stack = G__38384;
t = G__38385;
continue;
} else {
var G__38386 = stack;
var G__38387 = t.right;
stack = G__38386;
t = G__38387;
continue;
}
} else {
if((c > (0))){
var G__38388 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__38389 = t.right;
stack = G__38388;
t = G__38389;
continue;
} else {
var G__38390 = stack;
var G__38391 = t.left;
stack = G__38390;
t = G__38391;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__38362 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__38362) : cljs.core.key.call(null,G__38362));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__38392 = cljs.core.nnext(in$);
var G__38393 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__38392;
out = G__38393;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__38394__i = 0, G__38394__a = new Array(arguments.length -  0);
while (G__38394__i < G__38394__a.length) {G__38394__a[G__38394__i] = arguments[G__38394__i + 0]; ++G__38394__i;}
  keyvals = new cljs.core.IndexedSeq(G__38394__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__38395){
var keyvals = cljs.core.seq(arglist__38395);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__38396__i = 0, G__38396__a = new Array(arguments.length -  0);
while (G__38396__i < G__38396__a.length) {G__38396__a[G__38396__i] = arguments[G__38396__i + 0]; ++G__38396__i;}
  keyvals = new cljs.core.IndexedSeq(G__38396__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__38397){
var keyvals = cljs.core.seq(arglist__38397);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj38401 = {};
return obj38401;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__38402 = cljs.core.nnext(kvs);
kvs = G__38402;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__38403__i = 0, G__38403__a = new Array(arguments.length -  0);
while (G__38403__i < G__38403__a.length) {G__38403__a[G__38403__i] = arguments[G__38403__i + 0]; ++G__38403__i;}
  keyvals = new cljs.core.IndexedSeq(G__38403__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__38404){
var keyvals = cljs.core.seq(arglist__38404);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__38405 = cljs.core.nnext(in$);
var G__38406 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__38405;
out = G__38406;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__38407__i = 0, G__38407__a = new Array(arguments.length -  0);
while (G__38407__i < G__38407__a.length) {G__38407__a[G__38407__i] = arguments[G__38407__i + 0]; ++G__38407__i;}
  keyvals = new cljs.core.IndexedSeq(G__38407__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__38408){
var keyvals = cljs.core.seq(arglist__38408);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__38409 = cljs.core.nnext(in$);
var G__38410 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__38409;
out = G__38410;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__38411__i = 0, G__38411__a = new Array(arguments.length -  1);
while (G__38411__i < G__38411__a.length) {G__38411__a[G__38411__i] = arguments[G__38411__i + 1]; ++G__38411__i;}
  keyvals = new cljs.core.IndexedSeq(G__38411__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__38412){
var comparator = cljs.core.first(arglist__38412);
var keyvals = cljs.core.rest(arglist__38412);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__38413 = self__.mseq;
if(G__38413){
var bit__24358__auto__ = (G__38413.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24358__auto__) || (G__38413.cljs$core$INext$)){
return true;
} else {
if((!G__38413.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__38413);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__38413);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__38414 = self__.mseq;
if(G__38414){
var bit__24358__auto__ = (G__38414.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24358__auto__) || (G__38414.cljs$core$INext$)){
return true;
} else {
if((!G__38414.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__38414);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__38414);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__38415 = self__.mseq;
if(G__38415){
var bit__24358__auto__ = (G__38415.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24358__auto__) || (G__38415.cljs$core$INext$)){
return true;
} else {
if((!G__38415.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__38415);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__38415);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__38416 = self__.mseq;
if(G__38416){
var bit__24358__auto__ = (G__38416.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24358__auto__) || (G__38416.cljs$core$INext$)){
return true;
} else {
if((!G__38416.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__38416);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__38416);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__38417_SHARP_,p2__38418_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__23677__auto__ = p1__38417_SHARP_;
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__38418_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__38419__i = 0, G__38419__a = new Array(arguments.length -  0);
while (G__38419__i < G__38419__a.length) {G__38419__a[G__38419__i] = arguments[G__38419__i + 0]; ++G__38419__i;}
  maps = new cljs.core.IndexedSeq(G__38419__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__38420){
var maps = cljs.core.seq(arglist__38420);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__38423 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__38424 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38423,G__38424) : f.call(null,G__38423,G__38424));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__23677__auto__ = m1;
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__38425__i = 0, G__38425__a = new Array(arguments.length -  1);
while (G__38425__i < G__38425__a.length) {G__38425__a[G__38425__i] = arguments[G__38425__i + 1]; ++G__38425__i;}
  maps = new cljs.core.IndexedSeq(G__38425__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__38426){
var f = cljs.core.first(arglist__38426);
var maps = cljs.core.rest(arglist__38426);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$9);
var G__38427 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$9))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__38428 = cljs.core.next(keys);
ret = G__38427;
keys = G__38428;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__38431 = cljs.core.seq(coll);
var chunk__38432 = null;
var count__38433 = (0);
var i__38434 = (0);
while(true){
if((i__38434 < count__38433)){
var vec__38435 = chunk__38432.cljs$core$IIndexed$_nth$arity$2(null,i__38434);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38435,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38435,(1),null);
var G__38436_38441 = v;
var G__38437_38442 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38436_38441,G__38437_38442) : f.call(null,G__38436_38441,G__38437_38442));

var G__38443 = seq__38431;
var G__38444 = chunk__38432;
var G__38445 = count__38433;
var G__38446 = (i__38434 + (1));
seq__38431 = G__38443;
chunk__38432 = G__38444;
count__38433 = G__38445;
i__38434 = G__38446;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__38431);
if(temp__4126__auto__){
var seq__38431__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__38431__$1)){
var c__24464__auto__ = cljs.core.chunk_first(seq__38431__$1);
var G__38447 = cljs.core.chunk_rest(seq__38431__$1);
var G__38448 = c__24464__auto__;
var G__38449 = cljs.core.count(c__24464__auto__);
var G__38450 = (0);
seq__38431 = G__38447;
chunk__38432 = G__38448;
count__38433 = G__38449;
i__38434 = G__38450;
continue;
} else {
var vec__38438 = cljs.core.first(seq__38431__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38438,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38438,(1),null);
var G__38439_38451 = v;
var G__38440_38452 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38439_38451,G__38440_38452) : f.call(null,G__38439_38451,G__38440_38452));

var G__38453 = cljs.core.next(seq__38431__$1);
var G__38454 = null;
var G__38455 = (0);
var G__38456 = (0);
seq__38431 = G__38453;
chunk__38432 = G__38454;
count__38433 = G__38455;
i__38434 = G__38456;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__38429_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__38429_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__38457 = null;
var G__38457__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__38457__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__38457 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38457__2.call(this,self__,k);
case 3:
return G__38457__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38457.cljs$core$IFn$_invoke$arity$2 = G__38457__2;
G__38457.cljs$core$IFn$_invoke$arity$3 = G__38457__3;
return G__38457;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args38430){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38430)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__38458 = (i + (1));
var G__38459 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__38458;
out = G__38459;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__38460 = (i + (1));
var G__38461 = cljs.core._conj_BANG_(out,(items[i]));
i = G__38460;
out = G__38461;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__38463 = null;
var G__38463__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__38463__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__38463 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38463__2.call(this,self__,k);
case 3:
return G__38463__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38463.cljs$core$IFn$_invoke$arity$2 = G__38463__2;
G__38463.cljs$core$IFn$_invoke$arity$3 = G__38463__3;
return G__38463;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args38462){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38462)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__38466 = cljs.core.seq(coll);
var chunk__38467 = null;
var count__38468 = (0);
var i__38469 = (0);
while(true){
if((i__38469 < count__38468)){
var vec__38470 = chunk__38467.cljs$core$IIndexed$_nth$arity$2(null,i__38469);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38470,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38470,(1),null);
var G__38471_38476 = v;
var G__38472_38477 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38471_38476,G__38472_38477) : f.call(null,G__38471_38476,G__38472_38477));

var G__38478 = seq__38466;
var G__38479 = chunk__38467;
var G__38480 = count__38468;
var G__38481 = (i__38469 + (1));
seq__38466 = G__38478;
chunk__38467 = G__38479;
count__38468 = G__38480;
i__38469 = G__38481;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__38466);
if(temp__4126__auto__){
var seq__38466__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__38466__$1)){
var c__24464__auto__ = cljs.core.chunk_first(seq__38466__$1);
var G__38482 = cljs.core.chunk_rest(seq__38466__$1);
var G__38483 = c__24464__auto__;
var G__38484 = cljs.core.count(c__24464__auto__);
var G__38485 = (0);
seq__38466 = G__38482;
chunk__38467 = G__38483;
count__38468 = G__38484;
i__38469 = G__38485;
continue;
} else {
var vec__38473 = cljs.core.first(seq__38466__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38473,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38473,(1),null);
var G__38474_38486 = v;
var G__38475_38487 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38474_38486,G__38475_38487) : f.call(null,G__38474_38486,G__38475_38487));

var G__38488 = cljs.core.next(seq__38466__$1);
var G__38489 = null;
var G__38490 = (0);
var G__38491 = (0);
seq__38466 = G__38488;
chunk__38467 = G__38489;
count__38468 = G__38490;
i__38469 = G__38491;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__38464_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__38464_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__38492 = null;
var G__38492__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__38492__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__38492 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__38492__2.call(this,self__,k);
case 3:
return G__38492__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38492.cljs$core$IFn$_invoke$arity$2 = G__38492__2;
G__38492.cljs$core$IFn$_invoke$arity$3 = G__38492__3;
return G__38492;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args38465){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args38465)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__24558__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__24558__auto__.length)){
var G__38493 = (i + (1));
var G__38494 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__38493;
res = G__38494;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__38495 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__38496 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__38495;
out = G__38496;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__38497__delegate = function (keys){
return cljs.core.set(keys);
};
var G__38497 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__38498__i = 0, G__38498__a = new Array(arguments.length -  0);
while (G__38498__i < G__38498__a.length) {G__38498__a[G__38498__i] = arguments[G__38498__i + 0]; ++G__38498__i;}
  keys = new cljs.core.IndexedSeq(G__38498__a,0);
} 
return G__38497__delegate.call(this,keys);};
G__38497.cljs$lang$maxFixedArity = 0;
G__38497.cljs$lang$applyTo = (function (arglist__38499){
var keys = cljs.core.seq(arglist__38499);
return G__38497__delegate(keys);
});
G__38497.cljs$core$IFn$_invoke$arity$variadic = G__38497__delegate;
return G__38497;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__38500 = null;
if (arguments.length > 0) {
var G__38501__i = 0, G__38501__a = new Array(arguments.length -  0);
while (G__38501__i < G__38501__a.length) {G__38501__a[G__38501__i] = arguments[G__38501__i + 0]; ++G__38501__i;}
G__38500 = new cljs.core.IndexedSeq(G__38501__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__38500);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__38502__i = 0, G__38502__a = new Array(arguments.length -  0);
while (G__38502__i < G__38502__a.length) {G__38502__a[G__38502__i] = arguments[G__38502__i + 0]; ++G__38502__i;}
  keys = new cljs.core.IndexedSeq(G__38502__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__38503){
var keys = cljs.core.seq(arglist__38503);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__38504__i = 0, G__38504__a = new Array(arguments.length -  1);
while (G__38504__i < G__38504__a.length) {G__38504__a[G__38504__i] = arguments[G__38504__i + 1]; ++G__38504__i;}
  keys = new cljs.core.IndexedSeq(G__38504__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__38505){
var comparator = cljs.core.first(arglist__38505);
var keys = cljs.core.rest(arglist__38505);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__38506_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__38506_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__38506_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__38507_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__38507_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__38507_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__38528 = null;
var G__38528__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__38528__1 = (function (result){
var G__38518 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__38518) : rf.call(null,G__38518));
});
var G__38528__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__38519 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38519) : cljs.core.deref.call(null,G__38519));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__38520 = result;
var G__38521 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__38520,G__38521) : rf.call(null,G__38520,G__38521));
}
});
G__38528 = function(result,input){
switch(arguments.length){
case 0:
return G__38528__0.call(this);
case 1:
return G__38528__1.call(this,result);
case 2:
return G__38528__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38528.cljs$core$IFn$_invoke$arity$0 = G__38528__0;
G__38528.cljs$core$IFn$_invoke$arity$1 = G__38528__1;
G__38528.cljs$core$IFn$_invoke$arity$2 = G__38528__2;
return G__38528;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__38526,seen__$1){
while(true){
var vec__38527 = p__38526;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38527,(0),null);
var xs__$1 = vec__38527;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__38529 = cljs.core.rest(s);
var G__38530 = seen__$1;
p__38526 = G__38529;
seen__$1 = G__38530;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__38531 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__38532 = cljs.core.next(s__$1);
ret = G__38531;
s__$1 = G__38532;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__38534 = x;
if(G__38534){
var bit__24351__auto__ = (G__38534.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24351__auto__) || (G__38534.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__38535 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__38536 = cljs.core.next(ks);
var G__38537 = cljs.core.next(vs);
map = G__38535;
ks = G__38536;
vs = G__38537;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__38548 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__38548) : k.call(null,G__38548));
})() > (function (){var G__38549 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__38549) : k.call(null,G__38549));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__38550__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__38538_SHARP_,p2__38539_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__38538_SHARP_,p2__38539_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__38550 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__38551__i = 0, G__38551__a = new Array(arguments.length -  3);
while (G__38551__i < G__38551__a.length) {G__38551__a[G__38551__i] = arguments[G__38551__i + 3]; ++G__38551__i;}
  more = new cljs.core.IndexedSeq(G__38551__a,0);
} 
return G__38550__delegate.call(this,k,x,y,more);};
G__38550.cljs$lang$maxFixedArity = 3;
G__38550.cljs$lang$applyTo = (function (arglist__38552){
var k = cljs.core.first(arglist__38552);
arglist__38552 = cljs.core.next(arglist__38552);
var x = cljs.core.first(arglist__38552);
arglist__38552 = cljs.core.next(arglist__38552);
var y = cljs.core.first(arglist__38552);
var more = cljs.core.rest(arglist__38552);
return G__38550__delegate(k,x,y,more);
});
G__38550.cljs$core$IFn$_invoke$arity$variadic = G__38550__delegate;
return G__38550;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__38553 = null;
if (arguments.length > 3) {
var G__38554__i = 0, G__38554__a = new Array(arguments.length -  3);
while (G__38554__i < G__38554__a.length) {G__38554__a[G__38554__i] = arguments[G__38554__i + 3]; ++G__38554__i;}
G__38553 = new cljs.core.IndexedSeq(G__38554__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__38553);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__38565 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__38565) : k.call(null,G__38565));
})() < (function (){var G__38566 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__38566) : k.call(null,G__38566));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__38567__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__38555_SHARP_,p2__38556_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__38555_SHARP_,p2__38556_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__38567 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__38568__i = 0, G__38568__a = new Array(arguments.length -  3);
while (G__38568__i < G__38568__a.length) {G__38568__a[G__38568__i] = arguments[G__38568__i + 3]; ++G__38568__i;}
  more = new cljs.core.IndexedSeq(G__38568__a,0);
} 
return G__38567__delegate.call(this,k,x,y,more);};
G__38567.cljs$lang$maxFixedArity = 3;
G__38567.cljs$lang$applyTo = (function (arglist__38569){
var k = cljs.core.first(arglist__38569);
arglist__38569 = cljs.core.next(arglist__38569);
var x = cljs.core.first(arglist__38569);
arglist__38569 = cljs.core.next(arglist__38569);
var y = cljs.core.first(arglist__38569);
var more = cljs.core.rest(arglist__38569);
return G__38567__delegate(k,x,y,more);
});
G__38567.cljs$core$IFn$_invoke$arity$variadic = G__38567__delegate;
return G__38567;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__38570 = null;
if (arguments.length > 3) {
var G__38571__i = 0, G__38571__a = new Array(arguments.length -  3);
while (G__38571__i < G__38571__a.length) {G__38571__a[G__38571__i] = arguments[G__38571__i + 3]; ++G__38571__i;}
G__38570 = new cljs.core.IndexedSeq(G__38571__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__38570);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__38588 = null;
var G__38588__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__38588__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__38583 = result;
var G__38584 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__38583,G__38584) : rf.call(null,G__38583,G__38584));
})());
})());
var G__38585 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__38585) : rf.call(null,G__38585));
});
var G__38588__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__38586 = result;
var G__38587 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__38586,G__38587) : rf.call(null,G__38586,G__38587));
} else {
return result;
}
});
G__38588 = function(result,input){
switch(arguments.length){
case 0:
return G__38588__0.call(this);
case 1:
return G__38588__1.call(this,result);
case 2:
return G__38588__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38588.cljs$core$IFn$_invoke$arity$0 = G__38588__0;
G__38588.cljs$core$IFn$_invoke$arity$1 = G__38588__1;
G__38588.cljs$core$IFn$_invoke$arity$2 = G__38588__2;
return G__38588;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__38601 = null;
var G__38601__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__38601__1 = (function (result){
var G__38596 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__38596) : rf.call(null,G__38596));
});
var G__38601__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__38597 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__38597) : pred.call(null,G__38597));
})())){
var G__38598 = result;
var G__38599 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__38598,G__38599) : rf.call(null,G__38598,G__38599));
} else {
return cljs.core.reduced(result);
}
});
G__38601 = function(result,input){
switch(arguments.length){
case 0:
return G__38601__0.call(this);
case 1:
return G__38601__1.call(this,result);
case 2:
return G__38601__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38601.cljs$core$IFn$_invoke$arity$0 = G__38601__0;
G__38601.cljs$core$IFn$_invoke$arity$1 = G__38601__1;
G__38601.cljs$core$IFn$_invoke$arity$2 = G__38601__2;
return G__38601;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__38600 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__38600) : pred.call(null,G__38600));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__38606 = (function (){var G__38608 = cljs.core._entry_key(sc,e);
var G__38609 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__38608,G__38609) : comp.call(null,G__38608,G__38609));
})();
var G__38607 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__38606,G__38607) : test.call(null,G__38606,G__38607));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__38613 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38613,(0),null);
var s = vec__38613;
if(cljs.core.truth_((function (){var G__38614 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__38614) : include.call(null,G__38614));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__38615 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38615,(0),null);
var s = vec__38615;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__38619 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38619,(0),null);
var s = vec__38619;
if(cljs.core.truth_((function (){var G__38620 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__38620) : include.call(null,G__38620));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__38621 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38621,(0),null);
var s = vec__38621;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__38622 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__38622) : Math.ceil.call(null,G__38622));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__24098__auto__ = self__.__hash;
if(!((h__24098__auto__ == null))){
return h__24098__auto__;
} else {
var h__24098__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__24098__auto____$1;

return h__24098__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__38623 = ret;
var G__38624 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38623,G__38624) : f.call(null,G__38623,G__38624));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__38625 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38625) : cljs.core.deref.call(null,G__38625));
} else {
var G__38626 = (i + self__.step);
var G__38627 = ret__$1;
i = G__38626;
ret = G__38627;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__38645 = null;
var G__38645__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__38645__1 = (function (result){
var G__38642 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__38642) : rf.call(null,G__38642));
});
var G__38645__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__38643 = result;
var G__38644 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__38643,G__38644) : rf.call(null,G__38643,G__38644));
} else {
return result;
}
});
G__38645 = function(result,input){
switch(arguments.length){
case 0:
return G__38645__0.call(this);
case 1:
return G__38645__1.call(this,result);
case 2:
return G__38645__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38645.cljs$core$IFn$_invoke$arity$0 = G__38645__0;
G__38645.cljs$core$IFn$_invoke$arity$1 = G__38645__1;
G__38645.cljs$core$IFn$_invoke$arity$2 = G__38645__2;
return G__38645;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (a,pa){
return (function() {
var G__38667 = null;
var G__38667__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__38667__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__38658 = result;
var G__38659 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__38658,G__38659) : rf.call(null,G__38658,G__38659));
})());
})());
var G__38660 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__38660) : rf.call(null,G__38660));
});
var G__38667__2 = (function (result,input){
var pval = (function (){var G__38661 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38661) : cljs.core.deref.call(null,G__38661));
})();
var val = (function (){var G__38662 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__38662) : f.call(null,G__38662));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$10)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__38663 = result;
var G__38664 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__38663,G__38664) : rf.call(null,G__38663,G__38664));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__38667 = function(result,input){
switch(arguments.length){
case 0:
return G__38667__0.call(this);
case 1:
return G__38667__1.call(this,result);
case 2:
return G__38667__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38667.cljs$core$IFn$_invoke$arity$0 = G__38667__0;
G__38667.cljs$core$IFn$_invoke$arity$1 = G__38667__1;
G__38667.cljs$core$IFn$_invoke$arity$2 = G__38667__2;
return G__38667;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__38665 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__38665) : f.call(null,G__38665));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__38646_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__38666 = p1__38646_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__38666) : f.call(null,G__38666));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__38676 = init;
var G__38677 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38676,G__38677) : f.call(null,G__38676,G__38677));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__38772 = null;
var G__38772__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__38772__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__38730 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__38730) : f.call(null,G__38730));
})()],null));
});
var G__38772__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__38731 = x;
var G__38732 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38731,G__38732) : f.call(null,G__38731,G__38732));
})()],null));
});
var G__38772__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__38733 = x;
var G__38734 = y;
var G__38735 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__38733,G__38734,G__38735) : f.call(null,G__38733,G__38734,G__38735));
})()],null));
});
var G__38772__4 = (function() { 
var G__38773__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__38773 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__38774__i = 0, G__38774__a = new Array(arguments.length -  3);
while (G__38774__i < G__38774__a.length) {G__38774__a[G__38774__i] = arguments[G__38774__i + 3]; ++G__38774__i;}
  args = new cljs.core.IndexedSeq(G__38774__a,0);
} 
return G__38773__delegate.call(this,x,y,z,args);};
G__38773.cljs$lang$maxFixedArity = 3;
G__38773.cljs$lang$applyTo = (function (arglist__38775){
var x = cljs.core.first(arglist__38775);
arglist__38775 = cljs.core.next(arglist__38775);
var y = cljs.core.first(arglist__38775);
arglist__38775 = cljs.core.next(arglist__38775);
var z = cljs.core.first(arglist__38775);
var args = cljs.core.rest(arglist__38775);
return G__38773__delegate(x,y,z,args);
});
G__38773.cljs$core$IFn$_invoke$arity$variadic = G__38773__delegate;
return G__38773;
})()
;
G__38772 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__38772__0.call(this);
case 1:
return G__38772__1.call(this,x);
case 2:
return G__38772__2.call(this,x,y);
case 3:
return G__38772__3.call(this,x,y,z);
default:
var G__38776 = null;
if (arguments.length > 3) {
var G__38777__i = 0, G__38777__a = new Array(arguments.length -  3);
while (G__38777__i < G__38777__a.length) {G__38777__a[G__38777__i] = arguments[G__38777__i + 3]; ++G__38777__i;}
G__38776 = new cljs.core.IndexedSeq(G__38777__a,0);
}
return G__38772__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__38776);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38772.cljs$lang$maxFixedArity = 3;
G__38772.cljs$lang$applyTo = G__38772__4.cljs$lang$applyTo;
G__38772.cljs$core$IFn$_invoke$arity$0 = G__38772__0;
G__38772.cljs$core$IFn$_invoke$arity$1 = G__38772__1;
G__38772.cljs$core$IFn$_invoke$arity$2 = G__38772__2;
G__38772.cljs$core$IFn$_invoke$arity$3 = G__38772__3;
G__38772.cljs$core$IFn$_invoke$arity$variadic = G__38772__4.cljs$core$IFn$_invoke$arity$variadic;
return G__38772;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__38778 = null;
var G__38778__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__38778__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__38736 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__38736) : f.call(null,G__38736));
})(),(function (){var G__38737 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__38737) : g.call(null,G__38737));
})()],null));
});
var G__38778__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__38738 = x;
var G__38739 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38738,G__38739) : f.call(null,G__38738,G__38739));
})(),(function (){var G__38740 = x;
var G__38741 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__38740,G__38741) : g.call(null,G__38740,G__38741));
})()],null));
});
var G__38778__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__38742 = x;
var G__38743 = y;
var G__38744 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__38742,G__38743,G__38744) : f.call(null,G__38742,G__38743,G__38744));
})(),(function (){var G__38745 = x;
var G__38746 = y;
var G__38747 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__38745,G__38746,G__38747) : g.call(null,G__38745,G__38746,G__38747));
})()],null));
});
var G__38778__4 = (function() { 
var G__38779__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__38779 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__38780__i = 0, G__38780__a = new Array(arguments.length -  3);
while (G__38780__i < G__38780__a.length) {G__38780__a[G__38780__i] = arguments[G__38780__i + 3]; ++G__38780__i;}
  args = new cljs.core.IndexedSeq(G__38780__a,0);
} 
return G__38779__delegate.call(this,x,y,z,args);};
G__38779.cljs$lang$maxFixedArity = 3;
G__38779.cljs$lang$applyTo = (function (arglist__38781){
var x = cljs.core.first(arglist__38781);
arglist__38781 = cljs.core.next(arglist__38781);
var y = cljs.core.first(arglist__38781);
arglist__38781 = cljs.core.next(arglist__38781);
var z = cljs.core.first(arglist__38781);
var args = cljs.core.rest(arglist__38781);
return G__38779__delegate(x,y,z,args);
});
G__38779.cljs$core$IFn$_invoke$arity$variadic = G__38779__delegate;
return G__38779;
})()
;
G__38778 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__38778__0.call(this);
case 1:
return G__38778__1.call(this,x);
case 2:
return G__38778__2.call(this,x,y);
case 3:
return G__38778__3.call(this,x,y,z);
default:
var G__38782 = null;
if (arguments.length > 3) {
var G__38783__i = 0, G__38783__a = new Array(arguments.length -  3);
while (G__38783__i < G__38783__a.length) {G__38783__a[G__38783__i] = arguments[G__38783__i + 3]; ++G__38783__i;}
G__38782 = new cljs.core.IndexedSeq(G__38783__a,0);
}
return G__38778__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__38782);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38778.cljs$lang$maxFixedArity = 3;
G__38778.cljs$lang$applyTo = G__38778__4.cljs$lang$applyTo;
G__38778.cljs$core$IFn$_invoke$arity$0 = G__38778__0;
G__38778.cljs$core$IFn$_invoke$arity$1 = G__38778__1;
G__38778.cljs$core$IFn$_invoke$arity$2 = G__38778__2;
G__38778.cljs$core$IFn$_invoke$arity$3 = G__38778__3;
G__38778.cljs$core$IFn$_invoke$arity$variadic = G__38778__4.cljs$core$IFn$_invoke$arity$variadic;
return G__38778;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__38784 = null;
var G__38784__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__38784__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__38748 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__38748) : f.call(null,G__38748));
})(),(function (){var G__38749 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__38749) : g.call(null,G__38749));
})(),(function (){var G__38750 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__38750) : h.call(null,G__38750));
})()],null));
});
var G__38784__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__38751 = x;
var G__38752 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__38751,G__38752) : f.call(null,G__38751,G__38752));
})(),(function (){var G__38753 = x;
var G__38754 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__38753,G__38754) : g.call(null,G__38753,G__38754));
})(),(function (){var G__38755 = x;
var G__38756 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__38755,G__38756) : h.call(null,G__38755,G__38756));
})()],null));
});
var G__38784__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__38757 = x;
var G__38758 = y;
var G__38759 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__38757,G__38758,G__38759) : f.call(null,G__38757,G__38758,G__38759));
})(),(function (){var G__38760 = x;
var G__38761 = y;
var G__38762 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__38760,G__38761,G__38762) : g.call(null,G__38760,G__38761,G__38762));
})(),(function (){var G__38763 = x;
var G__38764 = y;
var G__38765 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__38763,G__38764,G__38765) : h.call(null,G__38763,G__38764,G__38765));
})()],null));
});
var G__38784__4 = (function() { 
var G__38785__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__38785 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__38786__i = 0, G__38786__a = new Array(arguments.length -  3);
while (G__38786__i < G__38786__a.length) {G__38786__a[G__38786__i] = arguments[G__38786__i + 3]; ++G__38786__i;}
  args = new cljs.core.IndexedSeq(G__38786__a,0);
} 
return G__38785__delegate.call(this,x,y,z,args);};
G__38785.cljs$lang$maxFixedArity = 3;
G__38785.cljs$lang$applyTo = (function (arglist__38787){
var x = cljs.core.first(arglist__38787);
arglist__38787 = cljs.core.next(arglist__38787);
var y = cljs.core.first(arglist__38787);
arglist__38787 = cljs.core.next(arglist__38787);
var z = cljs.core.first(arglist__38787);
var args = cljs.core.rest(arglist__38787);
return G__38785__delegate(x,y,z,args);
});
G__38785.cljs$core$IFn$_invoke$arity$variadic = G__38785__delegate;
return G__38785;
})()
;
G__38784 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__38784__0.call(this);
case 1:
return G__38784__1.call(this,x);
case 2:
return G__38784__2.call(this,x,y);
case 3:
return G__38784__3.call(this,x,y,z);
default:
var G__38788 = null;
if (arguments.length > 3) {
var G__38789__i = 0, G__38789__a = new Array(arguments.length -  3);
while (G__38789__i < G__38789__a.length) {G__38789__a[G__38789__i] = arguments[G__38789__i + 3]; ++G__38789__i;}
G__38788 = new cljs.core.IndexedSeq(G__38789__a,0);
}
return G__38784__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__38788);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38784.cljs$lang$maxFixedArity = 3;
G__38784.cljs$lang$applyTo = G__38784__4.cljs$lang$applyTo;
G__38784.cljs$core$IFn$_invoke$arity$0 = G__38784__0;
G__38784.cljs$core$IFn$_invoke$arity$1 = G__38784__1;
G__38784.cljs$core$IFn$_invoke$arity$2 = G__38784__2;
G__38784.cljs$core$IFn$_invoke$arity$3 = G__38784__3;
G__38784.cljs$core$IFn$_invoke$arity$variadic = G__38784__4.cljs$core$IFn$_invoke$arity$variadic;
return G__38784;
})()
});
var juxt__4 = (function() { 
var G__38790__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__38791 = null;
var G__38791__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__38678_SHARP_,p2__38679_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__38678_SHARP_,(function (){return (p2__38679_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__38679_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__38679_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__38791__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__38680_SHARP_,p2__38681_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__38680_SHARP_,(function (){var G__38766 = x;
return (p2__38681_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__38681_SHARP_.cljs$core$IFn$_invoke$arity$1(G__38766) : p2__38681_SHARP_.call(null,G__38766));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__38791__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__38682_SHARP_,p2__38683_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__38682_SHARP_,(function (){var G__38767 = x;
var G__38768 = y;
return (p2__38683_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__38683_SHARP_.cljs$core$IFn$_invoke$arity$2(G__38767,G__38768) : p2__38683_SHARP_.call(null,G__38767,G__38768));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__38791__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__38684_SHARP_,p2__38685_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__38684_SHARP_,(function (){var G__38769 = x;
var G__38770 = y;
var G__38771 = z;
return (p2__38685_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__38685_SHARP_.cljs$core$IFn$_invoke$arity$3(G__38769,G__38770,G__38771) : p2__38685_SHARP_.call(null,G__38769,G__38770,G__38771));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__38791__4 = (function() { 
var G__38792__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__38686_SHARP_,p2__38687_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__38686_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__38687_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__38792 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__38793__i = 0, G__38793__a = new Array(arguments.length -  3);
while (G__38793__i < G__38793__a.length) {G__38793__a[G__38793__i] = arguments[G__38793__i + 3]; ++G__38793__i;}
  args = new cljs.core.IndexedSeq(G__38793__a,0);
} 
return G__38792__delegate.call(this,x,y,z,args);};
G__38792.cljs$lang$maxFixedArity = 3;
G__38792.cljs$lang$applyTo = (function (arglist__38794){
var x = cljs.core.first(arglist__38794);
arglist__38794 = cljs.core.next(arglist__38794);
var y = cljs.core.first(arglist__38794);
arglist__38794 = cljs.core.next(arglist__38794);
var z = cljs.core.first(arglist__38794);
var args = cljs.core.rest(arglist__38794);
return G__38792__delegate(x,y,z,args);
});
G__38792.cljs$core$IFn$_invoke$arity$variadic = G__38792__delegate;
return G__38792;
})()
;
G__38791 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__38791__0.call(this);
case 1:
return G__38791__1.call(this,x);
case 2:
return G__38791__2.call(this,x,y);
case 3:
return G__38791__3.call(this,x,y,z);
default:
var G__38795 = null;
if (arguments.length > 3) {
var G__38796__i = 0, G__38796__a = new Array(arguments.length -  3);
while (G__38796__i < G__38796__a.length) {G__38796__a[G__38796__i] = arguments[G__38796__i + 3]; ++G__38796__i;}
G__38795 = new cljs.core.IndexedSeq(G__38796__a,0);
}
return G__38791__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__38795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38791.cljs$lang$maxFixedArity = 3;
G__38791.cljs$lang$applyTo = G__38791__4.cljs$lang$applyTo;
G__38791.cljs$core$IFn$_invoke$arity$0 = G__38791__0;
G__38791.cljs$core$IFn$_invoke$arity$1 = G__38791__1;
G__38791.cljs$core$IFn$_invoke$arity$2 = G__38791__2;
G__38791.cljs$core$IFn$_invoke$arity$3 = G__38791__3;
G__38791.cljs$core$IFn$_invoke$arity$variadic = G__38791__4.cljs$core$IFn$_invoke$arity$variadic;
return G__38791;
})()
;})(fs__$1))
};
var G__38790 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__38797__i = 0, G__38797__a = new Array(arguments.length -  3);
while (G__38797__i < G__38797__a.length) {G__38797__a[G__38797__i] = arguments[G__38797__i + 3]; ++G__38797__i;}
  fs = new cljs.core.IndexedSeq(G__38797__a,0);
} 
return G__38790__delegate.call(this,f,g,h,fs);};
G__38790.cljs$lang$maxFixedArity = 3;
G__38790.cljs$lang$applyTo = (function (arglist__38798){
var f = cljs.core.first(arglist__38798);
arglist__38798 = cljs.core.next(arglist__38798);
var g = cljs.core.first(arglist__38798);
arglist__38798 = cljs.core.next(arglist__38798);
var h = cljs.core.first(arglist__38798);
var fs = cljs.core.rest(arglist__38798);
return G__38790__delegate(f,g,h,fs);
});
G__38790.cljs$core$IFn$_invoke$arity$variadic = G__38790__delegate;
return G__38790;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__38799 = null;
if (arguments.length > 3) {
var G__38800__i = 0, G__38800__a = new Array(arguments.length -  3);
while (G__38800__i < G__38800__a.length) {G__38800__a[G__38800__i] = arguments[G__38800__i + 3]; ++G__38800__i;}
G__38799 = new cljs.core.IndexedSeq(G__38800__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__38799);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__38801 = cljs.core.next(coll);
coll = G__38801;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__38802 = (n - (1));
var G__38803 = cljs.core.next(coll);
n = G__38802;
coll = G__38803;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__38807 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38807,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38807,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__38807,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_38815 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__23677__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__38816_38822 = cljs.core.first(coll);
var G__38817_38823 = writer;
var G__38818_38824 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__38816_38822,G__38817_38823,G__38818_38824) : print_one.call(null,G__38816_38822,G__38817_38823,G__38818_38824));
} else {
}

var coll_38825__$1 = cljs.core.next(coll);
var n_38826 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_38825__$1) && (((n_38826 == null)) || (!((n_38826 === (0)))))){
cljs.core._write(writer,sep);

var G__38819_38827 = cljs.core.first(coll_38825__$1);
var G__38820_38828 = writer;
var G__38821_38829 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__38819_38827,G__38820_38828,G__38821_38829) : print_one.call(null,G__38819_38827,G__38820_38828,G__38821_38829));

var G__38830 = cljs.core.next(coll_38825__$1);
var G__38831 = (n_38826 - (1));
coll_38825__$1 = G__38830;
n_38826 = G__38831;
continue;
} else {
if((cljs.core.seq(coll_38825__$1)) && ((n_38826 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__23677__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_38815;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__38836 = cljs.core.seq(ss);
var chunk__38837 = null;
var count__38838 = (0);
var i__38839 = (0);
while(true){
if((i__38839 < count__38838)){
var s = chunk__38837.cljs$core$IIndexed$_nth$arity$2(null,i__38839);
cljs.core._write(writer,s);

var G__38840 = seq__38836;
var G__38841 = chunk__38837;
var G__38842 = count__38838;
var G__38843 = (i__38839 + (1));
seq__38836 = G__38840;
chunk__38837 = G__38841;
count__38838 = G__38842;
i__38839 = G__38843;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__38836);
if(temp__4126__auto__){
var seq__38836__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__38836__$1)){
var c__24464__auto__ = cljs.core.chunk_first(seq__38836__$1);
var G__38844 = cljs.core.chunk_rest(seq__38836__$1);
var G__38845 = c__24464__auto__;
var G__38846 = cljs.core.count(c__24464__auto__);
var G__38847 = (0);
seq__38836 = G__38844;
chunk__38837 = G__38845;
count__38838 = G__38846;
i__38839 = G__38847;
continue;
} else {
var s = cljs.core.first(seq__38836__$1);
cljs.core._write(writer,s);

var G__38848 = cljs.core.next(seq__38836__$1);
var G__38849 = null;
var G__38850 = (0);
var G__38851 = (0);
seq__38836 = G__38848;
chunk__38837 = G__38849;
count__38838 = G__38850;
i__38839 = G__38851;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__38852__i = 0, G__38852__a = new Array(arguments.length -  1);
while (G__38852__i < G__38852__a.length) {G__38852__a[G__38852__i] = arguments[G__38852__i + 1]; ++G__38852__i;}
  ss = new cljs.core.IndexedSeq(G__38852__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__38853){
var writer = cljs.core.first(arglist__38853);
var ss = cljs.core.rest(arglist__38853);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj38855 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj38855;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__38858 = "[\\\\\"\b\f\n\r\t]";
var G__38859 = "g";
return RegExp(G__38858,G__38859);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__23665__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__23665__auto__)){
var and__23665__auto____$1 = (function (){var G__38873 = obj;
if(G__38873){
var bit__24358__auto__ = (G__38873.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24358__auto__) || (G__38873.cljs$core$IMeta$)){
return true;
} else {
if((!G__38873.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__38873);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__38873);
}
})();
if(and__23665__auto____$1){
return cljs.core.meta(obj);
} else {
return and__23665__auto____$1;
}
} else {
return and__23665__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__38874_38884 = cljs.core.meta(obj);
var G__38875_38885 = writer;
var G__38876_38886 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__38874_38884,G__38875_38885,G__38876_38886) : cljs.core.pr_writer.call(null,G__38874_38884,G__38875_38885,G__38876_38886));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__38877 = obj;
if(G__38877){
var bit__24351__auto__ = (G__38877.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24351__auto__) || (G__38877.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__38878 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__38879 = cljs.core.pr_writer;
var G__38880 = writer;
var G__38881 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__38878,G__38879,G__38880,G__38881) : cljs.core.print_map.call(null,G__38878,G__38879,G__38880,G__38881));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__38882 = obj;
return goog.isString(G__38882);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__38887 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__38887;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__38883 = obj;
if(G__38883){
var bit__24358__auto__ = (G__38883.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24358__auto__) || (G__38883.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__38883.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__38883);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__38883);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__38891 = obj;
var G__38892 = writer;
var G__38893 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$13,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__38891,G__38892,G__38893) : alt_impl.call(null,G__38891,G__38892,G__38893));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__38898 = cljs.core.seq(cljs.core.next(objs));
var chunk__38899 = null;
var count__38900 = (0);
var i__38901 = (0);
while(true){
if((i__38901 < count__38900)){
var obj = chunk__38899.cljs$core$IIndexed$_nth$arity$2(null,i__38901);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__38902 = seq__38898;
var G__38903 = chunk__38899;
var G__38904 = count__38900;
var G__38905 = (i__38901 + (1));
seq__38898 = G__38902;
chunk__38899 = G__38903;
count__38900 = G__38904;
i__38901 = G__38905;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__38898);
if(temp__4126__auto__){
var seq__38898__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__38898__$1)){
var c__24464__auto__ = cljs.core.chunk_first(seq__38898__$1);
var G__38906 = cljs.core.chunk_rest(seq__38898__$1);
var G__38907 = c__24464__auto__;
var G__38908 = cljs.core.count(c__24464__auto__);
var G__38909 = (0);
seq__38898 = G__38906;
chunk__38899 = G__38907;
count__38900 = G__38908;
i__38901 = G__38909;
continue;
} else {
var obj = cljs.core.first(seq__38898__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__38910 = cljs.core.next(seq__38898__$1);
var G__38911 = null;
var G__38912 = (0);
var G__38913 = (0);
seq__38898 = G__38910;
chunk__38899 = G__38911;
count__38900 = G__38912;
i__38901 = G__38913;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__38914__i = 0, G__38914__a = new Array(arguments.length -  0);
while (G__38914__i < G__38914__a.length) {G__38914__a[G__38914__i] = arguments[G__38914__i + 0]; ++G__38914__i;}
  objs = new cljs.core.IndexedSeq(G__38914__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__38915){
var objs = cljs.core.seq(arglist__38915);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__38916__i = 0, G__38916__a = new Array(arguments.length -  0);
while (G__38916__i < G__38916__a.length) {G__38916__a[G__38916__i] = arguments[G__38916__i + 0]; ++G__38916__i;}
  objs = new cljs.core.IndexedSeq(G__38916__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__38917){
var objs = cljs.core.seq(arglist__38917);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__38918__i = 0, G__38918__a = new Array(arguments.length -  0);
while (G__38918__i < G__38918__a.length) {G__38918__a[G__38918__i] = arguments[G__38918__i + 0]; ++G__38918__i;}
  objs = new cljs.core.IndexedSeq(G__38918__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__38919){
var objs = cljs.core.seq(arglist__38919);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__38920__i = 0, G__38920__a = new Array(arguments.length -  0);
while (G__38920__i < G__38920__a.length) {G__38920__a[G__38920__i] = arguments[G__38920__i + 0]; ++G__38920__i;}
  objs = new cljs.core.IndexedSeq(G__38920__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__38921){
var objs = cljs.core.seq(arglist__38921);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__38922__i = 0, G__38922__a = new Array(arguments.length -  0);
while (G__38922__i < G__38922__a.length) {G__38922__a[G__38922__i] = arguments[G__38922__i + 0]; ++G__38922__i;}
  objs = new cljs.core.IndexedSeq(G__38922__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__38923){
var objs = cljs.core.seq(arglist__38923);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__38924__i = 0, G__38924__a = new Array(arguments.length -  0);
while (G__38924__i < G__38924__a.length) {G__38924__a[G__38924__i] = arguments[G__38924__i + 0]; ++G__38924__i;}
  objs = new cljs.core.IndexedSeq(G__38924__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__38925){
var objs = cljs.core.seq(arglist__38925);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__38926__i = 0, G__38926__a = new Array(arguments.length -  0);
while (G__38926__i < G__38926__a.length) {G__38926__a[G__38926__i] = arguments[G__38926__i + 0]; ++G__38926__i;}
  objs = new cljs.core.IndexedSeq(G__38926__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__38927){
var objs = cljs.core.seq(arglist__38927);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__38928__i = 0, G__38928__a = new Array(arguments.length -  0);
while (G__38928__i < G__38928__a.length) {G__38928__a[G__38928__i] = arguments[G__38928__i + 0]; ++G__38928__i;}
  objs = new cljs.core.IndexedSeq(G__38928__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__38929){
var objs = cljs.core.seq(arglist__38929);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__38936_38942 = cljs.core.key(e);
var G__38937_38943 = w;
var G__38938_38944 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__38936_38942,G__38937_38943,G__38938_38944) : print_one.call(null,G__38936_38942,G__38937_38943,G__38938_38944));

cljs.core._write(w," ");

var G__38939 = cljs.core.val(e);
var G__38940 = w;
var G__38941 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__38939,G__38940,G__38941) : print_one.call(null,G__38939,G__38940,G__38941));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__38945__i = 0, G__38945__a = new Array(arguments.length -  2);
while (G__38945__i < G__38945__a.length) {G__38945__a[G__38945__i] = arguments[G__38945__i + 2]; ++G__38945__i;}
  args = new cljs.core.IndexedSeq(G__38945__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__38946){
var iref = cljs.core.first(arglist__38946);
arglist__38946 = cljs.core.next(arglist__38946);
var f = cljs.core.first(arglist__38946);
var args = cljs.core.rest(arglist__38946);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__38949 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__38949) : cljs.core.atom.call(null,G__38949));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__38951 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38951) : cljs.core.deref.call(null,G__38951));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__38952_SHARP_,p2__38953_SHARP_){
var ret = (function (){var G__38956 = p1__38952_SHARP_;
var G__38957 = p2__38953_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__38956,G__38957) : rf.call(null,G__38956,G__38957));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__38960 = null;
var G__38960__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__38960__1 = (function (result){
var G__38959 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__38959) : rf.call(null,G__38959));
});
var G__38960__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__38960 = function(result,input){
switch(arguments.length){
case 0:
return G__38960__0.call(this);
case 1:
return G__38960__1.call(this,result);
case 2:
return G__38960__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38960.cljs$core$IFn$_invoke$arity$0 = G__38960__0;
G__38960.cljs$core$IFn$_invoke$arity$1 = G__38960__1;
G__38960.cljs$core$IFn$_invoke$arity$2 = G__38960__2;
return G__38960;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (pa){
return (function() {
var G__38969 = null;
var G__38969__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__38969__1 = (function (result){
var G__38965 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__38965) : rf.call(null,G__38965));
});
var G__38969__2 = (function (result,input){
var prior = (function (){var G__38966 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__38966) : cljs.core.deref.call(null,G__38966));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__38967 = result;
var G__38968 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__38967,G__38968) : rf.call(null,G__38967,G__38968));
}
});
G__38969 = function(result,input){
switch(arguments.length){
case 0:
return G__38969__0.call(this);
case 1:
return G__38969__1.call(this,result);
case 2:
return G__38969__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__38969.cljs$core$IFn$_invoke$arity$0 = G__38969__0;
G__38969.cljs$core$IFn$_invoke$arity$1 = G__38969__1;
G__38969.cljs$core$IFn$_invoke$arity$2 = G__38969__2;
return G__38969;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__24655__auto__ = this;
return cljs.core.es6_iterator(this__24655__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__38971_SHARP_,p2__38970_SHARP_){
var G__38973 = p2__38970_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__38973) : proc.call(null,G__38973));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj38975 = {};
return obj38975;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__23665__auto__ = x;
if(and__23665__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__23665__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24321__auto__ = (((x == null))?null:x);
return (function (){var or__23677__auto__ = (cljs.core._clj__GT_js[(function (){var G__38979 = x__24321__auto__;
return goog.typeOf(G__38979);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__23665__auto__ = x;
if(and__23665__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__23665__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24321__auto__ = (((x == null))?null:x);
return (function (){var or__23677__auto__ = (cljs.core._key__GT_js[(function (){var G__38983 = x__24321__auto__;
return goog.typeOf(G__38983);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__38986 = k;
if(G__38986){
var bit__24358__auto__ = null;
if(cljs.core.truth_((function (){var or__23677__auto__ = bit__24358__auto__;
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return G__38986.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__38986.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__38986);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__38986);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__38987 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__38987) : cljs.core.clj__GT_js.call(null,G__38987));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__39003 = x;
if(G__39003){
var bit__24358__auto__ = null;
if(cljs.core.truth_((function (){var or__23677__auto__ = bit__24358__auto__;
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return G__39003.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__39003.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__39003);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__39003);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj39005 = {};
return obj39005;
})();
var seq__39006_39016 = cljs.core.seq(x);
var chunk__39007_39017 = null;
var count__39008_39018 = (0);
var i__39009_39019 = (0);
while(true){
if((i__39009_39019 < count__39008_39018)){
var vec__39010_39020 = chunk__39007_39017.cljs$core$IIndexed$_nth$arity$2(null,i__39009_39019);
var k_39021 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39010_39020,(0),null);
var v_39022 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39010_39020,(1),null);
(m[cljs.core.key__GT_js(k_39021)] = clj__GT_js(v_39022));

var G__39023 = seq__39006_39016;
var G__39024 = chunk__39007_39017;
var G__39025 = count__39008_39018;
var G__39026 = (i__39009_39019 + (1));
seq__39006_39016 = G__39023;
chunk__39007_39017 = G__39024;
count__39008_39018 = G__39025;
i__39009_39019 = G__39026;
continue;
} else {
var temp__4126__auto___39027 = cljs.core.seq(seq__39006_39016);
if(temp__4126__auto___39027){
var seq__39006_39028__$1 = temp__4126__auto___39027;
if(cljs.core.chunked_seq_QMARK_(seq__39006_39028__$1)){
var c__24464__auto___39029 = cljs.core.chunk_first(seq__39006_39028__$1);
var G__39030 = cljs.core.chunk_rest(seq__39006_39028__$1);
var G__39031 = c__24464__auto___39029;
var G__39032 = cljs.core.count(c__24464__auto___39029);
var G__39033 = (0);
seq__39006_39016 = G__39030;
chunk__39007_39017 = G__39031;
count__39008_39018 = G__39032;
i__39009_39019 = G__39033;
continue;
} else {
var vec__39011_39034 = cljs.core.first(seq__39006_39028__$1);
var k_39035 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39011_39034,(0),null);
var v_39036 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39011_39034,(1),null);
(m[cljs.core.key__GT_js(k_39035)] = clj__GT_js(v_39036));

var G__39037 = cljs.core.next(seq__39006_39028__$1);
var G__39038 = null;
var G__39039 = (0);
var G__39040 = (0);
seq__39006_39016 = G__39037;
chunk__39007_39017 = G__39038;
count__39008_39018 = G__39039;
i__39009_39019 = G__39040;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__39012_39041 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__39013_39042 = null;
var count__39014_39043 = (0);
var i__39015_39044 = (0);
while(true){
if((i__39015_39044 < count__39014_39043)){
var x_39045__$1 = chunk__39013_39042.cljs$core$IIndexed$_nth$arity$2(null,i__39015_39044);
arr.push(x_39045__$1);

var G__39046 = seq__39012_39041;
var G__39047 = chunk__39013_39042;
var G__39048 = count__39014_39043;
var G__39049 = (i__39015_39044 + (1));
seq__39012_39041 = G__39046;
chunk__39013_39042 = G__39047;
count__39014_39043 = G__39048;
i__39015_39044 = G__39049;
continue;
} else {
var temp__4126__auto___39050 = cljs.core.seq(seq__39012_39041);
if(temp__4126__auto___39050){
var seq__39012_39051__$1 = temp__4126__auto___39050;
if(cljs.core.chunked_seq_QMARK_(seq__39012_39051__$1)){
var c__24464__auto___39052 = cljs.core.chunk_first(seq__39012_39051__$1);
var G__39053 = cljs.core.chunk_rest(seq__39012_39051__$1);
var G__39054 = c__24464__auto___39052;
var G__39055 = cljs.core.count(c__24464__auto___39052);
var G__39056 = (0);
seq__39012_39041 = G__39053;
chunk__39013_39042 = G__39054;
count__39014_39043 = G__39055;
i__39015_39044 = G__39056;
continue;
} else {
var x_39057__$1 = cljs.core.first(seq__39012_39051__$1);
arr.push(x_39057__$1);

var G__39058 = cljs.core.next(seq__39012_39051__$1);
var G__39059 = null;
var G__39060 = (0);
var G__39061 = (0);
seq__39012_39041 = G__39058;
chunk__39013_39042 = G__39059;
count__39014_39043 = G__39060;
i__39015_39044 = G__39061;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj39063 = {};
return obj39063;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__23665__auto__ = x;
if(and__23665__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__23665__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24321__auto__ = (((x == null))?null:x);
return (function (){var or__23677__auto__ = (cljs.core._js__GT_clj[(function (){var G__39067 = x__24321__auto__;
return goog.typeOf(G__39067);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$14,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__39124__delegate = function (x,opts){
var map__39097 = opts;
var map__39097__$1 = ((cljs.core.seq_QMARK_(map__39097))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__39097):map__39097);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__39097__$1,cljs.core.constant$keyword$14);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__39097,map__39097__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__39113 = x__$1;
if(G__39113){
var bit__24358__auto__ = null;
if(cljs.core.truth_((function (){var or__23677__auto__ = bit__24358__auto__;
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return G__39113.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__39113.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__39113);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__39113);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__24433__auto__ = ((function (map__39097,map__39097__$1,keywordize_keys,keyfn){
return (function iter__39114(s__39115){
return (new cljs.core.LazySeq(null,((function (map__39097,map__39097__$1,keywordize_keys,keyfn){
return (function (){
var s__39115__$1 = s__39115;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__39115__$1);
if(temp__4126__auto__){
var s__39115__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__39115__$2)){
var c__24431__auto__ = cljs.core.chunk_first(s__39115__$2);
var size__24432__auto__ = cljs.core.count(c__24431__auto__);
var b__39117 = cljs.core.chunk_buffer(size__24432__auto__);
if((function (){var i__39116 = (0);
while(true){
if((i__39116 < size__24432__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__24431__auto__,i__39116);
cljs.core.chunk_append(b__39117,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__39122 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__39122) : keyfn.call(null,G__39122));
})(),thisfn((x__$1[k]))], null));

var G__39125 = (i__39116 + (1));
i__39116 = G__39125;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__39117),iter__39114(cljs.core.chunk_rest(s__39115__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__39117),null);
}
} else {
var k = cljs.core.first(s__39115__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__39123 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__39123) : keyfn.call(null,G__39123));
})(),thisfn((x__$1[k]))], null),iter__39114(cljs.core.rest(s__39115__$2)));
}
} else {
return null;
}
break;
}
});})(map__39097,map__39097__$1,keywordize_keys,keyfn))
,null,null));
});})(map__39097,map__39097__$1,keywordize_keys,keyfn))
;
return iter__24433__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__39097,map__39097__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__39124 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__39126__i = 0, G__39126__a = new Array(arguments.length -  1);
while (G__39126__i < G__39126__a.length) {G__39126__a[G__39126__i] = arguments[G__39126__i + 1]; ++G__39126__i;}
  opts = new cljs.core.IndexedSeq(G__39126__a,0);
} 
return G__39124__delegate.call(this,x,opts);};
G__39124.cljs$lang$maxFixedArity = 1;
G__39124.cljs$lang$applyTo = (function (arglist__39127){
var x = cljs.core.first(arglist__39127);
var opts = cljs.core.rest(arglist__39127);
return G__39124__delegate(x,opts);
});
G__39124.cljs$core$IFn$_invoke$arity$variadic = G__39124__delegate;
return G__39124;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__39128 = null;
if (arguments.length > 1) {
var G__39129__i = 0, G__39129__a = new Array(arguments.length -  1);
while (G__39129__i < G__39129__a.length) {G__39129__a[G__39129__i] = arguments[G__39129__i + 1]; ++G__39129__i;}
G__39128 = new cljs.core.IndexedSeq(G__39129__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__39128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__39132 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__39132) : cljs.core.atom.call(null,G__39132));
})();
return ((function (mem){
return (function() { 
var G__39134__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__39133 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39133) : cljs.core.deref.call(null,G__39133));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__39134 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__39135__i = 0, G__39135__a = new Array(arguments.length -  0);
while (G__39135__i < G__39135__a.length) {G__39135__a[G__39135__i] = arguments[G__39135__i + 0]; ++G__39135__i;}
  args = new cljs.core.IndexedSeq(G__39135__a,0);
} 
return G__39134__delegate.call(this,args);};
G__39134.cljs$lang$maxFixedArity = 0;
G__39134.cljs$lang$applyTo = (function (arglist__39136){
var args = cljs.core.seq(arglist__39136);
return G__39134__delegate(args);
});
G__39134.cljs$core$IFn$_invoke$arity$variadic = G__39134__delegate;
return G__39134;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__39138 = ret;
f = G__39138;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__39139__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__39139 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__39140__i = 0, G__39140__a = new Array(arguments.length -  1);
while (G__39140__i < G__39140__a.length) {G__39140__a[G__39140__i] = arguments[G__39140__i + 1]; ++G__39140__i;}
  args = new cljs.core.IndexedSeq(G__39140__a,0);
} 
return G__39139__delegate.call(this,f,args);};
G__39139.cljs$lang$maxFixedArity = 1;
G__39139.cljs$lang$applyTo = (function (arglist__39141){
var f = cljs.core.first(arglist__39141);
var args = cljs.core.rest(arglist__39141);
return G__39139__delegate(f,args);
});
G__39139.cljs$core$IFn$_invoke$arity$variadic = G__39139__delegate;
return G__39139;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__39142 = null;
if (arguments.length > 1) {
var G__39143__i = 0, G__39143__a = new Array(arguments.length -  1);
while (G__39143__i < G__39143__a.length) {G__39143__a[G__39143__i] = arguments[G__39143__i + 1]; ++G__39143__i;}
G__39142 = new cljs.core.IndexedSeq(G__39143__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__39142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__39146 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__39146) : Math.floor.call(null,G__39146));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__39148 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__39148) : f.call(null,G__39148));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$16,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__39150 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__39150) : cljs.core.atom.call(null,G__39150));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__39151__i = 0, G__39151__a = new Array(arguments.length -  1);
while (G__39151__i < G__39151__a.length) {G__39151__a[G__39151__i] = arguments[G__39151__i + 1]; ++G__39151__i;}
  args = new cljs.core.IndexedSeq(G__39151__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__39152){
var f = cljs.core.first(arglist__39152);
var args = cljs.core.rest(arglist__39152);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__39217 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39217) : cljs.core.deref.call(null,G__39217));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__23677__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
var and__23665__auto__ = cljs.core.vector_QMARK_(parent);
if(and__23665__auto__){
var and__23665__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__23665__auto____$1){
var and__23665__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__23665__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__39242 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__39240 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__39240) : child.call(null,G__39240));
})(),(function (){var G__39241 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__39241) : parent.call(null,G__39241));
})());
var G__39243 = (i + (1));
ret = G__39242;
i = G__39243;
continue;
}
break;
}
} else {
return and__23665__auto____$2;
}
} else {
return and__23665__auto____$1;
}
} else {
return and__23665__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__39247 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39247) : cljs.core.deref.call(null,G__39247));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__39251 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39251) : cljs.core.deref.call(null,G__39251));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__39255 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39255) : cljs.core.deref.call(null,G__39255));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__39264 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__39264) : targets.call(null,G__39264));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__39265 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__39265) : sources.call(null,G__39265));
})()));
});})(tp,td,ta))
;
var or__23677__auto__ = ((cljs.core.contains_QMARK_((function (){var G__39269 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__39269) : tp.call(null,G__39269));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__39270 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__39270) : ta.call(null,G__39270));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__39271 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__39271) : ta.call(null,G__39271));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$17,tf(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$16,tf(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__39278 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__39278) : parentMap.call(null,G__39278));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__39279 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__39279) : parentMap.call(null,G__39279));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__39272_SHARP_){
return cljs.core.cons(cljs.core.first(p1__39272_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__39272_SHARP_),cljs.core.second(p1__39272_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__39280 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__39280) : parentMap.call(null,G__39280));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__39273_SHARP_,p2__39274_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__39273_SHARP_,p2__39274_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__39283 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39283) : cljs.core.deref.call(null,G__39283));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__39284 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39284) : cljs.core.deref.call(null,G__39284));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__39300 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39300) : cljs.core.deref.call(null,G__39300));
})().call(null,x);
var or__23677__auto__ = (cljs.core.truth_((function (){var and__23665__auto__ = xprefs;
if(cljs.core.truth_(and__23665__auto__)){
var G__39302 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__39302) : xprefs.call(null,G__39302));
} else {
return and__23665__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__39303 = cljs.core.rest(ps);
ps = G__39303;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__23677__auto____$1)){
return or__23677__auto____$1;
} else {
var or__23677__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__39304 = cljs.core.rest(ps);
ps = G__39304;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__23677__auto____$2)){
return or__23677__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__23677__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__23677__auto__)){
return or__23677__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__39318){
var vec__39319 = p__39318;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39319,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__39319,(1),null);
var e = vec__39319;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__39320 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39320) : cljs.core.deref.call(null,G__39320));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__23677__auto__ = (be == null);
if(or__23677__auto__){
return or__23677__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__39321 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39321) : cljs.core.deref.call(null,G__39321));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__39322 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39322) : cljs.core.deref.call(null,G__39322));
})(),(function (){var G__39323 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39323) : cljs.core.deref.call(null,G__39323));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj39325 = {};
return obj39325;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__23665__auto__ = mf;
if(and__23665__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__23665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24321__auto__ = (((mf == null))?null:mf);
return (function (){var or__23677__auto__ = (cljs.core._reset[(function (){var G__39329 = x__24321__auto__;
return goog.typeOf(G__39329);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._reset["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__23665__auto__ = mf;
if(and__23665__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__23665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24321__auto__ = (((mf == null))?null:mf);
return (function (){var or__23677__auto__ = (cljs.core._add_method[(function (){var G__39333 = x__24321__auto__;
return goog.typeOf(G__39333);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._add_method["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__23665__auto__ = mf;
if(and__23665__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__23665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24321__auto__ = (((mf == null))?null:mf);
return (function (){var or__23677__auto__ = (cljs.core._remove_method[(function (){var G__39337 = x__24321__auto__;
return goog.typeOf(G__39337);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._remove_method["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__23665__auto__ = mf;
if(and__23665__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__23665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24321__auto__ = (((mf == null))?null:mf);
return (function (){var or__23677__auto__ = (cljs.core._prefer_method[(function (){var G__39341 = x__24321__auto__;
return goog.typeOf(G__39341);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__23665__auto__ = mf;
if(and__23665__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__23665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24321__auto__ = (((mf == null))?null:mf);
return (function (){var or__23677__auto__ = (cljs.core._get_method[(function (){var G__39345 = x__24321__auto__;
return goog.typeOf(G__39345);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._get_method["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__23665__auto__ = mf;
if(and__23665__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__23665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24321__auto__ = (((mf == null))?null:mf);
return (function (){var or__23677__auto__ = (cljs.core._methods[(function (){var G__39349 = x__24321__auto__;
return goog.typeOf(G__39349);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._methods["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__23665__auto__ = mf;
if(and__23665__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__23665__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24321__auto__ = (((mf == null))?null:mf);
return (function (){var or__23677__auto__ = (cljs.core._prefers[(function (){var G__39353 = x__24321__auto__;
return goog.typeOf(G__39353);
})()]);
if(or__23677__auto__){
return or__23677__auto__;
} else {
var or__23677__auto____$1 = (cljs.core._prefers["_"]);
if(or__23677__auto____$1){
return or__23677__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__39355 = this$__$1;
return goog.getUid(G__39355);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__39356 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39356) : cljs.core.deref.call(null,G__39356));
})(),(function (){var G__39357 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39357) : cljs.core.deref.call(null,G__39357));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__39358 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39358) : cljs.core.deref.call(null,G__39358));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__39359 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39359) : cljs.core.deref.call(null,G__39359));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__39360 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39360) : cljs.core.deref.call(null,G__39360));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__39361 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__39361) : cljs.core.deref.call(null,G__39361));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__40202 = null;
var G__40202__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__40202__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39362 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__39362) : self__.dispatch_fn.call(null,G__39362));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39363 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__39363) : target_fn.call(null,G__39363));
});
var G__40202__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39364 = a;
var G__39365 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__39364,G__39365) : self__.dispatch_fn.call(null,G__39364,G__39365));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39366 = a;
var G__39367 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__39366,G__39367) : target_fn.call(null,G__39366,G__39367));
});
var G__40202__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39368 = a;
var G__39369 = b;
var G__39370 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__39368,G__39369,G__39370) : self__.dispatch_fn.call(null,G__39368,G__39369,G__39370));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39371 = a;
var G__39372 = b;
var G__39373 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__39371,G__39372,G__39373) : target_fn.call(null,G__39371,G__39372,G__39373));
});
var G__40202__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39374 = a;
var G__39375 = b;
var G__39376 = c;
var G__39377 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__39374,G__39375,G__39376,G__39377) : self__.dispatch_fn.call(null,G__39374,G__39375,G__39376,G__39377));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39378 = a;
var G__39379 = b;
var G__39380 = c;
var G__39381 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__39378,G__39379,G__39380,G__39381) : target_fn.call(null,G__39378,G__39379,G__39380,G__39381));
});
var G__40202__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39382 = a;
var G__39383 = b;
var G__39384 = c;
var G__39385 = d;
var G__39386 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__39382,G__39383,G__39384,G__39385,G__39386) : self__.dispatch_fn.call(null,G__39382,G__39383,G__39384,G__39385,G__39386));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39387 = a;
var G__39388 = b;
var G__39389 = c;
var G__39390 = d;
var G__39391 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__39387,G__39388,G__39389,G__39390,G__39391) : target_fn.call(null,G__39387,G__39388,G__39389,G__39390,G__39391));
});
var G__40202__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39392 = a;
var G__39393 = b;
var G__39394 = c;
var G__39395 = d;
var G__39396 = e;
var G__39397 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__39392,G__39393,G__39394,G__39395,G__39396,G__39397) : self__.dispatch_fn.call(null,G__39392,G__39393,G__39394,G__39395,G__39396,G__39397));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39398 = a;
var G__39399 = b;
var G__39400 = c;
var G__39401 = d;
var G__39402 = e;
var G__39403 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__39398,G__39399,G__39400,G__39401,G__39402,G__39403) : target_fn.call(null,G__39398,G__39399,G__39400,G__39401,G__39402,G__39403));
});
var G__40202__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39404 = a;
var G__39405 = b;
var G__39406 = c;
var G__39407 = d;
var G__39408 = e;
var G__39409 = f;
var G__39410 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__39404,G__39405,G__39406,G__39407,G__39408,G__39409,G__39410) : self__.dispatch_fn.call(null,G__39404,G__39405,G__39406,G__39407,G__39408,G__39409,G__39410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39411 = a;
var G__39412 = b;
var G__39413 = c;
var G__39414 = d;
var G__39415 = e;
var G__39416 = f;
var G__39417 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__39411,G__39412,G__39413,G__39414,G__39415,G__39416,G__39417) : target_fn.call(null,G__39411,G__39412,G__39413,G__39414,G__39415,G__39416,G__39417));
});
var G__40202__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39418 = a;
var G__39419 = b;
var G__39420 = c;
var G__39421 = d;
var G__39422 = e;
var G__39423 = f;
var G__39424 = g;
var G__39425 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__39418,G__39419,G__39420,G__39421,G__39422,G__39423,G__39424,G__39425) : self__.dispatch_fn.call(null,G__39418,G__39419,G__39420,G__39421,G__39422,G__39423,G__39424,G__39425));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39426 = a;
var G__39427 = b;
var G__39428 = c;
var G__39429 = d;
var G__39430 = e;
var G__39431 = f;
var G__39432 = g;
var G__39433 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__39426,G__39427,G__39428,G__39429,G__39430,G__39431,G__39432,G__39433) : target_fn.call(null,G__39426,G__39427,G__39428,G__39429,G__39430,G__39431,G__39432,G__39433));
});
var G__40202__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39434 = a;
var G__39435 = b;
var G__39436 = c;
var G__39437 = d;
var G__39438 = e;
var G__39439 = f;
var G__39440 = g;
var G__39441 = h;
var G__39442 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__39434,G__39435,G__39436,G__39437,G__39438,G__39439,G__39440,G__39441,G__39442) : self__.dispatch_fn.call(null,G__39434,G__39435,G__39436,G__39437,G__39438,G__39439,G__39440,G__39441,G__39442));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39443 = a;
var G__39444 = b;
var G__39445 = c;
var G__39446 = d;
var G__39447 = e;
var G__39448 = f;
var G__39449 = g;
var G__39450 = h;
var G__39451 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__39443,G__39444,G__39445,G__39446,G__39447,G__39448,G__39449,G__39450,G__39451) : target_fn.call(null,G__39443,G__39444,G__39445,G__39446,G__39447,G__39448,G__39449,G__39450,G__39451));
});
var G__40202__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39452 = a;
var G__39453 = b;
var G__39454 = c;
var G__39455 = d;
var G__39456 = e;
var G__39457 = f;
var G__39458 = g;
var G__39459 = h;
var G__39460 = i;
var G__39461 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__39452,G__39453,G__39454,G__39455,G__39456,G__39457,G__39458,G__39459,G__39460,G__39461) : self__.dispatch_fn.call(null,G__39452,G__39453,G__39454,G__39455,G__39456,G__39457,G__39458,G__39459,G__39460,G__39461));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39462 = a;
var G__39463 = b;
var G__39464 = c;
var G__39465 = d;
var G__39466 = e;
var G__39467 = f;
var G__39468 = g;
var G__39469 = h;
var G__39470 = i;
var G__39471 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__39462,G__39463,G__39464,G__39465,G__39466,G__39467,G__39468,G__39469,G__39470,G__39471) : target_fn.call(null,G__39462,G__39463,G__39464,G__39465,G__39466,G__39467,G__39468,G__39469,G__39470,G__39471));
});
var G__40202__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39472 = a;
var G__39473 = b;
var G__39474 = c;
var G__39475 = d;
var G__39476 = e;
var G__39477 = f;
var G__39478 = g;
var G__39479 = h;
var G__39480 = i;
var G__39481 = j;
var G__39482 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__39472,G__39473,G__39474,G__39475,G__39476,G__39477,G__39478,G__39479,G__39480,G__39481,G__39482) : self__.dispatch_fn.call(null,G__39472,G__39473,G__39474,G__39475,G__39476,G__39477,G__39478,G__39479,G__39480,G__39481,G__39482));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39483 = a;
var G__39484 = b;
var G__39485 = c;
var G__39486 = d;
var G__39487 = e;
var G__39488 = f;
var G__39489 = g;
var G__39490 = h;
var G__39491 = i;
var G__39492 = j;
var G__39493 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__39483,G__39484,G__39485,G__39486,G__39487,G__39488,G__39489,G__39490,G__39491,G__39492,G__39493) : target_fn.call(null,G__39483,G__39484,G__39485,G__39486,G__39487,G__39488,G__39489,G__39490,G__39491,G__39492,G__39493));
});
var G__40202__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39494 = a;
var G__39495 = b;
var G__39496 = c;
var G__39497 = d;
var G__39498 = e;
var G__39499 = f;
var G__39500 = g;
var G__39501 = h;
var G__39502 = i;
var G__39503 = j;
var G__39504 = k;
var G__39505 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__39494,G__39495,G__39496,G__39497,G__39498,G__39499,G__39500,G__39501,G__39502,G__39503,G__39504,G__39505) : self__.dispatch_fn.call(null,G__39494,G__39495,G__39496,G__39497,G__39498,G__39499,G__39500,G__39501,G__39502,G__39503,G__39504,G__39505));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39506 = a;
var G__39507 = b;
var G__39508 = c;
var G__39509 = d;
var G__39510 = e;
var G__39511 = f;
var G__39512 = g;
var G__39513 = h;
var G__39514 = i;
var G__39515 = j;
var G__39516 = k;
var G__39517 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__39506,G__39507,G__39508,G__39509,G__39510,G__39511,G__39512,G__39513,G__39514,G__39515,G__39516,G__39517) : target_fn.call(null,G__39506,G__39507,G__39508,G__39509,G__39510,G__39511,G__39512,G__39513,G__39514,G__39515,G__39516,G__39517));
});
var G__40202__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39518 = a;
var G__39519 = b;
var G__39520 = c;
var G__39521 = d;
var G__39522 = e;
var G__39523 = f;
var G__39524 = g;
var G__39525 = h;
var G__39526 = i;
var G__39527 = j;
var G__39528 = k;
var G__39529 = l;
var G__39530 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__39518,G__39519,G__39520,G__39521,G__39522,G__39523,G__39524,G__39525,G__39526,G__39527,G__39528,G__39529,G__39530) : self__.dispatch_fn.call(null,G__39518,G__39519,G__39520,G__39521,G__39522,G__39523,G__39524,G__39525,G__39526,G__39527,G__39528,G__39529,G__39530));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39531 = a;
var G__39532 = b;
var G__39533 = c;
var G__39534 = d;
var G__39535 = e;
var G__39536 = f;
var G__39537 = g;
var G__39538 = h;
var G__39539 = i;
var G__39540 = j;
var G__39541 = k;
var G__39542 = l;
var G__39543 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__39531,G__39532,G__39533,G__39534,G__39535,G__39536,G__39537,G__39538,G__39539,G__39540,G__39541,G__39542,G__39543) : target_fn.call(null,G__39531,G__39532,G__39533,G__39534,G__39535,G__39536,G__39537,G__39538,G__39539,G__39540,G__39541,G__39542,G__39543));
});
var G__40202__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39544 = a;
var G__39545 = b;
var G__39546 = c;
var G__39547 = d;
var G__39548 = e;
var G__39549 = f;
var G__39550 = g;
var G__39551 = h;
var G__39552 = i;
var G__39553 = j;
var G__39554 = k;
var G__39555 = l;
var G__39556 = m;
var G__39557 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__39544,G__39545,G__39546,G__39547,G__39548,G__39549,G__39550,G__39551,G__39552,G__39553,G__39554,G__39555,G__39556,G__39557) : self__.dispatch_fn.call(null,G__39544,G__39545,G__39546,G__39547,G__39548,G__39549,G__39550,G__39551,G__39552,G__39553,G__39554,G__39555,G__39556,G__39557));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39558 = a;
var G__39559 = b;
var G__39560 = c;
var G__39561 = d;
var G__39562 = e;
var G__39563 = f;
var G__39564 = g;
var G__39565 = h;
var G__39566 = i;
var G__39567 = j;
var G__39568 = k;
var G__39569 = l;
var G__39570 = m;
var G__39571 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__39558,G__39559,G__39560,G__39561,G__39562,G__39563,G__39564,G__39565,G__39566,G__39567,G__39568,G__39569,G__39570,G__39571) : target_fn.call(null,G__39558,G__39559,G__39560,G__39561,G__39562,G__39563,G__39564,G__39565,G__39566,G__39567,G__39568,G__39569,G__39570,G__39571));
});
var G__40202__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39572 = a;
var G__39573 = b;
var G__39574 = c;
var G__39575 = d;
var G__39576 = e;
var G__39577 = f;
var G__39578 = g;
var G__39579 = h;
var G__39580 = i;
var G__39581 = j;
var G__39582 = k;
var G__39583 = l;
var G__39584 = m;
var G__39585 = n;
var G__39586 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__39572,G__39573,G__39574,G__39575,G__39576,G__39577,G__39578,G__39579,G__39580,G__39581,G__39582,G__39583,G__39584,G__39585,G__39586) : self__.dispatch_fn.call(null,G__39572,G__39573,G__39574,G__39575,G__39576,G__39577,G__39578,G__39579,G__39580,G__39581,G__39582,G__39583,G__39584,G__39585,G__39586));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39587 = a;
var G__39588 = b;
var G__39589 = c;
var G__39590 = d;
var G__39591 = e;
var G__39592 = f;
var G__39593 = g;
var G__39594 = h;
var G__39595 = i;
var G__39596 = j;
var G__39597 = k;
var G__39598 = l;
var G__39599 = m;
var G__39600 = n;
var G__39601 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__39587,G__39588,G__39589,G__39590,G__39591,G__39592,G__39593,G__39594,G__39595,G__39596,G__39597,G__39598,G__39599,G__39600,G__39601) : target_fn.call(null,G__39587,G__39588,G__39589,G__39590,G__39591,G__39592,G__39593,G__39594,G__39595,G__39596,G__39597,G__39598,G__39599,G__39600,G__39601));
});
var G__40202__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39602 = a;
var G__39603 = b;
var G__39604 = c;
var G__39605 = d;
var G__39606 = e;
var G__39607 = f;
var G__39608 = g;
var G__39609 = h;
var G__39610 = i;
var G__39611 = j;
var G__39612 = k;
var G__39613 = l;
var G__39614 = m;
var G__39615 = n;
var G__39616 = o;
var G__39617 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__39602,G__39603,G__39604,G__39605,G__39606,G__39607,G__39608,G__39609,G__39610,G__39611,G__39612,G__39613,G__39614,G__39615,G__39616,G__39617) : self__.dispatch_fn.call(null,G__39602,G__39603,G__39604,G__39605,G__39606,G__39607,G__39608,G__39609,G__39610,G__39611,G__39612,G__39613,G__39614,G__39615,G__39616,G__39617));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39618 = a;
var G__39619 = b;
var G__39620 = c;
var G__39621 = d;
var G__39622 = e;
var G__39623 = f;
var G__39624 = g;
var G__39625 = h;
var G__39626 = i;
var G__39627 = j;
var G__39628 = k;
var G__39629 = l;
var G__39630 = m;
var G__39631 = n;
var G__39632 = o;
var G__39633 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__39618,G__39619,G__39620,G__39621,G__39622,G__39623,G__39624,G__39625,G__39626,G__39627,G__39628,G__39629,G__39630,G__39631,G__39632,G__39633) : target_fn.call(null,G__39618,G__39619,G__39620,G__39621,G__39622,G__39623,G__39624,G__39625,G__39626,G__39627,G__39628,G__39629,G__39630,G__39631,G__39632,G__39633));
});
var G__40202__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39634 = a;
var G__39635 = b;
var G__39636 = c;
var G__39637 = d;
var G__39638 = e;
var G__39639 = f;
var G__39640 = g;
var G__39641 = h;
var G__39642 = i;
var G__39643 = j;
var G__39644 = k;
var G__39645 = l;
var G__39646 = m;
var G__39647 = n;
var G__39648 = o;
var G__39649 = p;
var G__39650 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__39634,G__39635,G__39636,G__39637,G__39638,G__39639,G__39640,G__39641,G__39642,G__39643,G__39644,G__39645,G__39646,G__39647,G__39648,G__39649,G__39650) : self__.dispatch_fn.call(null,G__39634,G__39635,G__39636,G__39637,G__39638,G__39639,G__39640,G__39641,G__39642,G__39643,G__39644,G__39645,G__39646,G__39647,G__39648,G__39649,G__39650));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39651 = a;
var G__39652 = b;
var G__39653 = c;
var G__39654 = d;
var G__39655 = e;
var G__39656 = f;
var G__39657 = g;
var G__39658 = h;
var G__39659 = i;
var G__39660 = j;
var G__39661 = k;
var G__39662 = l;
var G__39663 = m;
var G__39664 = n;
var G__39665 = o;
var G__39666 = p;
var G__39667 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__39651,G__39652,G__39653,G__39654,G__39655,G__39656,G__39657,G__39658,G__39659,G__39660,G__39661,G__39662,G__39663,G__39664,G__39665,G__39666,G__39667) : target_fn.call(null,G__39651,G__39652,G__39653,G__39654,G__39655,G__39656,G__39657,G__39658,G__39659,G__39660,G__39661,G__39662,G__39663,G__39664,G__39665,G__39666,G__39667));
});
var G__40202__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39668 = a;
var G__39669 = b;
var G__39670 = c;
var G__39671 = d;
var G__39672 = e;
var G__39673 = f;
var G__39674 = g;
var G__39675 = h;
var G__39676 = i;
var G__39677 = j;
var G__39678 = k;
var G__39679 = l;
var G__39680 = m;
var G__39681 = n;
var G__39682 = o;
var G__39683 = p;
var G__39684 = q;
var G__39685 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__39668,G__39669,G__39670,G__39671,G__39672,G__39673,G__39674,G__39675,G__39676,G__39677,G__39678,G__39679,G__39680,G__39681,G__39682,G__39683,G__39684,G__39685) : self__.dispatch_fn.call(null,G__39668,G__39669,G__39670,G__39671,G__39672,G__39673,G__39674,G__39675,G__39676,G__39677,G__39678,G__39679,G__39680,G__39681,G__39682,G__39683,G__39684,G__39685));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39686 = a;
var G__39687 = b;
var G__39688 = c;
var G__39689 = d;
var G__39690 = e;
var G__39691 = f;
var G__39692 = g;
var G__39693 = h;
var G__39694 = i;
var G__39695 = j;
var G__39696 = k;
var G__39697 = l;
var G__39698 = m;
var G__39699 = n;
var G__39700 = o;
var G__39701 = p;
var G__39702 = q;
var G__39703 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__39686,G__39687,G__39688,G__39689,G__39690,G__39691,G__39692,G__39693,G__39694,G__39695,G__39696,G__39697,G__39698,G__39699,G__39700,G__39701,G__39702,G__39703) : target_fn.call(null,G__39686,G__39687,G__39688,G__39689,G__39690,G__39691,G__39692,G__39693,G__39694,G__39695,G__39696,G__39697,G__39698,G__39699,G__39700,G__39701,G__39702,G__39703));
});
var G__40202__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39704 = a;
var G__39705 = b;
var G__39706 = c;
var G__39707 = d;
var G__39708 = e;
var G__39709 = f;
var G__39710 = g;
var G__39711 = h;
var G__39712 = i;
var G__39713 = j;
var G__39714 = k;
var G__39715 = l;
var G__39716 = m;
var G__39717 = n;
var G__39718 = o;
var G__39719 = p;
var G__39720 = q;
var G__39721 = r;
var G__39722 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__39704,G__39705,G__39706,G__39707,G__39708,G__39709,G__39710,G__39711,G__39712,G__39713,G__39714,G__39715,G__39716,G__39717,G__39718,G__39719,G__39720,G__39721,G__39722) : self__.dispatch_fn.call(null,G__39704,G__39705,G__39706,G__39707,G__39708,G__39709,G__39710,G__39711,G__39712,G__39713,G__39714,G__39715,G__39716,G__39717,G__39718,G__39719,G__39720,G__39721,G__39722));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39723 = a;
var G__39724 = b;
var G__39725 = c;
var G__39726 = d;
var G__39727 = e;
var G__39728 = f;
var G__39729 = g;
var G__39730 = h;
var G__39731 = i;
var G__39732 = j;
var G__39733 = k;
var G__39734 = l;
var G__39735 = m;
var G__39736 = n;
var G__39737 = o;
var G__39738 = p;
var G__39739 = q;
var G__39740 = r;
var G__39741 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__39723,G__39724,G__39725,G__39726,G__39727,G__39728,G__39729,G__39730,G__39731,G__39732,G__39733,G__39734,G__39735,G__39736,G__39737,G__39738,G__39739,G__39740,G__39741) : target_fn.call(null,G__39723,G__39724,G__39725,G__39726,G__39727,G__39728,G__39729,G__39730,G__39731,G__39732,G__39733,G__39734,G__39735,G__39736,G__39737,G__39738,G__39739,G__39740,G__39741));
});
var G__40202__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__39742 = a;
var G__39743 = b;
var G__39744 = c;
var G__39745 = d;
var G__39746 = e;
var G__39747 = f;
var G__39748 = g;
var G__39749 = h;
var G__39750 = i;
var G__39751 = j;
var G__39752 = k;
var G__39753 = l;
var G__39754 = m;
var G__39755 = n;
var G__39756 = o;
var G__39757 = p;
var G__39758 = q;
var G__39759 = r;
var G__39760 = s;
var G__39761 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__39742,G__39743,G__39744,G__39745,G__39746,G__39747,G__39748,G__39749,G__39750,G__39751,G__39752,G__39753,G__39754,G__39755,G__39756,G__39757,G__39758,G__39759,G__39760,G__39761) : self__.dispatch_fn.call(null,G__39742,G__39743,G__39744,G__39745,G__39746,G__39747,G__39748,G__39749,G__39750,G__39751,G__39752,G__39753,G__39754,G__39755,G__39756,G__39757,G__39758,G__39759,G__39760,G__39761));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39762 = a;
var G__39763 = b;
var G__39764 = c;
var G__39765 = d;
var G__39766 = e;
var G__39767 = f;
var G__39768 = g;
var G__39769 = h;
var G__39770 = i;
var G__39771 = j;
var G__39772 = k;
var G__39773 = l;
var G__39774 = m;
var G__39775 = n;
var G__39776 = o;
var G__39777 = p;
var G__39778 = q;
var G__39779 = r;
var G__39780 = s;
var G__39781 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__39762,G__39763,G__39764,G__39765,G__39766,G__39767,G__39768,G__39769,G__39770,G__39771,G__39772,G__39773,G__39774,G__39775,G__39776,G__39777,G__39778,G__39779,G__39780,G__39781) : target_fn.call(null,G__39762,G__39763,G__39764,G__39765,G__39766,G__39767,G__39768,G__39769,G__39770,G__39771,G__39772,G__39773,G__39774,G__39775,G__39776,G__39777,G__39778,G__39779,G__39780,G__39781));
});
var G__40202__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__40202 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__40202__1.call(this,self__);
case 2:
return G__40202__2.call(this,self__,a);
case 3:
return G__40202__3.call(this,self__,a,b);
case 4:
return G__40202__4.call(this,self__,a,b,c);
case 5:
return G__40202__5.call(this,self__,a,b,c,d);
case 6:
return G__40202__6.call(this,self__,a,b,c,d,e);
case 7:
return G__40202__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__40202__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__40202__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__40202__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__40202__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__40202__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__40202__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__40202__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__40202__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__40202__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__40202__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__40202__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__40202__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__40202__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__40202__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__40202__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__40202.cljs$core$IFn$_invoke$arity$1 = G__40202__1;
G__40202.cljs$core$IFn$_invoke$arity$2 = G__40202__2;
G__40202.cljs$core$IFn$_invoke$arity$3 = G__40202__3;
G__40202.cljs$core$IFn$_invoke$arity$4 = G__40202__4;
G__40202.cljs$core$IFn$_invoke$arity$5 = G__40202__5;
G__40202.cljs$core$IFn$_invoke$arity$6 = G__40202__6;
G__40202.cljs$core$IFn$_invoke$arity$7 = G__40202__7;
G__40202.cljs$core$IFn$_invoke$arity$8 = G__40202__8;
G__40202.cljs$core$IFn$_invoke$arity$9 = G__40202__9;
G__40202.cljs$core$IFn$_invoke$arity$10 = G__40202__10;
G__40202.cljs$core$IFn$_invoke$arity$11 = G__40202__11;
G__40202.cljs$core$IFn$_invoke$arity$12 = G__40202__12;
G__40202.cljs$core$IFn$_invoke$arity$13 = G__40202__13;
G__40202.cljs$core$IFn$_invoke$arity$14 = G__40202__14;
G__40202.cljs$core$IFn$_invoke$arity$15 = G__40202__15;
G__40202.cljs$core$IFn$_invoke$arity$16 = G__40202__16;
G__40202.cljs$core$IFn$_invoke$arity$17 = G__40202__17;
G__40202.cljs$core$IFn$_invoke$arity$18 = G__40202__18;
G__40202.cljs$core$IFn$_invoke$arity$19 = G__40202__19;
G__40202.cljs$core$IFn$_invoke$arity$20 = G__40202__20;
G__40202.cljs$core$IFn$_invoke$arity$21 = G__40202__21;
G__40202.cljs$core$IFn$_invoke$arity$22 = G__40202__22;
return G__40202;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args39354){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args39354)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39782 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__39782) : self__.dispatch_fn.call(null,G__39782));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39783 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__39783) : target_fn.call(null,G__39783));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39784 = a;
var G__39785 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__39784,G__39785) : self__.dispatch_fn.call(null,G__39784,G__39785));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39786 = a;
var G__39787 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__39786,G__39787) : target_fn.call(null,G__39786,G__39787));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39788 = a;
var G__39789 = b;
var G__39790 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__39788,G__39789,G__39790) : self__.dispatch_fn.call(null,G__39788,G__39789,G__39790));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39791 = a;
var G__39792 = b;
var G__39793 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__39791,G__39792,G__39793) : target_fn.call(null,G__39791,G__39792,G__39793));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39794 = a;
var G__39795 = b;
var G__39796 = c;
var G__39797 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__39794,G__39795,G__39796,G__39797) : self__.dispatch_fn.call(null,G__39794,G__39795,G__39796,G__39797));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39798 = a;
var G__39799 = b;
var G__39800 = c;
var G__39801 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__39798,G__39799,G__39800,G__39801) : target_fn.call(null,G__39798,G__39799,G__39800,G__39801));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39802 = a;
var G__39803 = b;
var G__39804 = c;
var G__39805 = d;
var G__39806 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__39802,G__39803,G__39804,G__39805,G__39806) : self__.dispatch_fn.call(null,G__39802,G__39803,G__39804,G__39805,G__39806));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39807 = a;
var G__39808 = b;
var G__39809 = c;
var G__39810 = d;
var G__39811 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__39807,G__39808,G__39809,G__39810,G__39811) : target_fn.call(null,G__39807,G__39808,G__39809,G__39810,G__39811));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39812 = a;
var G__39813 = b;
var G__39814 = c;
var G__39815 = d;
var G__39816 = e;
var G__39817 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__39812,G__39813,G__39814,G__39815,G__39816,G__39817) : self__.dispatch_fn.call(null,G__39812,G__39813,G__39814,G__39815,G__39816,G__39817));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39818 = a;
var G__39819 = b;
var G__39820 = c;
var G__39821 = d;
var G__39822 = e;
var G__39823 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__39818,G__39819,G__39820,G__39821,G__39822,G__39823) : target_fn.call(null,G__39818,G__39819,G__39820,G__39821,G__39822,G__39823));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39824 = a;
var G__39825 = b;
var G__39826 = c;
var G__39827 = d;
var G__39828 = e;
var G__39829 = f;
var G__39830 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__39824,G__39825,G__39826,G__39827,G__39828,G__39829,G__39830) : self__.dispatch_fn.call(null,G__39824,G__39825,G__39826,G__39827,G__39828,G__39829,G__39830));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39831 = a;
var G__39832 = b;
var G__39833 = c;
var G__39834 = d;
var G__39835 = e;
var G__39836 = f;
var G__39837 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__39831,G__39832,G__39833,G__39834,G__39835,G__39836,G__39837) : target_fn.call(null,G__39831,G__39832,G__39833,G__39834,G__39835,G__39836,G__39837));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39838 = a;
var G__39839 = b;
var G__39840 = c;
var G__39841 = d;
var G__39842 = e;
var G__39843 = f;
var G__39844 = g;
var G__39845 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__39838,G__39839,G__39840,G__39841,G__39842,G__39843,G__39844,G__39845) : self__.dispatch_fn.call(null,G__39838,G__39839,G__39840,G__39841,G__39842,G__39843,G__39844,G__39845));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39846 = a;
var G__39847 = b;
var G__39848 = c;
var G__39849 = d;
var G__39850 = e;
var G__39851 = f;
var G__39852 = g;
var G__39853 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__39846,G__39847,G__39848,G__39849,G__39850,G__39851,G__39852,G__39853) : target_fn.call(null,G__39846,G__39847,G__39848,G__39849,G__39850,G__39851,G__39852,G__39853));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39854 = a;
var G__39855 = b;
var G__39856 = c;
var G__39857 = d;
var G__39858 = e;
var G__39859 = f;
var G__39860 = g;
var G__39861 = h;
var G__39862 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__39854,G__39855,G__39856,G__39857,G__39858,G__39859,G__39860,G__39861,G__39862) : self__.dispatch_fn.call(null,G__39854,G__39855,G__39856,G__39857,G__39858,G__39859,G__39860,G__39861,G__39862));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39863 = a;
var G__39864 = b;
var G__39865 = c;
var G__39866 = d;
var G__39867 = e;
var G__39868 = f;
var G__39869 = g;
var G__39870 = h;
var G__39871 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__39863,G__39864,G__39865,G__39866,G__39867,G__39868,G__39869,G__39870,G__39871) : target_fn.call(null,G__39863,G__39864,G__39865,G__39866,G__39867,G__39868,G__39869,G__39870,G__39871));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39872 = a;
var G__39873 = b;
var G__39874 = c;
var G__39875 = d;
var G__39876 = e;
var G__39877 = f;
var G__39878 = g;
var G__39879 = h;
var G__39880 = i;
var G__39881 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__39872,G__39873,G__39874,G__39875,G__39876,G__39877,G__39878,G__39879,G__39880,G__39881) : self__.dispatch_fn.call(null,G__39872,G__39873,G__39874,G__39875,G__39876,G__39877,G__39878,G__39879,G__39880,G__39881));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39882 = a;
var G__39883 = b;
var G__39884 = c;
var G__39885 = d;
var G__39886 = e;
var G__39887 = f;
var G__39888 = g;
var G__39889 = h;
var G__39890 = i;
var G__39891 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__39882,G__39883,G__39884,G__39885,G__39886,G__39887,G__39888,G__39889,G__39890,G__39891) : target_fn.call(null,G__39882,G__39883,G__39884,G__39885,G__39886,G__39887,G__39888,G__39889,G__39890,G__39891));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39892 = a;
var G__39893 = b;
var G__39894 = c;
var G__39895 = d;
var G__39896 = e;
var G__39897 = f;
var G__39898 = g;
var G__39899 = h;
var G__39900 = i;
var G__39901 = j;
var G__39902 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__39892,G__39893,G__39894,G__39895,G__39896,G__39897,G__39898,G__39899,G__39900,G__39901,G__39902) : self__.dispatch_fn.call(null,G__39892,G__39893,G__39894,G__39895,G__39896,G__39897,G__39898,G__39899,G__39900,G__39901,G__39902));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39903 = a;
var G__39904 = b;
var G__39905 = c;
var G__39906 = d;
var G__39907 = e;
var G__39908 = f;
var G__39909 = g;
var G__39910 = h;
var G__39911 = i;
var G__39912 = j;
var G__39913 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__39903,G__39904,G__39905,G__39906,G__39907,G__39908,G__39909,G__39910,G__39911,G__39912,G__39913) : target_fn.call(null,G__39903,G__39904,G__39905,G__39906,G__39907,G__39908,G__39909,G__39910,G__39911,G__39912,G__39913));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39914 = a;
var G__39915 = b;
var G__39916 = c;
var G__39917 = d;
var G__39918 = e;
var G__39919 = f;
var G__39920 = g;
var G__39921 = h;
var G__39922 = i;
var G__39923 = j;
var G__39924 = k;
var G__39925 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__39914,G__39915,G__39916,G__39917,G__39918,G__39919,G__39920,G__39921,G__39922,G__39923,G__39924,G__39925) : self__.dispatch_fn.call(null,G__39914,G__39915,G__39916,G__39917,G__39918,G__39919,G__39920,G__39921,G__39922,G__39923,G__39924,G__39925));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39926 = a;
var G__39927 = b;
var G__39928 = c;
var G__39929 = d;
var G__39930 = e;
var G__39931 = f;
var G__39932 = g;
var G__39933 = h;
var G__39934 = i;
var G__39935 = j;
var G__39936 = k;
var G__39937 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__39926,G__39927,G__39928,G__39929,G__39930,G__39931,G__39932,G__39933,G__39934,G__39935,G__39936,G__39937) : target_fn.call(null,G__39926,G__39927,G__39928,G__39929,G__39930,G__39931,G__39932,G__39933,G__39934,G__39935,G__39936,G__39937));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39938 = a;
var G__39939 = b;
var G__39940 = c;
var G__39941 = d;
var G__39942 = e;
var G__39943 = f;
var G__39944 = g;
var G__39945 = h;
var G__39946 = i;
var G__39947 = j;
var G__39948 = k;
var G__39949 = l;
var G__39950 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__39938,G__39939,G__39940,G__39941,G__39942,G__39943,G__39944,G__39945,G__39946,G__39947,G__39948,G__39949,G__39950) : self__.dispatch_fn.call(null,G__39938,G__39939,G__39940,G__39941,G__39942,G__39943,G__39944,G__39945,G__39946,G__39947,G__39948,G__39949,G__39950));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39951 = a;
var G__39952 = b;
var G__39953 = c;
var G__39954 = d;
var G__39955 = e;
var G__39956 = f;
var G__39957 = g;
var G__39958 = h;
var G__39959 = i;
var G__39960 = j;
var G__39961 = k;
var G__39962 = l;
var G__39963 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__39951,G__39952,G__39953,G__39954,G__39955,G__39956,G__39957,G__39958,G__39959,G__39960,G__39961,G__39962,G__39963) : target_fn.call(null,G__39951,G__39952,G__39953,G__39954,G__39955,G__39956,G__39957,G__39958,G__39959,G__39960,G__39961,G__39962,G__39963));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39964 = a;
var G__39965 = b;
var G__39966 = c;
var G__39967 = d;
var G__39968 = e;
var G__39969 = f;
var G__39970 = g;
var G__39971 = h;
var G__39972 = i;
var G__39973 = j;
var G__39974 = k;
var G__39975 = l;
var G__39976 = m;
var G__39977 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__39964,G__39965,G__39966,G__39967,G__39968,G__39969,G__39970,G__39971,G__39972,G__39973,G__39974,G__39975,G__39976,G__39977) : self__.dispatch_fn.call(null,G__39964,G__39965,G__39966,G__39967,G__39968,G__39969,G__39970,G__39971,G__39972,G__39973,G__39974,G__39975,G__39976,G__39977));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__39978 = a;
var G__39979 = b;
var G__39980 = c;
var G__39981 = d;
var G__39982 = e;
var G__39983 = f;
var G__39984 = g;
var G__39985 = h;
var G__39986 = i;
var G__39987 = j;
var G__39988 = k;
var G__39989 = l;
var G__39990 = m;
var G__39991 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__39978,G__39979,G__39980,G__39981,G__39982,G__39983,G__39984,G__39985,G__39986,G__39987,G__39988,G__39989,G__39990,G__39991) : target_fn.call(null,G__39978,G__39979,G__39980,G__39981,G__39982,G__39983,G__39984,G__39985,G__39986,G__39987,G__39988,G__39989,G__39990,G__39991));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__39992 = a;
var G__39993 = b;
var G__39994 = c;
var G__39995 = d;
var G__39996 = e;
var G__39997 = f;
var G__39998 = g;
var G__39999 = h;
var G__40000 = i;
var G__40001 = j;
var G__40002 = k;
var G__40003 = l;
var G__40004 = m;
var G__40005 = n;
var G__40006 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__39992,G__39993,G__39994,G__39995,G__39996,G__39997,G__39998,G__39999,G__40000,G__40001,G__40002,G__40003,G__40004,G__40005,G__40006) : self__.dispatch_fn.call(null,G__39992,G__39993,G__39994,G__39995,G__39996,G__39997,G__39998,G__39999,G__40000,G__40001,G__40002,G__40003,G__40004,G__40005,G__40006));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__40007 = a;
var G__40008 = b;
var G__40009 = c;
var G__40010 = d;
var G__40011 = e;
var G__40012 = f;
var G__40013 = g;
var G__40014 = h;
var G__40015 = i;
var G__40016 = j;
var G__40017 = k;
var G__40018 = l;
var G__40019 = m;
var G__40020 = n;
var G__40021 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__40007,G__40008,G__40009,G__40010,G__40011,G__40012,G__40013,G__40014,G__40015,G__40016,G__40017,G__40018,G__40019,G__40020,G__40021) : target_fn.call(null,G__40007,G__40008,G__40009,G__40010,G__40011,G__40012,G__40013,G__40014,G__40015,G__40016,G__40017,G__40018,G__40019,G__40020,G__40021));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__40022 = a;
var G__40023 = b;
var G__40024 = c;
var G__40025 = d;
var G__40026 = e;
var G__40027 = f;
var G__40028 = g;
var G__40029 = h;
var G__40030 = i;
var G__40031 = j;
var G__40032 = k;
var G__40033 = l;
var G__40034 = m;
var G__40035 = n;
var G__40036 = o;
var G__40037 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__40022,G__40023,G__40024,G__40025,G__40026,G__40027,G__40028,G__40029,G__40030,G__40031,G__40032,G__40033,G__40034,G__40035,G__40036,G__40037) : self__.dispatch_fn.call(null,G__40022,G__40023,G__40024,G__40025,G__40026,G__40027,G__40028,G__40029,G__40030,G__40031,G__40032,G__40033,G__40034,G__40035,G__40036,G__40037));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__40038 = a;
var G__40039 = b;
var G__40040 = c;
var G__40041 = d;
var G__40042 = e;
var G__40043 = f;
var G__40044 = g;
var G__40045 = h;
var G__40046 = i;
var G__40047 = j;
var G__40048 = k;
var G__40049 = l;
var G__40050 = m;
var G__40051 = n;
var G__40052 = o;
var G__40053 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__40038,G__40039,G__40040,G__40041,G__40042,G__40043,G__40044,G__40045,G__40046,G__40047,G__40048,G__40049,G__40050,G__40051,G__40052,G__40053) : target_fn.call(null,G__40038,G__40039,G__40040,G__40041,G__40042,G__40043,G__40044,G__40045,G__40046,G__40047,G__40048,G__40049,G__40050,G__40051,G__40052,G__40053));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__40054 = a;
var G__40055 = b;
var G__40056 = c;
var G__40057 = d;
var G__40058 = e;
var G__40059 = f;
var G__40060 = g;
var G__40061 = h;
var G__40062 = i;
var G__40063 = j;
var G__40064 = k;
var G__40065 = l;
var G__40066 = m;
var G__40067 = n;
var G__40068 = o;
var G__40069 = p;
var G__40070 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__40054,G__40055,G__40056,G__40057,G__40058,G__40059,G__40060,G__40061,G__40062,G__40063,G__40064,G__40065,G__40066,G__40067,G__40068,G__40069,G__40070) : self__.dispatch_fn.call(null,G__40054,G__40055,G__40056,G__40057,G__40058,G__40059,G__40060,G__40061,G__40062,G__40063,G__40064,G__40065,G__40066,G__40067,G__40068,G__40069,G__40070));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__40071 = a;
var G__40072 = b;
var G__40073 = c;
var G__40074 = d;
var G__40075 = e;
var G__40076 = f;
var G__40077 = g;
var G__40078 = h;
var G__40079 = i;
var G__40080 = j;
var G__40081 = k;
var G__40082 = l;
var G__40083 = m;
var G__40084 = n;
var G__40085 = o;
var G__40086 = p;
var G__40087 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__40071,G__40072,G__40073,G__40074,G__40075,G__40076,G__40077,G__40078,G__40079,G__40080,G__40081,G__40082,G__40083,G__40084,G__40085,G__40086,G__40087) : target_fn.call(null,G__40071,G__40072,G__40073,G__40074,G__40075,G__40076,G__40077,G__40078,G__40079,G__40080,G__40081,G__40082,G__40083,G__40084,G__40085,G__40086,G__40087));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__40088 = a;
var G__40089 = b;
var G__40090 = c;
var G__40091 = d;
var G__40092 = e;
var G__40093 = f;
var G__40094 = g;
var G__40095 = h;
var G__40096 = i;
var G__40097 = j;
var G__40098 = k;
var G__40099 = l;
var G__40100 = m;
var G__40101 = n;
var G__40102 = o;
var G__40103 = p;
var G__40104 = q;
var G__40105 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__40088,G__40089,G__40090,G__40091,G__40092,G__40093,G__40094,G__40095,G__40096,G__40097,G__40098,G__40099,G__40100,G__40101,G__40102,G__40103,G__40104,G__40105) : self__.dispatch_fn.call(null,G__40088,G__40089,G__40090,G__40091,G__40092,G__40093,G__40094,G__40095,G__40096,G__40097,G__40098,G__40099,G__40100,G__40101,G__40102,G__40103,G__40104,G__40105));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__40106 = a;
var G__40107 = b;
var G__40108 = c;
var G__40109 = d;
var G__40110 = e;
var G__40111 = f;
var G__40112 = g;
var G__40113 = h;
var G__40114 = i;
var G__40115 = j;
var G__40116 = k;
var G__40117 = l;
var G__40118 = m;
var G__40119 = n;
var G__40120 = o;
var G__40121 = p;
var G__40122 = q;
var G__40123 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__40106,G__40107,G__40108,G__40109,G__40110,G__40111,G__40112,G__40113,G__40114,G__40115,G__40116,G__40117,G__40118,G__40119,G__40120,G__40121,G__40122,G__40123) : target_fn.call(null,G__40106,G__40107,G__40108,G__40109,G__40110,G__40111,G__40112,G__40113,G__40114,G__40115,G__40116,G__40117,G__40118,G__40119,G__40120,G__40121,G__40122,G__40123));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__40124 = a;
var G__40125 = b;
var G__40126 = c;
var G__40127 = d;
var G__40128 = e;
var G__40129 = f;
var G__40130 = g;
var G__40131 = h;
var G__40132 = i;
var G__40133 = j;
var G__40134 = k;
var G__40135 = l;
var G__40136 = m;
var G__40137 = n;
var G__40138 = o;
var G__40139 = p;
var G__40140 = q;
var G__40141 = r;
var G__40142 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__40124,G__40125,G__40126,G__40127,G__40128,G__40129,G__40130,G__40131,G__40132,G__40133,G__40134,G__40135,G__40136,G__40137,G__40138,G__40139,G__40140,G__40141,G__40142) : self__.dispatch_fn.call(null,G__40124,G__40125,G__40126,G__40127,G__40128,G__40129,G__40130,G__40131,G__40132,G__40133,G__40134,G__40135,G__40136,G__40137,G__40138,G__40139,G__40140,G__40141,G__40142));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__40143 = a;
var G__40144 = b;
var G__40145 = c;
var G__40146 = d;
var G__40147 = e;
var G__40148 = f;
var G__40149 = g;
var G__40150 = h;
var G__40151 = i;
var G__40152 = j;
var G__40153 = k;
var G__40154 = l;
var G__40155 = m;
var G__40156 = n;
var G__40157 = o;
var G__40158 = p;
var G__40159 = q;
var G__40160 = r;
var G__40161 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__40143,G__40144,G__40145,G__40146,G__40147,G__40148,G__40149,G__40150,G__40151,G__40152,G__40153,G__40154,G__40155,G__40156,G__40157,G__40158,G__40159,G__40160,G__40161) : target_fn.call(null,G__40143,G__40144,G__40145,G__40146,G__40147,G__40148,G__40149,G__40150,G__40151,G__40152,G__40153,G__40154,G__40155,G__40156,G__40157,G__40158,G__40159,G__40160,G__40161));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__40162 = a;
var G__40163 = b;
var G__40164 = c;
var G__40165 = d;
var G__40166 = e;
var G__40167 = f;
var G__40168 = g;
var G__40169 = h;
var G__40170 = i;
var G__40171 = j;
var G__40172 = k;
var G__40173 = l;
var G__40174 = m;
var G__40175 = n;
var G__40176 = o;
var G__40177 = p;
var G__40178 = q;
var G__40179 = r;
var G__40180 = s;
var G__40181 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__40162,G__40163,G__40164,G__40165,G__40166,G__40167,G__40168,G__40169,G__40170,G__40171,G__40172,G__40173,G__40174,G__40175,G__40176,G__40177,G__40178,G__40179,G__40180,G__40181) : self__.dispatch_fn.call(null,G__40162,G__40163,G__40164,G__40165,G__40166,G__40167,G__40168,G__40169,G__40170,G__40171,G__40172,G__40173,G__40174,G__40175,G__40176,G__40177,G__40178,G__40179,G__40180,G__40181));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__40182 = a;
var G__40183 = b;
var G__40184 = c;
var G__40185 = d;
var G__40186 = e;
var G__40187 = f;
var G__40188 = g;
var G__40189 = h;
var G__40190 = i;
var G__40191 = j;
var G__40192 = k;
var G__40193 = l;
var G__40194 = m;
var G__40195 = n;
var G__40196 = o;
var G__40197 = p;
var G__40198 = q;
var G__40199 = r;
var G__40200 = s;
var G__40201 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__40182,G__40183,G__40184,G__40185,G__40186,G__40187,G__40188,G__40189,G__40190,G__40191,G__40192,G__40193,G__40194,G__40195,G__40196,G__40197,G__40198,G__40199,G__40200,G__40201) : target_fn.call(null,G__40182,G__40183,G__40184,G__40185,G__40186,G__40187,G__40188,G__40189,G__40190,G__40191,G__40192,G__40193,G__40194,G__40195,G__40196,G__40197,G__40198,G__40199,G__40200,G__40201));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__40203 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__40203);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__24264__auto__,writer__24265__auto__,opt__24266__auto__){
return cljs.core._write(writer__24265__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__40208 = msg;
return Error(G__40208);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__40213 = x;
var G__40214 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__40213,G__40214) : pred.call(null,G__40213,G__40214));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__40215 = y;
var G__40216 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__40215,G__40216) : pred.call(null,G__40215,G__40216));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$18;
} else {
return cljs.core.constant$keyword$19;
}
});
